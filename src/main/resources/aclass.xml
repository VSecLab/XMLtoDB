<?xml version="1.0" encoding="UTF-8"?>
<cc>
    <a-class name="Composition" id="aco">
        <ac-introduction>

            The class <xref id="aco" show="link"/> encompasses five
            families. These families specify assurance requirements that
            are designed to provide confidence that a composed TOE will
            operate securely when relying upon security functionality
            provided by previously evaluated software, firmware or
            hardware components.

            Composition involves taking two or more IT entities
            successfully evaluated against CC security assurance
            requirements packages (base components and dependent
            components, see <xref id="aco-annex" show="link"/>) and
            combining them for use, with no further development of either
            IT entity. The development of additional IT entities is not
            included (entities that have not previously been the subject
            of a component evaluation). The composed TOE forms a new
            product that can be installed and integrated into any specific
            environment instance that meets the objectives for the
            environment.

            This approach does not provide an alternative approach for the
            evaluation of components. Composition under <xref id="aco" show="id"/> provides a composed TOE integrator a method, which
            can be used as an alternative to other assurance levels
            specified in the CC, to gain confidence in a TOE that is the
            combination of two or more successfully evaluated components
            without having to re-evaluate the composite TSF. (The composed
            TOE integrator is referred to as ``developer'' throughout the
            <xref id="aco" show="id"/> class, with any references to the
            developer of the base or dependent components clarified as
            such.)

            Composed Assurance Packages, as defined in Clauses <xref id="capclause" show="link"/> and <xref id="assurance-requirements-cap-structure" show="link"/>, is an
            assurance scale for composed TOEs. This assurance scale is
            required in addition to EALs because to combine components
            evaluated against EALs and gain a resulting EAL assurance, all
            SARs in the EAL have to be applied to the composed
            TOE. Although reuse can be made of the component TOE
            evaluation results, there are often additional aspects of the
            components that have to be considered in the composed TOE, as
            described in Annex <xref id="aco-interactions-IT-entities" show="link"/>. Due to the different parties involved in a
            composed TOE evaluation activity it is generally not possible
            to gain all necessary evidence about these additional aspects
            of the components to apply the appropriate EAL. Hence, CAPs
            have been defined to address the issue of combining evaluated
            components and gaining a meaningful result. This is discussed
            further in <xref id="aco-annex" show="link"/>.

            <figure entity="a-class/graphics/aco_family_relation.png" width="textwidth" height="!" title="Relationship between ACO       families and interactions between components" id="aco-family-relation"/>


            In a composed TOE it is generally the case that one component
            relies on the services provided by another component. The
            component requiring services is termed the dependent component
            and the component providing the services is termed the base
            component. This interaction and distinct is discussed further
            in Annex B. It is assumed to be the case that the developer of
            the dependent component is supporting the composed TOE
            evaluation in some manner (as developer, sponsor, or just
            cooperating and providing the necessary evaluation evidence
            from the dependent component evaluation) The <xref id="aco" show="id"/> components included in the CAP assurance packages
            should not be used as augmentations for component TOE
            evaluations, as this would provide no meaningful assurance for
            the component.

            The families within the <xref id="aco" show="id"/> class
            interact in a similar manner to the <xref id="adv" show="id"/>, <xref id="ate" show="id"/> and <xref id="ava" show="id"/> classes in a component TOE evaluation and hence
            leverage from the specification of requirements from those
            classes where applicable. There are however a few items
            specific to composed TOE evaluations. To determine how the
            components interact and identify any deviations from the
            evaluations of the components, the dependencies that the
            dependent component has upon the underlying base component are
            identified (<xref id="aco_rel" show="id"/>). This reliance on
            the base component is specified in terms of the interfaces
            through which the dependent component makes calls for services
            in support of the dependent component SFRs. The interfaces,
            and at higher levels the supporting behaviour, provided by the
            base component in response to those service requests are
            analysed in <xref id="aco_dev" show="id"/>. The <xref id="aco_dev" show="id"/> family is based on the <xref id="adv_tds" show="id"/> family, as at the simplest level the
            TSF of each component can be viewed as a subsystem of the
            composed TOE, with additional portions of each component seen
            as additional subsystems. Therefore, the interfaces between
            the components are seen as interactions between subsystems in
            a component TOE evaluation.

            It is possible that the interfaces and supporting behaviour
            descriptions provided for <xref id="aco_dev" show="id"/> are
            incomplete. This is determined during the conduct of <xref id="aco_cor" show="id"/>. The <xref id="aco_cor" show="id"/>
            family takes the outputs of <xref id="aco_rel" show="id"/> and
            <xref id="aco_dev" show="id"/> and determines whether the
            components are being used in their evaluated configuration and
            identifies where any specifications are incomplete, which are
            then identified as inputs into testing (<xref id="aco_ctt" show="id"/>) and vulnerability analysis (<xref id="aco_vul" show="id"/>) activities of the composed TOE.

            Testing of the composed TOE is performed to determine that the
            composed TOE exhibits the expected behaviour as determined by
            the composed TOE SFRs, and at higher levels demonstrates the
            compatibility of the interfaces between the components of the
            composed TOE.

            The vulnerability analysis of the composed TOE leverages from
            the outputs of the vulnerability analysis of the component
            evaluations. The composed TOE vulnerability analysis considers
            any residual vulnerabilities from the component evaluations to
            determine that the residual vulnerabilities are not applicable
            to the composed TOE. A search of publicly available
            information relating to the components is also performed to
            identify any issues reported in the components since the
            completion of the respective evaluations.

            The interaction between the <xref id="aco" show="id"/>
            families is depicted in Figure <xref id="aco-family-interaction" show="link"/> below. This shows by solid arrowed lines where
            the evidence and understanding gained in one family feeds into
            the next activity and the dashed arrows identify where an
            activity explicitly traces back to the composed TOE SFRs, as
            described above.

            <figure entity="a-class/graphics/aco_family_interaction.png" width="3cm" height="!" title="Relationship between ACO families" id="aco-family-interaction"/>


            Further discussion of the definition and interactions within
            composed TOEs is provided in <xref id="aco-annex" show="link"/>.
        </ac-introduction>
        <ac-overview>

            Assurance class <xref id="aco" show="link"/> defines
            requirements of the information necessary to ensure that two
            or more components, which have themselves been the subject of
            a CC evaluation, can be integrated in a secure manner.

            The <xref id="aco" show="link"/> assurance requirements will
            be applied to the composed TOE to:
            <list type="enumerated">
                <item>
                    determine that the required assurance is provided by the
                    base component;</item>
                <item>
                    determine that the base component and dependent component
                    are compatible; and</item>
                <item>
                    search for any vulnerabilities introduced through
                    composing the base and dependent components into a single
                    composed TOE entity.</item></list>
        </ac-overview>
        <ma-introduction>

            The goal of this activity is to determine whether the
            components can be integrated in a secure manner, as defined in
            the ST for the composed TOE. This is achieved through
            examination and testing of the interfaces between the
            components, supported by examination of the design of the
            components and the conduct of vulnerability analysis.
        </ma-introduction>
        <ma-application-notes>

            The <xref id="aco_rel" show="link"/> family identifies where
            the dependent component is reliant upon IT in its operational
            environment (satisfied by a base component in the composed TOE
            evaluation) in order to provide its own security
            services. This reliance is identified in terms of the
            interfaces expected by the dependent component to be provided
            by the base component. <xref id="aco_dev" show="link"/> then
            determines which interfaces of the base component were
            considered (as TSFI) during the component evaluation of the
            base component.

            It should be noted that <xref id="aco_rel" show="link"/> does
            not cover other evidence that may be needed to address the
            technical integration problem of composing components
            (e.g. descriptions of non-TSF interfaces of the operating
            system, rules for integration, etc.). This is outside the
            security assessment of the composition and is a functional
            composition issue.

            As part of <xref id="aco_ctt" show="link"/> the evaluator will
            perform testing of the composed TOE SFRs at the composed TOE
            interfaces and of the interfaces of the base component relied
            upon by the dependent component to confirm they operate as
            specified. The subset selected will consider the possible
            effects of changes to the configuration/use of the base
            component as used in the composed TOE. These changes are
            identified from the configuration of the base component
            determined during the base component evaluation. The developer
            will provide test evidence for each of the base component
            interfaces (the requirements for coverage are consistent with
            those applied to the evaluation of the base component).

            <xref id="aco_cor" show="link"/> requires the evaluator to
            determine whether the appropriate assurance measures have been
            applied to the base component, and whether the base component
            is being used in its evaluated configuration. This includes
            determination of whether all security functionality required
            by the dependent component was within the TSF of the base
            component. The <xref id="aco_cor" show="link"/> requirement
            may be met through the production of evidence that each of
            these is demonstrated to be upheld. This evidence may be in
            the form of the security target and a public report of the
            component evaluation (e.g. certification report).

            If, on the other hand, one of the above have not been upheld,
            then it may be possible that an argument can be made as to why
            the assurance gained during an original evaluation is
            unaffected. If this is not possible then additional evaluation
            evidence for those aspects of the base component not covered
            may have to be provided. This material is then assessed in
            <xref id="aco_dev" show="link"/>.

            For example, it may be the case as described in the
            Interactions between entities (see Annex <xref show="none" id="aco-interactions-IT-entities"/> in CC Part 3) that the
            dependent component requires the base component to provide
            more security functionality in the composed TOE than included
            in the base component evaluation. This would be determined
            during the application of the <xref id="aco_rel" show="link"/>
            and <xref id="aco_dev" show="link"/> families. In this case
            the composition rationale evidence provided for <xref id="aco_cor" show="link"/> would demonstrate that the
            assurance gained from the base component evaluation is
            unaffected. This may be achieved by means including:
            <list type="enumerated">
                <item>
                    Performing a re-evaluation of the base component focusing
                    on the evidence relating to the extended part of the
                    TSF;
                </item>
                <item>
                    Demonstrating that the extended part of the TSF cannot
                    affect other portions of the TSF, and providing evidence
                    that the extended part of the TSF provides the necessary
                    security functionality.
                </item>
            </list>

        </ma-application-notes>
        <a-family name="Composition rationale" id="aco_cor">
            <af-objectives>

                This family addresses the requirement to demonstrate that
                the base component can provide an appropriate level of
                assurance for use in composition.
            </af-objectives>
            <af-overview>

                The <xref id="aco_cor" show="link"/> family is used to
                determine whether or not the appropriate assurance measures
                have been applied to the base component for successful
                integration in the composed TOE. That is, the SARs claimed
                by the base component are consistent with the SARs in the
                assurance package for the composed TOE. (e.g. if the
                assurance package for the composed TOE included <xref id="aco_dev.3" show="link"/>, a base component that was
                evaluated against <xref id="adv_fsp.2" show="link"/> would
                not have had the appropriate assurance measures applied, as
                insufficient design evidence would have been
                examined.)

                The <xref id="aco_cor" show="link"/> family calls for
                evidence that the appropriate assurance is provided, without
                being specific about how this is achieved. If the
                appropriate evidence is not available, then it may be
                necessary to report an assessment of the residual risk to
                assist consumers of the composed TOE
                (e.g. accreditors). This report would need to identify the
                change to the base component that may have an effect on the
                assurance gained during the original evaluation, along with
                any known effects.


            </af-overview>
            <af-levelling-criteria>

                There is only a single component in this family.
            </af-levelling-criteria>
            <a-component name="Composition rationale" id="aco_cor.1">
                <aco-dependsoncomponent acomponent="aco_dev.1"/>
                <aco-dependsoncomponent acomponent="alc_cmc.1"/>
                <aco-dependsoncomponent acomponent="aco_rel.1"/>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed ST; </item>
                        <item>
                            the composition rationale; </item>
                        <item>
                            the reliance information;</item>
                        <item>
                            the development information;</item>
                        <item>
                            unique identifier.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_cor.1.1d">
                    The developer shall provide composition rationale for the
                    base component.
                </ae-developer>
                <ae-content id="aco_cor.1.1c">
                    The composition rationale shall demonstrate that a level of
                    assurance at least as high as that of the dependent
                    component has been obtained for the support functionality of
                    the base component, when the base component is configured as
                    required to support the TSF of the dependent component.
                </ae-content>
                <ae-evaluator id="aco_cor.1.1e">
                    The evaluator shall confirm that the information meets all
                    requirements for content and presentation of evidence.
                    <m-workunit id="aco_cor.1-1">
                        <ae-dc-element id="aco_cor.1.1c"/>

                        The evaluator shall examine the correspondence analysis
                        with the development information and the reliance
                        information to identify the interfaces that are relied
                        upon by the dependent component which are not detailed
                        in the development information.

                        The evaluator's goal in this work unit is two fold:
                        <list type="enumerated">
                            <item>
                                to determine which interfaces relied upon by the
                                dependent component have had the appropriate
                                assurance measures applied.</item>
                            <item>
                                to determine that the assurance package applied to
                                the base component during the base component
                                evaluation contained either the same assurance
                                requirements as those in the package applied to the
                                dependent component during its' evaluation, or
                                hierarchically higher assurance requirements.</item>
                        </list>

                        The evaluator may use the correspondence tracing in the
                        development information developed during the <xref id="aco_dev" show="link"/> activities (e.g. <xref id="aco_dev.1-2" show="link"/>, <xref id="aco_dev.2-4" show="link"/>, <xref id="aco_dev.3-6" show="link"/>) to
                        help identify the interfaces identified in the reliance
                        information that are not considered in the development
                        information.

                        The evaluator will record the SFR-enforcing interfaces
                        described in the reliance information that are not
                        included in the development information. These will
                        provide input to <xref id="aco_cor.1-3" show="link"/>
                        work unit, helping to identify the portions of the base
                        component in which further assurance is required.

                        If the both the base and dependent components were
                        evaluated against the same assurance package, then the
                        determination of whether the level of assurance in the
                        portions within the base component evaluation is at
                        least as high as that of the dependent component is
                        trivial. If however, the assurance packages applied to
                        the components during the component evaluations differ,
                        the evaluator needs to determine that the assurance
                        requirements applied to the base component are all
                        hierarchically higher to the assurance requirements
                        applied to the dependent component.
                    </m-workunit>
                    <m-workunit id="aco_cor.1-2">
                        <ae-dc-element id="aco_cor.1.1c"/>

                        The evaluator shall examine the composition rationale to
                        determine, for those included base component interfaces
                        on which the dependent TSF relies, whether the interface
                        was considered during the evaluation of the base
                        component.

                        The ST, component public evaluation report (e.g. certification
                        report) and guidance documents for the base component all
                        provide information on the scope and boundary of the base
                        component. The ST provides details of the logical scope and
                        boundary of the composed TOE, allowing the evaluator to
                        determine whether an interface relates to a portion of the
                        product that was within the scope of the evaluation. The
                        guidance documentation provides details of use of all interfaces
                        for the composed TOE. Although the guidance documentation may
                        include details of interfaces in the product that are not within
                        the scope of the evaluation, any such interfaces should be
                        identifiable, either from the scoping information in the ST or
                        through a portion of the guidance that deals with the evaluated
                        configuration. The public evaluation report may provide any
                        additional constraints on the use of the composed TOE that are
                        necessary.

                        Therefore, the combination of these inputs allows the
                        evaluator to determine whether an interface described in
                        the composition rationale has the necessary assurance
                        associated with it, or whether further assurance is
                        required. The evaluator will record those interfaces of
                        the base component for which additional assurance is
                        required, for consideration during <xref id="aco_cor.1-3" show="link"/>.
                    </m-workunit>
                    <m-workunit id="aco_cor.1-3">
                        <ae-dc-element id="aco_cor.1.1c"/>

                        The evaluator shall examine the composition rationale to
                        determine that the necessary assurance measures have
                        been applied to the base component.

                        The evaluation verdicts, and resultant assurance, for
                        the base component can be reused provided the same
                        portions of the base component are used in the composed
                        TOE and they are used in a consistent manner.

                        In order to determine whether the necessary assurance
                        measures have already been applied to the component, and
                        the portions of the component for which assurance
                        measures still need to be applied, the evaluator should
                        use the output of the <xref show="id" id="aco_dev"/>.*.2E action and the work units <xref id="aco_cor.1-1" show="link"/> and <xref id="aco_cor.1-2" show="link"/>:

                        <list type="enumerated">
                            <item>
                                For those interfaces identified in the reliance
                                information (<xref id="aco_rel" show="link"/>), but
                                not discussed in development information (<xref id="aco_dev" show="link"/>), additional information
                                is required. (Identified in <xref id="aco_cor.1-1" show="link"/>.)</item>
                            <item>
                                For those interfaces used inconsistently in the
                                composed TOE from the base component (difference
                                between the information provided in <xref id="aco_dev" show="link"/> and <xref id="aco_rel" show="link"/> the impact of the differences in use
                                need to be considered. (Identified in <xref id="aco_dev" show="id"/>.*.2E.)</item>
                            <item>
                                For those interfaces identified in composition
                                rationale for which no assurance has previously been
                                gained, additional information is
                                required. (Identified in <xref id="aco_cor.1-2" show="link"/>.)</item>
                            <item>
                                For those interfaces consistently described in the
                                reliance information, composition rationale and the
                                development information, no further action is
                                required as the results from the base component
                                evaluation can be re-used.</item></list>

                        The interfaces of the base component reported to be
                        required by the reliance information but not included in
                        the development information indicate the portions of the
                        base component where further assurance is required. The
                        interfaces identify the entry points into the base
                        component.

                        For those interfaces included in both the development
                        information and reliance information, the evaluator is
                        to determine whether the interfaces are being used in
                        the composed TOE in a manner that is consistent with the
                        base component evaluation. The method of use of the
                        interface will be considered during the <xref id="aco_dev" show="link"/> activities to determine that
                        the use of the interface is consistent in both the base
                        component and the composed TOE. The remaining
                        consideration is the determination of whether the
                        configurations of the base component and the composed
                        TOE are consistent. To determine this, the evaluator
                        will consider the guidance documentation of each to
                        ensure they are consistent (see further guidance below
                        regarding consistent guidance documentation). Any
                        deviation in the documentation will be further analysed
                        by the evaluation to determine the possible
                        effects.

                        For those interfaces that are consistently described in
                        the reliance information and development information,
                        and for which the guidance is consistent for the base
                        component and the composed TOE, the required level of
                        assurance has been provided.

                        The following subsubclauses provide guidance on how to
                        determine consistency between assurance gained in the
                        base component, the evidence provided for the composed
                        TOE, and the analysis performed by the evaluator in the
                        instances where inconsistencies are identified.
                        <subclause title="Development" id="aco_cor_1_development">

                            The reliance information identifies the interfaces in
                            the dependent component that are to be matched by the
                            base component. If an interface identified in the
                            reliance information is not identified in the
                            development information, then the composition
                            rationale is to provide a justification of how the
                            base component provides the required
                            interfaces.

                            If an interface identified in the reliance information
                            is identified in the development information, but
                            there are inconsistencies between the descriptions,
                            further analysis is required. The evaluator identifies
                            the differences in use of the base component as
                            considered in the base component evaluation and the
                            composed TOE evaluation. The evaluator will devise
                            testing to be performed (during the conduct of <xref id="aco_ctt" show="link"/>) to test the
                            interface.

                            The patch status of the base and dependent components
                            as used in the composed TOE should be compared to the
                            patch status of the components during the component
                            evaluations. If any patches have been applied to the
                            components, the composition rationale is to include
                            details of the patches, including any potential impact
                            to the SFRs of the evaluated component. The evaluator
                            should consider the details of the changes provided
                            and verify the accuracy of the potential impact of the
                            change on the component SFRs. The evaluator should
                            then consider whether the changes made by the patch
                            should be verified through testing, and will identify
                            the necessary testing approach.  The testing may take
                            the form of repeating the applicable
                            evaluator/developer testing performed for the
                            component evaluation of the component or it may be
                            necessary for the evaluator to devise new tests to
                            confirm the modified component.

                            If any of the individual components have been the
                            subject of assurance continuity activities since the
                            completion of the component evaluation, the evaluator
                            will consider the changes assessed in the assurance
                            continuity activities during the independent
                            vulnerability analysis activity for the composed TOE
                            (in <xref id="aco_vul" show="link"/>).
                        </subclause>
                        <subclause title="Guidance" id="aco_cor_1_guidance">

                            The guidance for the composed TOE is likely to make
                            substantial reference out to the guidance for the
                            individual components.  The minimal guidance expected
                            to be necessary is the identification of any ordering
                            dependencies in the application of guidance for the
                            dependent and base components, particularly during the
                            preparation (installation) of the composed TOE.

                            In addition to the application of the <xref id="agd_pre" show="link"/> and <xref id="agd_ope" show="link"/> families to the guidance for the
                            composed TOE, it is necessary to analyse the
                            consistency between the guidance for the components
                            and the composed TOE, to identify any
                            deviations.

                            If the composed TOE guidance refers out to the base
                            component and dependent component guidance, then the
                            consideration for consistency is limited to
                            consistency between the guidance documentation
                            provided for each of the components (i.e. consistency
                            between the base component guidance and the dependent
                            component guidance).  However, if additional guidance
                            is provided for the composed TOE, to that provided for
                            the components, greater analysis is required, as
                            consistency is also required between the guidance
                            documentation for the components and guidance
                            documentation for the composed TOE.

                            <italic>Consistent</italic> in this instance is
                            understood to mean that either the guidance is the
                            same or it places additional constraints on the
                            operation of the individual components when combined,
                            in a similar manner to <italic>refinement</italic> of
                            functional/assurance components.

                            With the information available (that used as input for
                            <xref id="aco_dev" show="link"/> or the development
                            aspects discussed above) the evaluator may be able to
                            determine all possible impacts of the deviation from
                            the configuration of the base component specified in
                            the component evaluation.  However, for high EALs
                            (where evaluation of the base component included <xref id="adv_tds" show="link"/> requirements) it is
                            possible that, unless detailed design abstractions for
                            the base component are delivered as part of the
                            development information for the composed TOE, the
                            possible impacts of the modification to the guidance
                            cannot be fully determined as the internals are
                            unknown.  In this case the evaluator will report the
                            residual risk of the analysis.

                            These residual risks are to be included in any public
                            evaluation report for the composed TOE.

                            The evaluator will note these variances in the
                            guidance for input into evaluator independent testing
                            activities (<xref id="aco_ctt" show="link"/>).

                            The guidance for the composed TOE may add to the
                            guidance for the components, particularly in terms of
                            installation and the ordering of installation steps
                            for the base component in relation to the installation
                            steps for the dependent component.  The ordering of
                            the steps for the installation of the individual
                            components should not change, however they may need to
                            be interleaved.  The evaluator will examine this
                            guidance to ensure that it still meets the requirement
                            of the <xref id="agd_pre" show="id"/> activity
                            performed during the evaluations of the
                            components.

                            It may be the case that the reliance information
                            identifies that interfaces of the base component, in
                            addition to those identified as TSFIs of the base
                            component, are relied upon by the dependent component
                            are identified in the reliance information. It may be
                            necessary for guidance to be provided for the use of
                            any such additional interfaces in the base
                            component. Provided the consumer of the composed TOE
                            is to receive the guidance documentation for the base
                            component, then the results of the <xref id="agd_pre" show="id"/> and <xref id="agd_ope" show="id"/>
                            verdicts for the base component can be reused for
                            those interfaces considered in the evaluation of the
                            base component. However, for the additional interfaces
                            relied upon by the dependent component, the evaluator
                            will need to determine that the guidance documentation
                            for the base component meets the requirements of <xref id="agd_pre" show="id"/> and <xref id="agd_ope" show="id"/>, as applied in the base component
                            evaluations.

                            For those interfaces considered during the base
                            component evaluation, and therefore, for which
                            assurance has already been gained, the evaluator will
                            ensure that the guidance for the use of each interface
                            for the composed TOE is consistent with that provided
                            for the base component. To determine the guidance for
                            the composed TOE is consistent with that for the base
                            component, the evaluator should perform a mapping for
                            each interface to the guidance provided for both the
                            composed TOE and the base component. The evaluator
                            then compares the guidance to determine
                            consistency.

                            Examples of additional constraints provided in
                            composed TOE guidance that would be considered to be
                            consistent with component guidance are (guidance for a
                            component is given followed by an example of guidance
                            for a composed TOE that would be considered to provide
                            additional constraints):
                            <list type="itemized">
                                <item>
                                    Component: The password length must be set to a
                                    minimum of 8 characters length, including
                                    alphabetic and numeric characters.</item>
                                <item>
                                    Composed TOE: The password length must be set to a
                                    minimum of 10 characters in length, including
                                    alphabetic and numeric characters and <italic>at
                                    least one of the following special characters: ( )
                                    { } ^ &lt; &gt; - _</italic></item>
                                <item>
                                    NOTE: It would only be acceptable to increase the
                                    password length to [<italic>integer &gt;
                                    8</italic>] characters while removing the mandate
                                    for the inclusion of both alphabetic and numeric
                                    characters for the composed TOE, if the same or a
                                    higher metric was achieved for the strength rating
                                    (taking into account the likelihood of the
                                    password being guessed).</item>
                                <item>
                                    Component: The following services are to be
                                    disabled in the registry settings: WWW Publishing
                                    Service and ICDBReporter service.</item>
                                <item>
                                    Composed TOE: The following services are to be
                                    disabled in the registry settings:
                                    <italic>Publishing Service, ICDBReporter service,
                                        Remote Procedure Call (RPC) Locator and Procedure
                                        Call (RPC) Service</italic>.</item>
                                <item>
                                    Component: Select the following attributes to be
                                    included in the accounting log files: date, time,
                                    type of event, subject identity and
                                    success/failure.</item>
                                <item>
                                    Composed TOE: Select the following attributes to
                                    be included in the accounting log files: date,
                                    time, type of event, subject identity,
                                    success/failure, <italic>event message and process
                                    thread</italic>.</item></list>

                            If the guidance for the composed TOE deviates (is not
                            a refinement) from that provided for the base
                            component, the evaluator will assess the potential
                            risks of the modification to the guidance. The
                            evaluator will use the information available
                            (including that provided in the public domain, the
                            architectural description of the base component in the
                            public evaluation report (e.g. certification report),
                            the context of the guidance from the remainder of the
                            guidance documentation) to identify likely impact of
                            the modification to the guidance on the SFRs of the
                            composed TOE.

                            If during the dependent component evaluation the trial
                            installation used the base component to satisfy the
                            environment requirements of the dependent component
                            this work unit for the composed TOE is considered to
                            be satisfied. If the base component was not used in
                            satisfaction of the work unit <xref id="agd_pre.1-3" show="link"/> during the dependent component
                            evaluation, the evaluator will apply the user
                            procedures provided for the composed TOE to prepare
                            the composed TOE, in accordance with the guidance
                            specified in <xref id="agd_pre.1-3" show="link"/>. This will allow the evaluator to
                            determine that the preparative guidance provided for
                            the composed TOE is sufficient to prepare the composed
                            TOE and its operational environment securely.
                        </subclause>
                        <subclause title="Life-cycle" id="aco_cor_1_life-cycle">
                            <subclause title="Delivery" id="aco_cor_1_delivery">

                                If there is a different delivery mechanism used for
                                the delivery of the composed TOE (i.e. the
                                components are not delivered to the consumer in
                                accordance with the secure delivery procedures
                                defined and assessed during the evaluation of the
                                components), the delivery procedures for the
                                composed TOE will require evaluation against the
                                <xref id="alc_del" show="link"/> requirements
                                applied during the components evaluations.

                                The composed TOE may be delivered as an integrated
                                product or may require the components to be
                                delivered separately.

                                If the components are delivered separately, the
                                results of the delivery of the base component and
                                dependent component are reused.  The delivery of the
                                base component is checked during the evaluator trial
                                installation of the dependent component, using the
                                specified guidance and checking the aspects of
                                delivery that are the responsibility of the user, as
                                described in the guidance documentation for the base
                                component.

                                If the composed TOE is delivered as a new entity,
                                then the method of delivery of that entity must be
                                considered in the composed TOE evaluation
                                activities.

                                The assessment of the delivery procedures for
                                composed TOE items is to be performed in accordance
                                with the methodology for <xref id="alc_del" show="link"/> as for any other [component] TOE,
                                ensuring any additional items (e.g. additional
                                guidance documents for the composed TOE) are
                                considered in the delivery procedures.
                            </subclause>
                            <subclause title="CM Capabilities" id="aco_cor_1_cm_cap">

                                The unique identification of the composed TOE is
                                considered during the application of <xref id="alc_cmc.1" show="link"/> and the items from
                                which that composed TOE is comprised are considered
                                during the application of <xref id="alc_cms.2" show="link"/>.

                                Although additional guidance may be produced for the
                                composed TOE, the unique identification of this
                                guidance (considered as part of the unique
                                identification of the composed TOE during <xref id="alc_cmc.1" show="link"/>) is considered
                                sufficient control of the guidance.

                                The verdicts of the remaining (not considered above)
                                <xref id="alc" show="none"/> activities can be
                                reused from the base component evaluation, as no
                                further development is performed during integration
                                of the composed TOE.

                                There are no additional considerations for
                                development security as the integration is assumed
                                to take place at either the consumer's site or, in
                                the instance that the composed TOE is delivered as
                                an integrated product, at the site of the dependent
                                component developer. Control at the consumer's site
                                is outside the consideration of the CC.  No
                                additional requirements or guidance are necessary if
                                integration is at the same site as that for the
                                dependent component, as all components are
                                considered to be configuration items for the
                                composed TOE, and should therefore be considered
                                under the dependent component developer's security
                                procedures anyway.

                                Tools and techniques adopted during integration will
                                be considered in the evidence provided by the
                                dependent component developer. Any tools/techniques
                                relevant to the base component will have been
                                considered during the evaluation of the base
                                component. For example, if the base component is
                                delivered as source code and requires compilation by
                                the consumer (e.g. dependent component developer who
                                is performing integration) the compiler would have
                                been specified and assessed, along with the
                                appropriate arguments, during evaluation of the base
                                component.

                                There is no life-cycle definition applicable to the
                                composed TOE, as no further development of items is
                                taking place.

                                The results of flaw remediation for a component are
                                not applicable to the composed TOE. If flaw
                                remediation is included in the assurance package for
                                the composed TOE, then the <xref id="alc_flr" show="link"/> requirements are to be applied during
                                the composed TOE evaluation (as for any
                                augmentation).
                            </subclause>
                        </subclause>
                        <subclause title="Tests" id="aco_cor_1_test">

                            The composed TOE will have been tested during the
                            conduct of the <xref show="none" id="ate"/> activities
                            for evaluation of the dependent component, as the
                            configurations used for testing of the dependent
                            component should have included the base component to
                            satisfy the requirements for IT in the operational
                            environment. If the base component was not used in the
                            testing of the dependent component for the dependent
                            component evaluation, or the configuration of either
                            component varied from their evaluated configurations,
                            then the developer testing performed for evaluation of
                            the dependent component to satisfy the <xref show="none" id="ate"/> requirements is to be repeated
                            on the composed TOE.
                        </subclause>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Development evidence" id="aco_dev">
            <af-objectives>

                This family sets out requirements for a specification of the
                base component in increasing levels of detail. Such
                information is required to gain confidence that the
                appropriate security functionality is provided to support
                the requirements of the dependent component (as identified
                in the reliance information).
            </af-objectives>
            <af-overview>

                <xref id="aco_dev" show="link"/> provides details of the
                base component interfaces and internals in increasing levels
                of detail, mirroring the level of detail provided by <xref id="aco_rel" show="link"/>. The application of these two
                families will provide the specifications of security
                services from each perspective of the TSF making the call
                and the TSF servicing the call.

                Having the two descriptions then allows a determination to
                be made, as part of the <xref id="aco_dev" show="link"/>
                activities (<xref show="id" id="aco_dev"/>.*.2E actions),
                that these two descriptions are consistent.
            </af-overview>
            <af-levelling-criteria>

                The components are levelled on the basis of increasing
                amounts of detail about the interfaces provided, and how
                they are implemented.
            </af-levelling-criteria>
            <af-application-notes>

                The TSF of the base component is often defined without
                knowledge of the dependencies of the possible applications
                with which it may by composed. The TSF of this base
                component is defined to include all parts of the base
                component that have to be relied upon for enforcement of the
                base component SFRs. This will include all parts of the base
                component required to implement the base component
                SFRs.

                The functional specification of the base component will
                describe the TSFI in terms of the interfaces the base
                component provides to allow an external entity to invoke
                operations of the TSF.  This includes interfaces to the
                human user to permit interaction with the operation of the
                TSF invoking SFRs and also interfaces allowing an external
                IT entity to make calls into the TSF.

                The functional specification only provides a description of
                what the TSF provides at its interface and the means by
                which that TSF functionality are invoked. Therefore, the
                functional specification does not necessarily provide a
                complete interface specification of all possible interfaces
                available between an external entity and the base
                component. It does not include what the TSF expects/requires
                from the operational environment. The description of what a
                dependent component TSF relies upon of a base component is
                considered in <xref id="aco_rel" show="link"/> and the
                development information evidence provides a response to the
                interfaces specified.

                The development information evidence includes a
                specification of the base component. This may be the
                evidence used during evaluation of the base component to
                satisfy the <xref show="id" id="adv"/> requirements, or may
                be another form of evidence produced by either the base
                component developer or the composed TOE developer. This
                specification of the base component is used during <xref id="aco_dev" show="link"/> to gain confidence that the
                appropriate security functionality is provided to support
                the requirements of the dependent component.  The level of
                detail required of this evidence increases to reflect the
                level of required assurance in the composed TOE.  This is
                expected to broadly reflect the increasing confidence gained
                from the application of the assurance packages to the
                components. The evaluator determines that this description
                of the base component is consistent with the reliance
                information provided for the dependent component.
            </af-application-notes>
            <a-component name="Functional Description" id="aco_dev.1">
                <aco-dependsoncomponent acomponent="aco_rel.1"/>
                <aco-objectives>

                    A description of the interfaces in the base component, on
                    which the dependent component relies, is required. This is
                    examined to determine whether or not it is consistent with
                    the description of interfaces on which the dependent
                    component relies, as provided in the reliance
                    information.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine that
                    the appropriate security functionality is provided by the
                    base component to support the dependent component. This is
                    achieved through examination of the interfaces of the base
                    component to determine that they are consistent with the
                    interfaces specified in the reliance information; those
                    required by the dependent component.

                    The description of the interfaces into the base component
                    is to be provided at a level of detail consistent with
                    <xref id="adv_fsp.2" show="link"/> although not all of the
                    aspects necessary for satisfaction of <xref id="adv_fsp.2" show="link"/> are required for <xref id="aco_dev.1" show="link"/>, as once the interface has been identified
                    and the purpose described the remaining detail of the
                    interface specification can be reused from evaluation of
                    the base component.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed ST;
                        </item>
                        <item>
                            the development information;
                        </item>
                        <item>
                            the reliance information.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_dev.1.1d">
                    The developer shall provide development information for the
                    base component.
                </ae-developer>
                <ae-content id="aco_dev.1.1c">
                    The development information shall describe the purpose of
                    each interface of the base component used in the composed
                    TOE.
                </ae-content>
                <ae-content id="aco_dev.1.2c">
                    The development information shall show correspondence
                    between the interfaces, used in the composed TOE, of the
                    base component and the dependent component to support the
                    TSF of the dependent component.
                </ae-content>
                <ae-evaluator id="aco_dev.1.1e">
                    The evaluator shall confirm that the information meets all
                    requirements for content and presentation of evidence.
                    <m-workunit id="aco_dev.1-1">
                        <ae-dc-element id="aco_dev.1.1c"/>

                        The evaluator shall examine the development information
                        to determine that it describes the purpose of each
                        interface.

                        The base component provides interfaces to support
                        interaction with the dependent component in the
                        provision of the dependent TSF. The purpose of each
                        interface is to be described at the same level as the
                        description of the interfaces to the dependent component
                        TSF functionality, as would be provided between
                        subsystems in the TOE design (<xref id="adv_tds.1" show="link"/>). This description is to provide the
                        reader with an understanding of how the base component
                        provides the services required by the dependent
                        component TSF.

                        This work unit may be satisfied by the provision of the
                        functional specification for the base component for
                        those interfaces that are TSFIs of the base
                        component.
                    </m-workunit>
                    <m-workunit id="aco_dev.1-2">
                        <ae-dc-element id="aco_dev.1.2c"/>

                        The evaluator shall examine the development information
                        to determine the correspondence, between the interfaces
                        of the base component and the interfaces on which the
                        dependent component relies, is accurate.

                        The correspondence between the interfaces of the base
                        component and the interfaces on which the dependent
                        component relies may take the form of a matrix or
                        table. The interfaces that are relied upon by the
                        dependent component are identified in the reliance
                        information (as examined during <xref id="aco_rel" show="link"/> activity).

                        There is, during this activity, no requirement to
                        determine completeness of the coverage of interfaces
                        that are relied upon by the dependent component, only
                        that the correspondence is correct and ensuring that
                        interfaces of the base component are mapped to
                        interfaces required by the dependent component wherever
                        possible. The completeness of the coverage is considered
                        in <xref id="aco_cor" show="link"/> activities.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_dev.1.2e">
                    The evaluator shall determine that the interface description
                    provided is consistent with the reliance information
                    provided for the dependent component.
                    <m-workunit id="aco_dev.1-3">

                        The evaluator shall examine the development information
                        and the reliance information to determine that the
                        interfaces are described consistently.

                        The evaluator's goal in this work unit is to determine
                        that the interfaces described in the development
                        information for the base component and the reliance
                        information for the dependent component are represented
                        consistently.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Basic evidence of design" id="aco_dev.2">
                <aco-hierarchical acomponent="aco_dev.1"/>
                <aco-dependsoncomponent acomponent="aco_rel.1"/>
                <aco-objectives>

                    A description of the interfaces in the base component, on
                    which the dependent component relies, is required. This is
                    examined to determine whether or not it is consistent with
                    the description of interfaces on which the dependent
                    component relies, as provided in the reliance
                    information.

                    In addition, the security behaviour of the base component
                    that supports the dependent component TSF is
                    described.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine that
                    the appropriate security functionality is provided by the
                    base component to support the dependent component. This is
                    achieved through examination of the interfaces and
                    associated security behaviour of the base component to
                    determine that they are consistent with the interfaces
                    specified in the reliance information; those required by
                    the dependent component.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed ST;
                        </item>
                        <item>
                            the development information;
                        </item>
                        <item>
                            reliance information.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_dev.2.1d">
                    The developer shall provide development information for the
                    base component.
                </ae-developer>
                <ae-content id="aco_dev.2.1c">
                    The development information shall describe the purpose and
                    method of use of each interface of the base component used
                    in the composed TOE.
                </ae-content>
                <ae-content id="aco_dev.2.2c">
                    The development information shall provide a high-level
                    description of the behaviour of the base component, which
                    supports the enforcement of the dependent component SFRs.
                </ae-content>
                <ae-content id="aco_dev.2.3c">
                    The development information shall show correspondence
                    between the interfaces, used in the composed TOE, of the
                    base component and the dependent component to support the
                    TSF of the dependent component.
                </ae-content>
                <ae-evaluator id="aco_dev.2.1e">
                    The evaluator shall confirm that the information meets all
                    requirements for content and presentation of evidence.
                    <m-workunit id="aco_dev.2-1">
                        <ae-dc-element id="aco_dev.2.1c"/>

                        The evaluator shall examine the development information
                        to determine that it describes the purpose of each
                        interface.

                        The base component provides interfaces to support
                        interaction with the dependent component in the
                        provision of the dependent TSF. The purpose of each
                        interface is to be described at the same level as the
                        description of the interfaces to the dependent component
                        TSF functionality, as would be provided between
                        subsystems in the TOE design (<xref id="adv_tds.1" show="link"/>). This description is to provide the
                        reader with an understanding of how the base component
                        provides the services required by the dependent
                        component TSF.

                        This work unit may be satisfied by the provision of the
                        functional specification for the base component for
                        those interfaces that are TSFIs of the base
                        component.
                    </m-workunit>
                    <m-workunit id="aco_dev.2-2">
                        <ae-dc-element id="aco_dev.2.1c"/>

                        The evaluator shall examine the development information
                        to determine that it describes the method of use for
                        each interface.

                        The method of use for an interface summarises how the
                        interface is manipulated in order to invoke the
                        operations and obtain results associated with the
                        interface. The evaluator should be able to determine
                        from reading this material in the development
                        information how to use each interface. This does not
                        necessarily mean that there needs to be a separate
                        method of use for each interface, as it may be possible
                        to describe in general how APIs are invoked, for
                        instance, and then identify each interface using that
                        general style.

                        This work unit may be satisfied by the provision of the
                        functional specification for the base component for
                        those interfaces that are TSFIs of the base
                        component. </m-workunit>
                    <m-workunit id="aco_dev.2-3">
                        <ae-dc-element id="aco_dev.2.2c"/>

                        The evaluator shall examine the development information
                        to determine that it describes the behaviour of the base
                        component that supports the enforcement of the dependent
                        component SFRs.

                        The dependent component invokes interfaces of the base
                        component for the provision of services by the base
                        component. For the interfaces of the base component that
                        are invoked, the development information shall provide a
                        high-level description of the associated security
                        behaviour of the base component. The description of the
                        base component security behaviour will outline how the
                        base component provides the necessary service when the
                        call to the interface is made. This description is to be
                        at a level similar to that provided for <xref id="adv_tds.1.4c" show="id"/>. Therefore, the provision
                        of the TOE design evidence from the base component
                        evaluation would satisfy this work unit, where the
                        interfaces invoked by the dependent component are TSFI
                        of the base component. If the interfaces invoked by the
                        dependent component are not TSFIs of the base component
                        it is the associated security behaviour will not
                        necessarily be described in the base component TOE
                        design evidence.
                    </m-workunit>
                    <m-workunit id="aco_dev.2-4">
                        <ae-dc-element id="aco_dev.2.3c"/>

                        The evaluator shall examine the development information
                        to determine the correspondence, between the interfaces
                        of the base component and the interfaces on which the
                        dependent component relies, is accurate.

                        The correspondence between the interfaces of the base
                        component and the interfaces on which the dependent
                        component relies may take the form of a matrix or
                        table. The interfaces that are relied upon by the
                        dependent component are identified in the reliance
                        information (as examined during <xref id="aco_rel" show="link"/>).

                        There is, during this activity, no requirement to
                        determine completeness of the coverage of interfaces
                        that are relied upon by the dependent component, only
                        that the correspondence is correct and ensuring that
                        interfaces of the base component are mapped to
                        interfaces required by the dependent component wherever
                        possible. The completeness of the coverage is considered
                        in <xref id="aco_cor" show="link"/> activities.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_dev.2.2e">
                    The evaluator shall determine that the interface description
                    provided is consistent with the reliance information
                    provided for the dependent component.
                    <m-workunit id="aco_dev.2-5">

                        The evaluator shall examine the development information
                        and the reliance information to determine that the
                        interfaces are described consistently.

                        The evaluator's goal in this work unit is to determine
                        that the interfaces described in the development
                        information for the base component and the reliance
                        information for the dependent component are represented
                        consistently. </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Detailed evidence of design" id="aco_dev.3">
                <aco-hierarchical acomponent="aco_dev.2"/>
                <aco-dependsoncomponent acomponent="aco_rel.2"/>
                <aco-objectives>

                    A description of the interfaces in the base component, on
                    which the dependent component relies, is required. This is
                    examined to determine whether or not it is consistent with
                    the description of interfaces on which the dependent
                    component relies, as provided in the reliance
                    information.

                    The interface description of the architecture of the base
                    component is provided to enable the evaluator to determine
                    whether or not that interface formed part of the TSF of
                    the base component.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine that
                    the appropriate security functionality is provided by the
                    base component to support the dependent component. This is
                    achieved through examination of the interfaces and
                    associated security behaviour of the base component to
                    determine that they are consistent with the interfaces
                    specified in the reliance information; those required by
                    the dependent component.

                    In addition to the interface description, the subsystems
                    of the base component that provide the security
                    functionality required by the dependent component will be
                    described to enable the evaluator to determine whether or
                    not that interface formed part of the TSF of the base
                    component.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed ST;
                        </item>
                        <item>
                            the development information;
                        </item>
                        <item>
                            reliance information.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_dev.3.1d">
                    The developer shall provide development information for the
                    base component.
                </ae-developer>
                <ae-content id="aco_dev.3.1c">
                    The development information shall describe the purpose and
                    method of use of each interface of the base component used
                    in the composed TOE.
                </ae-content>
                <ae-content id="aco_dev.3.2c">
                    The development information shall identify the subsystems of
                    the base component that provide interfaces of the base
                    component used in the composed TOE.
                </ae-content>
                <ae-content id="aco_dev.3.3c">
                    The development information shall provide a high-level
                    description of the behaviour of the base component
                    subsystems, which support the enforcement of the dependent
                    component SFRs.
                </ae-content>
                <ae-content id="aco_dev.3.4c">
                    The development information shall provide a mapping from the
                    interfaces to the subsystems of the base component.
                </ae-content>
                <ae-content id="aco_dev.3.5c">
                    The development information shall show correspondence
                    between the interfaces, used in the composed TOE, of the
                    base component and the dependent component to support the
                    TSF of the dependent component.
                </ae-content>
                <ae-evaluator id="aco_dev.3.1e">
                    The evaluator shall confirm that the information meets all
                    requirements for content and presentation of evidence.
                    <m-workunit id="aco_dev.3-1">
                        <ae-dc-element id="aco_dev.3.1c"/>

                        The evaluator shall examine the development information
                        to determine that it describes the purpose of each
                        interface.

                        The base component provides interfaces to support
                        interaction with the dependent component in the
                        provision of the dependent TSF. The purpose of each
                        interface is to be described at the same level as the
                        description of the interfaces to the dependent component
                        TSF functionality, as would be provided between
                        subsystems in the TOE design (<xref id="adv_tds.1" show="link"/>). This description is to provide the
                        reader with an understanding of how the base component
                        provides the services required by the dependent
                        component TSF.

                        This work unit may be satisfied by the provision of the
                        functional specification for the base component for
                        those interfaces that are TSFIs of the base
                        component.
                    </m-workunit>
                    <m-workunit id="aco_dev.3-2">
                        <ae-dc-element id="aco_dev.3.1c"/>

                        The evaluator shall examine the development information
                        to determine that it describes the method of use for
                        each interface.

                        The method of use for an interface summarises how the
                        interface is manipulated in order to invoke the
                        operations and obtain results associated with the
                        interface. The evaluator should be able to determine
                        from reading this material in the development
                        information how to use each interface. This does not
                        necessarily mean that there needs to be a separate
                        method of use for each interface, as it may be possible
                        to describe in general how APIs are invoked, for
                        instance, and then identify each interface using that
                        general style.

                        This work unit may be satisfied by the provision of the
                        functional specification for the base component for
                        those interfaces that are TSFIs of the base
                        component. </m-workunit>
                    <m-workunit id="aco_dev.3-3">
                        <ae-dc-element id="aco_dev.3.2c"/>

                        The evaluator shall examine the development information
                        to determine that all subsystems of the base component
                        that provide interfaces to the dependent component are
                        identified.

                        For those interfaces that are considered to form part of
                        the TSFI of the base component, the subsystems
                        associated with the interface will be subsystems
                        considered in the <xref id="adv_tds" show="link"/>
                        activity during the base component evaluation. The
                        interfaces on which the dependent component relies that
                        did not form part of the TSFI of the base component will
                        map to subsystems outside of the base component
                        TSF. </m-workunit>
                    <m-workunit id="aco_dev.3-4">
                        <ae-dc-element id="aco_dev.3.3c"/>

                        The evaluator shall examine the development information
                        to determine that it describes the behaviour of the base
                        component subsystems that support the enforcement of the
                        dependent component SFRs.

                        The dependent component invokes interfaces of the base
                        component for the provision of services by the base
                        component. For the interfaces of the base component that
                        are invoked, the development information shall provide a
                        high-level description of the associated security
                        behaviour of the base component. The description of the
                        base component security behaviour will outline how the
                        base component provides the necessary service when the
                        call to the interface is made. This description is to be
                        at a level similar to that provided for <xref id="adv_tds.1.4c" show="id"/>. Therefore, the provision
                        of the TOE design evidence from the base component
                        evaluation would satisfy this work unit, where the
                        interfaces invoked by the dependent component are TSFI
                        of the base component. If the interfaces invoked by the
                        dependent component are not TSFIs of the base component
                        it is the associated security behaviour will not
                        necessarily be described in the base component TOE
                        design evidence.
                    </m-workunit>
                    <m-workunit id="aco_dev.3-5">
                        <ae-dc-element id="aco_dev.3.4c"/>

                        The evaluator shall examine the development information
                        to determine that the correspondence between the
                        interfaces and subsystems of the base component is
                        accurate.

                        If the TOE design and functional specification evidence
                        from the base component evaluation is available, this
                        can be used to verify the accuracy of the correspondence
                        between the interfaces and subsystems of the base
                        component as used in the composed TOE. Those interfaces
                        of the base component, which formed part of the base
                        component TSFI will be described in the base component
                        functional specification, and the associated subsystems
                        will be described in the base component TOE design
                        evidence.  The tracing between the two will be provided
                        in the base component TOE design evidence.

                        If, however, the base component interface did not form
                        part of the TSFI of the base component, the description
                        of the subsystem behaviour provided in the development
                        information will be used to verify the accuracy of the
                        correspondence. </m-workunit>
                    <m-workunit id="aco_dev.3-6">
                        <ae-dc-element id="aco_dev.3.5c"/>

                        The evaluator shall examine the development information
                        to determine the correspondence, between the interfaces
                        of the base component and the interfaces on which the
                        dependent component relies, is accurate.

                        The correspondence between the interfaces of the base
                        component and the interfaces on which the dependent
                        component relies may take the form of a matrix or
                        table. The interfaces that are relied upon by the
                        dependent component are identified in the reliance
                        information (as examined during <xref id="aco_rel" show="link"/>).

                        There is, during this activity, no requirement to
                        determine completeness of the coverage of interfaces
                        that are relied upon by the dependent component, only
                        that the correspondence is correct and ensuring that
                        interfaces of the base component are mapped to
                        interfaces required by the dependent component wherever
                        possible. The completeness of the coverage is considered
                        in <xref id="aco_cor" show="link"/> activities.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_dev.3.2e">
                    The evaluator shall determine that the interface description
                    provided is consistent with the reliance information
                    provided for the dependent component.
                    <m-workunit id="aco_dev.3-7">

                        The evaluator shall examine the development information
                        and the reliance information to determine that the
                        interfaces are described consistently.

                        The evaluator's goal in this work unit is to determine
                        that the interfaces described in the development
                        information for the base component and the reliance
                        information for the dependent component are represented
                        consistently. </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Reliance of dependent component" id="aco_rel">
            <af-objectives>

                The purpose of this family is to provide evidence that
                describes the reliance that a dependent component has upon
                the base component. This information is useful to persons
                responsible for integrating the component with other
                evaluated IT components to form the composed TOE, and for
                providing insight into the security properties of the
                resulting composition.

                This provides a description of the interface between the
                dependent and base components of the composed TOE that may
                not have been analysed during evaluation of the individual
                components, as the interfaces were not TSFIs of the
                individual component TOEs.
            </af-objectives>
            <af-overview>

                The <xref id="aco_rel" show="link"/> family considers the
                interactions between the components where the dependent
                component relies upon a service from the base component to
                support the operation of security functionality of the
                dependent component. The interfaces into these services of
                the base component may not have been considered during
                evaluation of the base component because the service in the
                base component was not considered security-relevant during
                evaluation of the component, either because of the inherent
                purpose of the service (e.g., adjust type font) or because
                associated CC SFRs are not being claimed in the base
                component's ST (e.g. the login interface when no <xref id="fia" show="link"/> SFRs are claimed). These interfaces
                into the base component are often viewed as functional
                interfaces when evaluating the base component, and are in
                addition to the security interfaces (TSFIs) considered in
                the functional specification.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled according to the
                amount of detail provided in the description of the reliance
                by the dependent component upon the base component.
            </af-levelling-criteria>
            <af-application-notes>

                The <xref id="aco_rel" show="link"/> family considers the
                interactions between the components where the dependent
                component relies upon a service from the base component to
                support the operation of security functionality of the
                dependent component. The interfaces into these services of
                the base component may not have been considered during
                evaluation of the base component because the service in the
                base component was not considered security-relevant in the
                component evaluation, either because of the inherent purpose
                of the service (e.g., adjust type font) or because
                associated CC SFRs are not being claimed in the base
                component's ST (e.g. the login interface when no <xref id="fia" show="link"/> SFRs are claimed). These interfaces
                into the base component are often viewed as functional
                interfaces in the evaluation of the base component, and are
                in addition to the security interfaces (TSFI) considered in
                the functional specification.

                In summary, the TSFIs described in the functional
                specification only include the calls made into a TSF by
                external entities and responses to those calls. Calls made
                by a TSF, which were not explicitly considered during
                evaluation of the components, are described by the reliance
                information provided to satisfy <xref id="aco_rel" show="link"/>.
            </af-application-notes>
            <a-component name="Basic reliance information" id="aco_rel.1">
                <msa-objectives>

                    The objectives of this sub-activity are to determine
                    whether the developer's reliance evidence provides
                    sufficient information to determine that the necessary
                    functionality is available in the base component, and the
                    means by which that functionality is invoked. These are
                    provided in terms of a high-level description.


                </msa-objectives>
                <msa-application-notes>

                    A dependent component whose TSF interacts with the base
                    component requires functionality provided by that base
                    component (e.g., remote authentication, remote audit data
                    storage). In these cases, those invoked services need to
                    be described for those charged with configuring the
                    composed TOE for end users. The rationale for requiring
                    this documentation is to aid integrators of the composed
                    TOE to determine what services in the base component might
                    have adverse effects on the dependent component, and to
                    provide information against which to determine the
                    compatibility of the components when applying the <xref id="aco_dev" show="link"/> family.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed ST;
                        </item>
                        <item>
                            the dependent component functional specification;
                        </item>
                        <item>
                            the dependent component design;
                        </item>
                        <item>
                            the dependent component architectural design;
                        </item>
                        <item>
                            the reliance information.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_rel.1.1d">
                    The developer shall provide reliance information of the
                    dependent component.
                </ae-developer>
                <ae-content id="aco_rel.1.1c">
                    The reliance information shall describe the functionality of
                    the base component hardware, firmware and/or software that
                    is relied upon by the dependent component TSF.
                </ae-content>
                <ae-content id="aco_rel.1.2c">
                    The reliance information shall describe all interactions
                    through which the dependent component TSF requests services
                    from the base component.
                </ae-content>
                <ae-content id="aco_rel.1.3c">
                    The reliance information shall describe how the dependent
                    TSF protects itself from interference and tampering by the
                    base component.
                </ae-content>
                <ae-evaluator id="aco_rel.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="aco_rel.1-1">
                        <ae-dc-element id="aco_rel.1.1c"/>

                        The evaluator shall check the reliance information to
                        determine that it describes the functionality of the
                        base dependent hardware, firmware and/or software that
                        is relied upon by the dependent component TSF.

                        The evaluator assesses the description of the security
                        functionality that the dependent component TSF requires
                        to be provided by the base component's hardware,
                        firmware and software. The emphasis of this work unit is
                        on the level of detail of this description, rather than
                        on an assessment of the information's accuracy. (The
                        assessment of the accuracy of the information is the
                        focus of the next work unit.)

                        This description of the base component's functionality
                        need not be any more detailed than the level of the
                        description of a component of the TSF, as would be
                        provided in the TOE Design (<xref id="adv_tds" show="link"/>)
                    </m-workunit>
                    <m-workunit id="aco_rel.1-2">
                        <ae-dc-element id="aco_rel.1.1c"/>

                        The evaluator shall examine the reliance information to
                        determine that it accurately reflects the objectives
                        specified for the operational environment of the
                        dependent component.

                        The reliance information contains the description of the
                        base component's security functionality relied upon by
                        the dependent component. To ensure that the reliance
                        information is consistent with the expectations of the
                        operational environment of the dependent component, the
                        evaluator compares the reliance information with the
                        statement of objectives for the environment in the ST
                        for the dependent component.

                        For example, if the reliance information claims that the
                        dependent component TSF relies upon the base component
                        to store and protect audit data, yet other evaluation
                        evidence (e.g. the dependent component design) makes it
                        clear that the dependent component TSF itself is storing
                        and protecting the audit data, this would indicate an
                        inaccuracy.

                        It should be noted that the objectives for the
                        operational environment may include objectives that can
                        be met by non-IT measures. While the services that the
                        base component environment is expected to provide may be
                        described in the description of IT objectives for the
                        operational environment in the dependent component ST,
                        it is not required that all such expectations on the
                        environment be described in the reliance
                        information.
                    </m-workunit>
                    <m-workunit id="aco_rel.1-3">
                        <ae-dc-element id="aco_rel.1.2c"/>

                        The evaluator shall examine the reliance information to
                        determine that it describes all interactions between the
                        dependent component and the base component, through
                        which the dependent component TSF requests services from
                        the base component.

                        The dependent component TSF may request services of the
                        base component that were not within the TSF of the base
                        component (see <xref show="none" id="aco-interactions-IT-entities"/> in CC Part
                        3).

                        The interfaces to the base component's functionality are
                        described at the same level as the description of the
                        interfaces to the dependent component TSF functionality,
                        as would be provided between subsystems in the TOE
                        design (<xref id="adv_tds.1" show="link"/>).

                        The purpose of describing the interactions between the
                        dependent component and the base component is to provide
                        an understanding of how the dependent component TSF
                        relies upon the base component for the provision of
                        services to support the operation of security
                        functionality of the dependent component. These
                        interactions do not need to be characterised at the
                        implementation level (e.g. parameters passed from one
                        routine in a component to a routine in another
                        component), but the data elements identified for a
                        particular component that are going to be used by
                        another component should be covered in this
                        description. The statement should help the reader
                        understand in general why the interaction is
                        necessary.

                        Accuracy and completeness of the interfaces is based on
                        the security functionality that the TSF requires to be
                        provided by the base component, as assessed in work
                        units <xref id="aco_rel.1-1" show="link"/> and <xref id="aco_rel.1-2" show="link"/>. It should be possible to
                        map all of the functionality described in the earlier
                        work units to the interfaces identified in this work
                        unit, and vice versa. An interface that does not
                        correspond to described functionality would also
                        indicate an inadequacy. </m-workunit>
                    <m-workunit id="aco_rel.1-4">
                        <ae-dc-element id="aco_rel.1.3c"/>

                        The evaluator shall examine the reliance information to
                        determine that it describes how the dependent TSF protects
                        itself from interference and tampering by the base
                        component.

                        The description of how the dependent component protects
                        itself from interference and tampering by the base
                        component is to be provided at the same level of detail
                        as necessary for <xref id="adv_arc.1-4" show="id"/>. </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Reliance information" id="aco_rel.2">
                <aco-hierarchical acomponent="aco_rel.1"/>
                <msa-objectives>

                    The objectives of this sub-activity are to determine
                    whether the developer's reliance evidence provides
                    sufficient information to determine that the necessary
                    functionality is available in the base component, and the
                    means by which that functionality is invoked. This is
                    provided in terms of the interfaces between the
                    dependent and base component and the return values from
                    those interfaces called by the dependent component.


                </msa-objectives>
                <msa-application-notes>

                    A dependent component whose TSF interacts with the base
                    component requires functionality provided by that base
                    component (e.g., remote authentication, remote audit data
                    storage). In these cases, those invoked services need to
                    be described for those charged with configuring the
                    composed TOE for end users. The rationale for requiring
                    this documentation is to aid integrators of the composed
                    TOE to determine what services in the base component might
                    have adverse effects on the dependent component, and to
                    provide information against which to determine the
                    compatibility of the components when applying the <xref id="aco_dev" show="link"/> family.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed ST;
                        </item>
                        <item>
                            the dependent component functional specification;
                        </item>
                        <item>
                            the dependent component design;
                        </item>
                        <item>
                            the dependent component implementation representation;
                        </item>
                        <item>
                            the dependent component architectural design;
                        </item>
                        <item>
                            the reliance information.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_rel.2.1d">
                    The developer shall provide reliance information of the
                    dependent component.
                </ae-developer>
                <ae-content id="aco_rel.2.1c">
                    The reliance information shall describe the functionality of
                    the base component hardware, firmware and/or software that
                    is relied upon by the dependent component TSF.
                </ae-content>
                <ae-content id="aco_rel.2.2c">
                    The reliance information shall describe all interactions
                    through which the dependent component TSF requests services
                    from the base component.
                </ae-content>
                <ae-content id="aco_rel.2.3c">
                    The reliance information shall describe each interaction in
                    terms of the interface used and the return values from those
                    interfaces.
                </ae-content>
                <ae-content id="aco_rel.2.4c">
                    The reliance information shall describe how the dependent
                    TSF protects itself from interference and tampering by the
                    base component.
                </ae-content>
                <ae-evaluator id="aco_rel.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="aco_rel.2-1">
                        <ae-dc-element id="aco_rel.2.1c"/>

                        The evaluator shall check the reliance information to
                        determine that it describes the functionality of the
                        base dependent hardware, firmware and/or software that
                        is relied upon by the dependent component TSF.

                        The evaluator assesses the description of the security
                        functionality that the dependent component TSF requires
                        to be provided by the base component's hardware,
                        firmware and software. The emphasis of this work unit is
                        on the level of detail of this description, rather than
                        on an assessment of the information's accuracy. (The
                        assessment of the accuracy of the information is the
                        focus of the next work unit.)

                        This description of the base component's functionality
                        need not be any more detailed than the level of the
                        description of a component of the TSF, as would be
                        provided in the TOE Design (<xref id="adv_tds" show="link"/>)
                    </m-workunit>
                    <m-workunit id="aco_rel.2-2">
                        <ae-dc-element id="aco_rel.2.1c"/>

                        The evaluator shall examine the reliance information to
                        determine that it accurately reflects the objectives
                        specified for the operational environment of the
                        dependent component.

                        The reliance information contains the description of the
                        base component's security functionality relied upon by
                        the dependent component. To ensure that the reliance
                        information is consistent with the expectations of the
                        operational environment of the dependent component, the
                        evaluator compares the reliance information with the
                        statement of objectives for the environment in the ST
                        for the dependent component.

                        For example, if the reliance information claims that the
                        dependent component TSF relies upon the base component
                        to store and protect audit data, yet other evaluation
                        evidence (e.g. the dependent component design) makes it
                        clear that the dependent component TSF itself is storing
                        and protecting the audit data, this would indicate an
                        inaccuracy.

                        It should be noted that the objectives for the
                        operational environment may include objectives that can
                        be met by non-IT measures. While the services that the
                        base component environment is expected to provide may be
                        described in the description of IT objectives for the
                        operational environment in the dependent component ST,
                        it is not required that all such expectations on the
                        environment be described in the reliance
                        information.
                    </m-workunit>
                    <m-workunit id="aco_rel.2-3">
                        <ae-dc-element id="aco_rel.2.2c"/>

                        The evaluator shall examine the reliance information to
                        determine that it describes all interactions between the
                        dependent component and the base component, through
                        which the dependent component TSF requests services from
                        the base component.

                        The dependent component TSF may request services of the
                        base component that were not within the TSF of the base
                        component (see Annex <xref show="none" id="aco-interactions-IT-entities"/> in CC Part
                        3).

                        The interfaces to the base component's functionality are
                        described at the same level as the description of the
                        interfaces to the dependent component TSF functionality,
                        as would be provided between subsystems in the TOE
                        design (<xref id="adv_tds.1" show="link"/>).

                        The purpose of describing the interactions between the
                        dependent component and the base component is to provide
                        an understanding of how the dependent component TSF
                        relies upon the base component for the provision of
                        services to support the operation of security
                        functionality of the dependent component. These
                        interactions do not need to be characterised at the
                        implementation level (e.g. parameters passed from one
                        routine in a component to a routine in another
                        component), but the data elements identified for a
                        particular component that are going to be used by
                        another component should be covered in this
                        description. The statement should help the reader
                        understand in general why the interaction is
                        necessary.

                        Accuracy and completeness of the interfaces is based on
                        the security functionality that the TSF requires to be
                        provided by the base component, as assessed in work
                        units <xref id="aco_rel.2-1" show="link"/> and <xref id="aco_rel.2-2" show="link"/>. It should be possible to
                        map all of the functionality described in the earlier
                        work units to the interfaces identified in this work
                        unit, and vice versa. An interface that does not
                        correspond to described functionality would also
                        indicate an inadequacy. </m-workunit>
                    <m-workunit id="aco_rel.2-4">
                        <ae-dc-element id="aco_rel.2.3c"/>

                        The reliance information shall describe each interaction
                        in terms of the interface used and the return values
                        from those interfaces.

                        The identification of the interfaces used by the
                        dependent component TSF when making services requests of
                        the base component allows an integrator to determine
                        whether the base component provides all the necessary
                        corresponding interfaces. This understanding is further
                        gained through the specification of the return values
                        expected by the dependent component. The evaluator
                        ensures that interfaces are described for each
                        interaction specified (as analysed in <xref id="aco_rel.2-3" show="id"/>). </m-workunit>
                    <m-workunit id="aco_rel.2-5">
                        <ae-dc-element id="aco_rel.2.4c"/>

                        The evaluator shall examine the reliance information to
                        determine that it describes how the dependent TSF protects
                        itself from interference and tampering by the base
                        component.

                        The description of how the dependent component protects
                        itself from interference and tampering by the base
                        component is to be provided at the same level of detail
                        as necessary for <xref id="adv_arc.1-4" show="id"/>. </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Composed TOE testing" id="aco_ctt">
            <af-objectives>

                This family requires that testing of composed TOE and
                testing of the base component, as used in the composed TOE,
                is performed.
            </af-objectives>
            <af-overview>

                The family <xref id="aco_ctt" show="link"/> details
                requirements for testing to demonstrate that the composed
                TOE operates as specified in the composed TOE SFRs and the
                base component interfaces match the design descriptions as
                provided in the development information (<xref id="aco_dev" show="link"/>). Testing evidence is to be provided of all
                SFRs specified in the composed TOE ST and to exercise all
                base component interfaces used by the dependent component,
                as identified in <xref id="aco_rel" show="link"/>.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                increasing rigour of interface testing and increasing rigour
                of the analysis of the sufficiency of the tests to
                demonstrate that the composed TSF operates in accordance
                with the reliance information and the composed TOE
                SFRs.
            </af-levelling-criteria>
            <af-application-notes>

                There are two distinct aspects of testing associated with
                this family:
                <list type="enumerated">
                    <item>
                        testing of the interfaces between the base component and
                        the dependent component, which the dependent component
                        rely upon for enforcement of security functionality, to
                        demonstrate their compatibility;
                    </item>
                    <item>
                        testing of the composed TOE to demonstrate that the TOE
                        behaves in accordance with the SFRs for the composed
                        TOE.
                    </item>
                </list>

                If the test configurations used during evaluation of the
                dependent component included use of the base component as a
                ``platform'' and the test analysis sufficiently demonstrates
                that the TSF behaves in accordance with the SFRs, the
                developer need perform no further testing of the composed
                TOE functionality. However, if the base component was not
                used in the testing of the dependent component, or the
                configuration of either component varied, then the developer
                is to perform testing of the composed TOE.  This may take
                the form of repeating the dependent component developer
                testing of the dependent component, provided this adequately
                demonstrates the composed TOE TSF behaves in accordance with
                the SFRs.

                The developer is to provide evidence of testing the base
                component interfaces used in the composition. The operation
                of base component TSFIs would have been tested as part of
                the <xref id="ate" show="link"/> activities during
                evaluation of the base component. Therefore, provided the
                appropriate interfaces were included within the test sample
                of the base component evaluation and it was determined in
                <xref id="aco_cor" show="link"/> that the base component is
                operating in accordance with the base component evaluated
                configuration, with all security functionality required by
                the dependent component included in the TSF, the evaluator
                action <xref id="aco_ctt.1.1e" show="link"/> may be met
                through reuse of the base component <xref id="ate" show="link"/> verdicts.

                If this is not the case, the base component interfaces used
                relevant to the composition that are affected by any
                variations to the evaluated configuration and any additional
                security functionally will be tested to ensure they
                demonstrate the expected behaviour. The expected behaviour
                to be tested is that described in the reliance information
                (<xref id="aco_rel" show="link"/> evidence).
            </af-application-notes>
            <a-component name="Interface testing" id="aco_ctt.1">
                <aco-dependsoncomponent acomponent="aco_rel.1"/>
                <aco-dependsoncomponent acomponent="aco_dev.1"/>
                <aco-objectives>

                    The objective of this component is to ensure that each
                    interface of the base component, on which the dependent
                    component relies, is tested.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer correctly performed and documented tests for
                    each of the base component interfaces on which the
                    dependent component relies. As part of this determination
                    the evaluator repeats a sample of the tests performed by
                    the developer and performs any additional tests required
                    to ensure the expected behaviour of all composed TOE SFRs
                    and interfaces of the base component relied upon by the
                    dependent component is demonstrated.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed TOE suitable for testing;
                        </item>
                        <item>
                            the composed TOE testing evidence;
                        </item>
                        <item>
                            the reliance information;
                        </item>
                        <item>
                            the development information.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_ctt.1.1d">
                    The developer shall provide composed TOE test documentation.
                </ae-developer>
                <ae-developer id="aco_ctt.1.2d">
                    The developer shall provide base component interface test
                    documentation.
                </ae-developer>
                <ae-developer id="aco_ctt.1.3d">
                    The developer shall provide the composed TOE for testing.
                </ae-developer>
                <ae-developer id="aco_ctt.1.4d">
                    The developer shall provide an equivalent set of resources
                    to those that were used in the base component developer's
                    functional testing of the base component.
                </ae-developer>
                <ae-content id="aco_ctt.1.1c">
                    The composed TOE and base component interface test
                    documentation shall consist of test plans, expected test
                    results and actual test results.
                </ae-content>
                <ae-content id="aco_ctt.1.2c">
                    The test documentation from the developer execution of the
                    composed TOE tests shall demonstrate that the TSF behaves as
                    specified.
                </ae-content>
                <ae-content id="aco_ctt.1.3c">
                    The test documentation from the developer execution of the
                    base component interface tests shall demonstrate that the
                    base component interface relied upon by the dependent
                    component behaves as specified.
                </ae-content>
                <ae-content id="aco_ctt.1.4c">
                    The base component shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="aco_ctt.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="aco_ctt.1-1">
                        <ae-dc-element id="aco_ctt.1.1c"/>

                        The evaluator shall examine the composed TOE test
                        documentation to determine that it consists of test
                        plans, expected test results and actual test
                        results.

                        This work unit may be satisfied by provision of the test
                        evidence from the evaluation of the dependent component
                        if the base component was used to satisfy the
                        requirements for IT in the operational environment of
                        the dependent component.

                        All work units necessary for the satisfaction of <xref id="ate_fun.1.1e" show="link"/> will be applied to
                        determine:
                        <list type="enumerated">
                            <item>
                                that the test documentation consist of test plans
                                expected test results and actual test
                                results;</item>
                            <item>
                                that the test documentation contains the information
                                necessary to ensure the tests are repeatable;</item>
                            <item>
                                the level of developer effort that was applied to
                                testing of the base component.</item></list>
                    </m-workunit>
                    <m-workunit id="aco_ctt.1-2">
                        <ae-dc-element id="aco_ctt.1.1c"/>

                        The evaluator shall examine the base component interface
                        test documentation to determine that it consists of test
                        plans, expected test results and actual test
                        results.

                        This work unit may be satisfied by provision of the test
                        evidence from the evaluation of the base component for
                        those interfaces relied upon in the composed TOE by the
                        dependent component are TSFIs of the successfully
                        evaluated base component.  The determination of whether
                        the interfaces of the base component relied upon by the
                        dependent component were in fact TSFIs of the evaluated
                        base component is made during the <xref id="aco_cor" show="id"/> activity.

                        All work units necessary for the satisfaction of <xref id="ate_fun.1.1e" show="link"/> will be applied to
                        determine:
                        <list type="enumerated">
                            <item>
                                that the test documentation consist of test plans
                                expected test results and actual test
                                results;</item>
                            <item>
                                that the test documentation contains the information
                                necessary to ensure the tests are repeatable;</item>
                            <item>
                                the level of developer effort that was applied to
                                testing of the base component.</item></list>
                    </m-workunit>
                    <m-workunit id="aco_ctt.1-3">
                        <ae-dc-element id="aco_ctt.1.2c"/>

                        The evaluator shall examine the test documentation to
                        determine that the developer execution of the composed
                        TOE tests shall demonstrate that the TSF behaves as
                        specified.

                        The evaluator should construct a mapping between the
                        tests described in the test plan and the SFRs specified
                        for the composed TOE to identify which SFRs have been
                        tested by the developer.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                Clause <xref id="ate_sc_man1" show="link"/>.</item>
                            <item>
                                Clause <xref id="ate_sc_man2" show="link"/>.</item>
                        </list>

                        The outputs from the successful execution of the tests
                        (as assessed for <xref id="ate_fun.1.3c" show="id"/> can
                        be compared with the mapping to determine that the SFRs
                        of the composed TOE, as tested by the developer, behave
                        as expected.
                    </m-workunit>
                    <m-workunit id="aco_ctt.1-4">
                        <ae-dc-element id="aco_ctt.1.3c"/>

                        The evaluator shall examine the test documentation to
                        determine that the developer execution of the base
                        component interface tests shall demonstrate that the
                        base component interfaces relied upon by the dependent
                        component behave as specified.

                        The evaluator should construct a mapping between the
                        tests described in the test plan and the interfaces of
                        the base component relied upon by the dependent
                        component (as specified in the reliance information,
                        examined under <xref id="aco_rel" show="id"/>) to
                        identify which base component interfaces have been
                        tested by the developer.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                Clause <xref id="ate_sc_man1" show="link"/>.</item>
                            <item>
                                Clause <xref id="ate_sc_man2" show="link"/>.</item>
                        </list>

                        The outputs from the successful execution of the tests
                        (as assessed for <xref id="ate_fun.1.3c" show="id"/> can
                        be compared with the mapping to determine that the
                        interfaces of the base component, as tested by the
                        developer, behave as expected.
                    </m-workunit>
                    <m-workunit id="aco_ctt.1-5">
                        <ae-dc-element id="aco_ctt.1.4c"/>

                        The evaluator shall examine the composed TOE to
                        determine that it has been installed properly and is in
                        a known state.

                        To determine that the composed TOE has been installed
                        properly and is in a known state the <xref id="ate_ind.2-1" show="link"/> and <xref id="ate_ind.2-2" show="link"/> work units will be
                        applied to the TOE provided by the developer for
                        testing.
                    </m-workunit>
                    <m-workunit id="aco_ctt.1-6">
                        <ae-dc-element id="aco_ctt.1.4c"/>

                        The evaluator shall examine the set of resources
                        provided by the developer to determine that they are
                        equivalent to the set of resources used by the base
                        component developer to functionally test the base
                        component.

                        To determine that the set of resources provided are
                        equivalent to those used to functionally test the base
                        component as used in the composed TOE, the <xref id="ate_ind.2-3" show="link"/> work unit will be
                        applied.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_ctt.1.2e">
                    The evaluator shall execute a sample of test in the test
                    documentation to verify the developer test results.
                    <m-workunit id="aco_ctt.1-7">

                        The evaluator shall perform testing in accordance with <xref id="ate_ind.2.2e" show="link"/>, for a subset of the SFRs
                        specified in the composed security target, to verify the
                        developer test results.

                        The evaluator will apply all work units necessary for
                        the satisfaction of <xref id="ate_ind.2.2e" show="link"/>, reporting in the ETR for the composed TOE
                        all analysis, results and verdicts as dictated by the
                        associated work units.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_ctt.1.3e">
                    The evaluator shall test a subset of the TSF interfaces of
                    the composed TOE to confirm that the composed TSF operates
                    as specified.
                    <m-workunit id="aco_ctt.1-8">

                        The evaluator shall perform testing in accordance with <xref id="ate_ind.2.3e" show="link"/>, for a subset of the SFRs
                        specified in the composed security target, to confirm that the
                        TSF operates as specified.

                        The evaluator will apply all work units necessary for
                        the satisfaction of <xref id="ate_ind.2.3e" show="link"/>, reporting in the ETR for the composed TOE
                        all analysis, results and verdicts as dictated by the
                        work units.

                        When selecting interfaces of the TSF of the composed TOE
                        to test, the evaluator should take into account any
                        modifications to the components from the evaluated
                        version or configuration. Modifications to the component
                        from that evaluated may include patches introduced, a
                        different configuration as a result of modified guidance
                        documentation, reliance an additional portion of the
                        component that was not within the TSF of the
                        component. These modifications will have been identified
                        during the <xref id="aco_cor" show="link"/>
                        activity.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Rigorous interface testing" id="aco_ctt.2">
                <aco-hierarchical acomponent="aco_ctt.1"/>
                <aco-dependsoncomponent acomponent="aco_rel.2"/>
                <aco-dependsoncomponent acomponent="aco_dev.2"/>
                <aco-objectives>

                    The objective of this component is to ensure that each
                    interface of the base component, on which the dependent
                    component relies, is tested.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer correctly performed and documented tests for
                    each of the base component interfaces on which the
                    dependent component relies. As part of this determination
                    the evaluator repeats a sample of the tests performed by
                    the developer and performs any additional tests required
                    to fully demonstrate the expected behaviour of the
                    composed TOE and the interfaces of the base component
                    relied upon by the dependent component.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed TOE suitable for testing;
                        </item>
                        <item>
                            the composed TOE testing evidence;
                        </item>
                        <item>
                            the reliance information;
                        </item>
                        <item>
                            the development information.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_ctt.2.1d">
                    The developer shall provide composed TOE test documentation.
                </ae-developer>
                <ae-developer id="aco_ctt.2.2d">
                    The developer shall provide base component interface test
                    documentation.
                </ae-developer>
                <ae-developer id="aco_ctt.2.3d">
                    The developer shall provide the composed TOE for testing.
                </ae-developer>
                <ae-developer id="aco_ctt.2.4d">
                    The developer shall provide an equivalent set of resources
                    to those that were used in the base component developer's
                    functional testing of the base component.
                </ae-developer>
                <ae-content id="aco_ctt.2.1c">
                    The composed TOE and base component interface test
                    documentation shall consist of test plans, expected test
                    results and actual test results.
                </ae-content>
                <ae-content id="aco_ctt.2.2c">
                    The test documentation from the developer execution of the
                    composed TOE tests shall demonstrate that the TSF behaves as
                    specified and is complete.
                </ae-content>
                <ae-content id="aco_ctt.2.3c">
                    The test documentation from the developer execution of the
                    base component interface tests shall demonstrate that the
                    base component interface relied upon by the dependent
                    component behaves as specified and is complete.
                </ae-content>
                <ae-content id="aco_ctt.2.4c">
                    The base component shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="aco_ctt.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="aco_ctt.2-1">
                        <ae-dc-element id="aco_ctt.2.1c"/>

                        The evaluator shall examine the composed TOE test
                        documentation to determine that it consists of test
                        plans, expected test results and actual test
                        results.

                        This work unit may be satisfied by provision of the test
                        evidence from the evaluation of the dependent component
                        if the base component was used to satisfy the
                        requirements for IT in the operational environment of
                        the dependent component.

                        All work units necessary for the satisfaction of <xref id="ate_fun.1.1e" show="link"/> will be applied to
                        determine:
                        <list type="enumerated">
                            <item>
                                that the test documentation consist of test plans
                                expected test results and actual test
                                results;</item>
                            <item>
                                that the test documentation contains the information
                                necessary to ensure the tests are repeatable;</item>
                            <item>
                                the level of developer effort that was applied to
                                testing of the base component.</item></list>
                    </m-workunit>
                    <m-workunit id="aco_ctt.2-2">
                        <ae-dc-element id="aco_ctt.2.1c"/>

                        The evaluator shall examine the base component interface
                        test documentation to determine that it consists of test
                        plans, expected test results and actual test
                        results.

                        This work unit may be satisfied by provision of the test
                        evidence from the evaluation of the base component for
                        those interfaces relied upon in the composed TOE by the
                        dependent component are TSFIs of the successfully
                        evaluated base component.  The determination of whether
                        the interfaces of the base component relied upon by the
                        dependent component were in fact TSFIs of the evaluated
                        base component is made during the <xref id="aco_cor" show="id"/> activity.

                        All work units necessary for the satisfaction of <xref id="ate_fun.1.1e" show="link"/> will be applied to
                        determine:
                        <list type="enumerated">
                            <item>
                                that the test documentation consist of test plans
                                expected test results and actual test
                                results;</item>
                            <item>
                                that the test documentation contains the information
                                necessary to ensure the tests are repeatable;</item>
                            <item>
                                the level of developer effort that was applied to
                                testing of the base component.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit id="aco_ctt.2-3">
                        <ae-dc-element id="aco_ctt.2.2c"/>

                        The evaluator shall examine the test documentation to
                        determine that it provides accurate correspondence
                        between the tests in the test documentation relating to
                        the testing of the composed TOE and the composed TOE
                        SFRs in the composed TOE security target.

                        A simple cross-table may be sufficient to show test
                        correspondence. The identification of correspondence
                        between the tests and SFRs presented in the test
                        documentation has to be unambiguous.
                    </m-workunit>
                    <m-workunit id="aco_ctt.2-4">
                        <ae-dc-element id="aco_ctt.2.2c"/>

                        The evaluator shall examine the test documentation to
                        determine that the developer execution of the composed
                        TOE tests shall demonstrate that the TSF behaves as
                        specified.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                Clause <xref id="ate_sc_man1" show="link"/>.</item>
                            <item>
                                Clause <xref id="ate_sc_man2" show="link"/>.
                            </item>
                        </list>

                        The outputs from the successful execution of the tests
                        (as assessed for <xref id="ate_fun.1.3c" show="id"/> can
                        be compared with the mapping to determine that the SFRs
                        of the composed TOE, as tested by the developer, behave
                        as expected.
                    </m-workunit>
                    <m-workunit id="aco_ctt.2-5">
                        <ae-dc-element id="aco_ctt.2.3c"/>

                        The evaluator shall examine the test documentation to
                        determine that it provides accurate correspondence
                        between the tests in the test documentation relating to
                        the testing of the base component interfaces relied upon
                        by the dependent component and the interfaces specified
                        in the reliance information.

                        A simple cross-table may be sufficient to show test
                        correspondence. The identification of correspondence
                        between the tests and interfaces presented in the test
                        documentation has to be unambiguous.
                    </m-workunit>
                    <m-workunit id="aco_ctt.2-6">
                        <ae-dc-element id="aco_ctt.2.3c"/>

                        The evaluator shall examine the test documentation to
                        determine that the developer execution of the base
                        component interface tests shall demonstrate that the
                        base component interfaces relied upon by the dependent
                        component behave as specified.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                Clause <xref id="ate_sc_man1" show="link"/>.</item>
                            <item>
                                Clause <xref id="ate_sc_man2" show="link"/>.</item>
                        </list>

                        The outputs from the successful execution of the tests
                        (as assessed for <xref id="ate_fun.1.3c" show="id"/> can
                        be compared with the mapping to determine that the
                        interfaces of the base component, as tested by the
                        developer, behave as expected.
                    </m-workunit>
                    <m-workunit id="aco_ctt.2-7">
                        <ae-dc-element id="aco_ctt.2.4c"/>

                        The evaluator shall examine the composed TOE to
                        determine that it has been installed properly and is in
                        a known state.

                        To determine that the composed TOE has been installed
                        properly and is in a known state the <xref id="ate_ind.2-1" show="link"/> and <xref id="ate_ind.2-2" show="link"/> work units will be
                        applied to the TOE provided by the developer for
                        testing.
                    </m-workunit>
                    <m-workunit id="aco_ctt.2-8">
                        <ae-dc-element id="aco_ctt.2.4c"/>

                        The evaluator shall examine the set of resources
                        provided by the developer to determine that they are
                        equivalent to the set of resources used by the base
                        component developer to functionally test the base
                        component.

                        To determine that the set of resources provided are
                        equivalent to those used to functionally test the base
                        component as used in the composed TOE, the <xref id="ate_ind.2-3" show="link"/> work unit will be
                        applied.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_ctt.2.2e">
                    The evaluator shall execute a sample of test in the test
                    documentation to verify the developer test results.
                    <m-workunit id="aco_ctt.2-9">

                        The tests are to be selected and executed in accordance
                        with <xref id="ate_ind.2.2e" show="link"/>, to
                        demonstrate the correct behaviour of the SFRs specified
                        in the composed TOE security target.

                        The evaluator will apply all work units necessary for
                        the satisfaction of <xref id="ate_ind.2.2e" show="link"/>, reporting in the ETR for the composed TOE
                        all analysis, results and verdicts as dictated by the
                        associated work units.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_ctt.2.3e">
                    The evaluator shall test a subset of the TSF interfaces of
                    the composed TOE to confirm that the composed TSF operates
                    as specified.
                    <m-workunit id="aco_ctt.2-10">

                        The evaluator shall perform testing in accordance with <xref id="ate_ind.2.3e" show="link"/>, for a subset of the SFRs
                        specified in the composed security target, to confirm that the
                        TSF operates as specified.

                        The evaluator will apply all work units necessary for
                        the satisfaction of <xref id="ate_ind.2.3e" show="link"/>, reporting in the ETR for the composed TOE
                        all analysis, results and verdicts as dictated by the
                        work units.

                        When selecting interfaces of the TSF of the composed TOE
                        to test, the evaluator should take into account any
                        modifications to the components from the evaluated
                        version or configuration. Modifications to the component
                        from that evaluated may include patches introduced, a
                        different configuration as a result of modified guidance
                        documentation, reliance an additional portion of the
                        component that was not within the TSF of the
                        component. These modifications will have been identified
                        during the <xref id="aco_cor" show="link"/>
                        activity.
                    </m-workunit>
                    <m-workunit id="aco_ctt.2-11">

                        The evaluator shall perform testing, in accordance with
                        <xref id="ate_ind.2" show="link"/>, for a subset of the
                        interfaces to the base component to confirm they operate
                        as specified.

                        The evaluator will apply all work units necessary for
                        the satisfaction of <xref id="ate_ind.2.3e" show="link"/>, reporting in the ETR for the composed TOE
                        all analysis, results and verdicts as dictated by the
                        work units.

                        When selecting interfaces of the base component to test,
                        the evaluator should take into account any modifications
                        to the base component from the evaluated version or
                        configuration. In particular, the evaluator should
                        consider the development of tests to demonstrate the
                        correct behaviour of interfaces of the base component
                        that were not considered during the evaluation of the
                        base component. These additional interfaces and other
                        modifications to the base component will have been
                        identified during the <xref id="aco_cor" show="link"/>
                        activity.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Composition vulnerability analysis" id="aco_vul">
            <af-objectives>

                This family calls for an analysis of vulnerability
                information available in the public domain and of
                vulnerabilities that may be introduced as a result of the
                composition.
            </af-objectives>
            <af-overview>

                The vulnerability analysis in <xref id="aco_vul" show="link"/> includes determination of two different
                aspects of resistance by the composed TOE, namely:
                <list type="enumerated">
                    <item>
                        Residual vulnerabilities in the base and dependent
                        components remain unexploitable in the operational
                        environment of the composed TOE;</item>
                    <item>
                        The composed TOE is resistant to attackers with a given
                        level of attack potential.</item></list>
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                increasing scrutiny of vulnerability information from the
                public domain and independent vulnerability analysis.
            </af-levelling-criteria>
            <af-application-notes>

                The developer will provide details of any residual
                vulnerabilities reported during evaluation of the
                components.  These may be gained from the component
                developers or evaluation reports for the components.  These
                will be used as inputs into the evaluator's vulnerability
                analysis of the composed TOE in the operational
                environment.
                <!--
          <xref id="aco_vul" show="link"/> is levelled in a manner
          consistent to that used in <xref id="ava_van" show="id"/>,
          considering increasingly detailed information available for
          analysis and an increasing level of attack potential assumed
          for the attacker. -->

                The operational environment of the composed TOE is examined
                to ensure that the assumptions and objectives for the
                component operational environment (specified in each
                component ST) are satisfied in the composed TOE. An initial
                analysis of the consistency of assumptions and objectives
                between the components and the composed TOE STs will have
                been performed during the conduct of the <xref id="ase" show="id"/> activities for the composed TOE. However, this
                analysis is revisited with the knowledge acquired during the
                <xref id="aco_rel" show="id"/>, <xref id="aco_dev" show="id"/> and the <xref id="aco_cor" show="id"/>
                activities to ensure that, for example, assumptions of the
                dependent component that were addressed by the environment
                in the dependent component ST are not reintroduced as a
                result of composition (i.e. that the base component
                adequately addresses the assumptions of the dependent
                component ST in the composed TOE).

                A search by the evaluator for issues in each component will
                identify potential vulnerabilities reported in the public
                domain since completion of the evaluation of the components.
                Any potential vulnerabilities will then be subject to
                testing.

                If the base component used in the composed TOE has been the
                subject of assurance continuity activities since
                certification, the evaluator will consider during the
                composed TOE vulnerability analysis activities the changes
                made in base component.
            </af-application-notes>
            <a-component name="Composition vulnerability review" id="aco_vul.1">
                <aco-dependsoncomponent acomponent="aco_dev.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the composed TOE, in its operational environment, has
                    easily exploitable vulnerabilities.

                    The developer provides details of any residual
                    vulnerabilities reported from evaluation of the
                    components. The evaluator performs an analysis of the
                    disposition the residual vulnerabilities reported and also
                    performs a search of the public domain, to identify any
                    new potential vulnerabilities in the components
                    (i.e. those issues that have been reported in the public
                    domain since evaluation of the base component).  The
                    evaluator then performs penetration testing to demonstrate
                    that the potential vulnerabilities cannot be exploited in
                    the TOE, in its operational environment, by an attacker
                    with basic attack potential.
                </msa-objectives>
                <msa-application-notes>

                    See the application notes for <xref id="ava_van.1" show="link"/>.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed TOE suitable for testing;
                        </item>
                        <item>
                            the composed ST;
                        </item>
                        <item>
                            the composition rationale;
                        </item>
                        <item>
                            the guidance documentation;
                        </item>
                        <item>
                            information publicly available to support the
                            identification of possible security vulnerabilities;
                        </item>
                        <item>
                            residual vulnerabilities reported during evaluation of
                            each component.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_vul.1.1d">
                    The developer shall provide the composed TOE for testing.
                </ae-developer>
                <ae-content id="aco_vul.1.1c">
                    The composed TOE shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="aco_vul.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="aco_vul.1-1">
                        <ae-dc-element id="aco_vul.1.1c"/>
                        The evaluator shall examine the composed TOE to
                        determine that it has been installed properly and is in
                        a known state.

                        To determine that the composed TOE has been installed
                        properly and is in a known state the <xref id="ate_ind.2-1" show="link"/> and <xref id="ate_ind.2-2" show="link"/> work units will be
                        applied to the composed TOE.

                        If the assurance package includes a component from the
                        <xref id="aco_ctt" show="id"/> family, then the
                        evaluator may refer to the result of the work unit <xref id="aco_ctt" show="id"/>*-1 to demonstrate this has been
                        satisfied.
                    </m-workunit>
                    <m-workunit id="aco_vul.1-2">

                        The evaluator shall examine the composed TOE
                        configuration to determine that any assumptions and
                        objectives in the STs the components relating to IT
                        entities for are fulfilled by the other
                        components.

                        The STs for the component may include assumptions about
                        other components that may use the component to which the
                        ST relates, e.g. the ST for an operating system used as
                        a base component may include an assumption that any
                        applications loaded on the operating system do not run
                        in privileged mode. These assumptions and objectives are
                        to be fulfilled by other components in the composed
                        TOE.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.1.2e">
                    The evaluator shall perform an analysis to determine that
                    any residual vulnerabilities identified for the base and
                    dependent components are not exploitable in the composed TOE
                    in its operational environment.
                    <m-workunit id="aco_vul.1-3">

                        The evaluator shall examine the residual vulnerabilities
                        from the base component evaluation to determine that
                        they are not exploitable in the composed TOE in its
                        operational environment.

                        The list of vulnerabilities identified in the product
                        during the evaluation of the base component, which were
                        demonstrated to be non-exploitable in the base
                        component, is to be used as an input into this
                        activity. The evaluator will determine that the
                        premise(s) on which a vulnerability was deemed to be
                        non-exploitable is upheld in the composed TOE, or
                        whether the combination has re-introduced the potential
                        vulnerability. For example, if during evaluation of the
                        base component it was assumed that a particular
                        operating system service was disabled, which is enabled
                        in the composed TOE evaluation, any potential
                        vulnerabilities relating to that service previously
                        scoped out should now be considered.

                        Also, this list of known, non-exploitable
                        vulnerabilities resulting from the evaluation of the
                        base component should be considered in the light of any
                        known, non-exploitable vulnerabilities for the other
                        components (e.g. dependent component) within the
                        composed TOE. This is to consider the case where a
                        potential vulnerability that is non-exploitable in
                        isolation is exploitable when integrated with an IT
                        entity containing another potential
                        vulnerability.
                    </m-workunit>
                    <m-workunit id="aco_vul.1-4">

                        The evaluator shall examine the residual vulnerabilities
                        from the dependent component evaluation to determine
                        that they are not exploitable in the composed TOE in its
                        operational environment.

                        The list of vulnerabilities identified in the product
                        during the evaluation of the dependent component, which
                        were demonstrated to be non-exploitable in the dependent
                        component, is to be used as an input into this
                        activity. The evaluator will determine that the
                        premise(s) on which a vulnerability was deemed to be
                        non-exploitable is upheld in the composed TOE, or
                        whether the combination has re-introduced the potential
                        vulnerability. For example, if during evaluation of the
                        dependent component it was assumed that IT meeting the
                        operational environment requirements would not return a
                        certain value in response to a service request, which is
                        provided by the base component in the composed TOE
                        evaluation, any potential vulnerabilities relating to
                        that return value previously scoped out should now be
                        considered.

                        Also, this list of known, non-exploitable
                        vulnerabilities resulting from the evaluation of the
                        dependent component should be considered in the light of
                        any known, non-exploitable vulnerabilities for the other
                        components (e.g. base component) within the composed
                        TOE. This is to consider the case where a potential
                        vulnerability that is non-exploitable in isolation is
                        exploitable when integrated with an IT entity containing
                        another potential vulnerability.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.1.3e">
                    The evaluator shall perform a search of public domain
                    sources to identify possible vulnerabilities arising from
                    use of the base and dependent components in the composed TOE
                    operational environment.
                    <m-workunit id="aco_vul.1-5">

                        The evaluator shall examine the sources of information
                        publicly available to support the identification of
                        possible security vulnerabilities in the base component
                        that have become known since the completion of
                        evaluation of the base component.

                        The evaluator will use the information in the public
                        domain as described in <xref id="ava_van.1-2" show="link"/> to search for vulnerabilities in the base
                        component.

                        Those potential vulnerabilities that were publicly
                        available prior to the evaluation of the base component
                        do not have to be further investigated unless it is
                        apparent to the evaluator that the attack potential
                        required by an attacker to exploit the potential
                        vulnerability has been significantly reduced. This may
                        be through the introduction of some new technology since
                        the base component evaluation that means the
                        exploitation of the potential vulnerability has been
                        simplified.
                    </m-workunit>
                    <m-workunit id="aco_vul.1-6">

                        The evaluator shall examine the sources of information
                        publicly available to support the identification of
                        possible security vulnerabilities in the dependent
                        component that have become known since the completion of
                        the dependent component evaluation.

                        The evaluator will use the information in the public
                        domain as described in <xref id="ava_van.1-2" show="link"/> to search for vulnerabilities in the
                        dependent component.

                        Those potential vulnerabilities that were publicly
                        available prior to the evaluation of the dependent
                        component do not have to be further investigated unless
                        it is apparent to the evaluator that the attack
                        potential required by an attacker to exploit the
                        potential vulnerability has been significantly
                        reduced. This may be through the introduction of some
                        new technology since evaluation of the dependent
                        component that means the exploitation of the potential
                        vulnerability has been simplified.
                    </m-workunit>
                    <m-workunit id="aco_vul.1-7">

                        The evaluator shall record in the ETR the identified
                        potential security vulnerabilities that are candidates
                        for testing and applicable to the composed TOE in its
                        operational environment.

                        The ST, guidance documentation and functional
                        specification are used to determine whether the
                        vulnerabilities are relevant to the composed TOE in its
                        operational environment.

                        The evaluator records any reasons for exclusion of
                        vulnerabilities from further consideration if the
                        evaluator determines that the vulnerability is not
                        applicable in the operational environment. Otherwise the
                        evaluator records the potential vulnerability for
                        further consideration.

                        A list of potential vulnerabilities applicable to the
                        composed TOE in its operational environment, which can
                        be used as an input into penetration testing activities
                        (i.e. <xref id="aco_vul.1.4e" show="id"/>), shall be
                        reported in the ETR by the evaluators.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.1.4e">
                    The evaluator shall conduct penetration testing, based on
                    the identified vulnerabilities, to demonstrate that the
                    composed TOE is resistant to attacks by an attacker with
                    basic attack potential.
                    <m-workunit id="aco_vul.1-8">

                        The evaluator shall conduct penetration testing as
                        detailed for <xref id="ava_van.1.3e" show="link"/>.

                        The evaluator will apply all work units necessary for
                        the satisfaction of evaluator action <xref id="ava_van.1.3e" show="link"/>, reporting in the ETR
                        for the composed TOE all analysis and verdicts as
                        dictated by the work units.

                        The evaluator will also apply the work units for the
                        evaluator action <xref id="ava_van.1.1e" show="link"/>
                        to determine that the composed TOE provided by the
                        developer is suitable for testing.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Composition vulnerability analysis" id="aco_vul.2">
                <aco-hierarchical acomponent="aco_vul.1"/>
                <aco-dependsoncomponent acomponent="aco_dev.2"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the composed TOE, in its operational environment, has
                    vulnerabilities exploitable by attackers possessing basic
                    attack potential.

                    The developer provides an analysis of the disposition of
                    any residual vulnerabilities reported for the components
                    and of any vulnerabilities introduced through the
                    combination of the base and dependent components. The
                    evaluator performs a search of the public domain to
                    identify any new potential vulnerabilities in the
                    components (i.e. those issues that have been reported in
                    the public domain since the completion of the evaluation
                    of the components). The evaluator will also perform an
                    independent vulnerability analysis of the composed TOE and
                    penetration testing.
                </msa-objectives>
                <msa-application-notes>

                    See the application notes for <xref id="ava_van.2" show="link"/>.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed TOE suitable for testing;
                        </item>
                        <item>
                            the composed ST;
                        </item>
                        <item>
                            the composition rationale;
                        </item>
                        <item> the reliance information;
                        </item>
                        <item>
                            the guidance documentation;
                        </item>
                        <item>
                            information publicly available to support the
                            identification of possible security vulnerabilities.
                        </item>
                        <item>
                            residual vulnerabilities reported during evaluation of
                            each component.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_vul.2.1d">
                    The developer shall provide the composed TOE for testing.
                </ae-developer>
                <ae-content id="aco_vul.2.1c">
                    The composed TOE shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="aco_vul.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="aco_vul.2-1">
                        <ae-dc-element id="aco_vul.2.1c"/>
                        The evaluator shall examine the composed TOE to
                        determine that it has been installed properly and is in
                        a known state.

                        To determine that the composed TOE has been installed
                        properly and is in a known state the <xref id="ate_ind.2-1" show="link"/> and <xref id="ate_ind.2-2" show="link"/> work units will be
                        applied to the composed TOE.

                        If the assurance package includes <xref id="aco_ctt" show="id"/> family, then the evaluator may refer to the
                        result of the work unit <xref id="aco_ctt" show="link"/>*-1 to demonstrate this has been
                        satisfied.
                    </m-workunit>
                    <m-workunit id="aco_vul.2-2">

                        The evaluator shall examine the composed TOE
                        configuration to determine that any assumptions and
                        objectives in the STs the components relating to IT
                        entities for are fulfilled by the other
                        components.

                        The STs for the component may include assumptions about
                        other components that may use the component to which the
                        ST relates, e.g. the ST for an operating system used as
                        a base component may include an assumption that any
                        applications loaded on the operating system do not run
                        in privileged mode. These assumptions and objectives are
                        to be fulfilled by other components in the composed
                        TOE.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.2.2e">
                    The evaluator shall perform an analysis to determine that
                    any residual vulnerabilities identified for the base and
                    dependent components are not exploitable in the composed TOE
                    in its operational environment.
                    <m-workunit id="aco_vul.2-3">

                        The evaluator shall examine the residual vulnerabilities
                        from the base component evaluation to determine that
                        they are not exploitable in the composed TOE in its
                        operational environment.

                        The list of vulnerabilities identified in the product
                        during the evaluation of the base component, which were
                        demonstrated to be non-exploitable in the base
                        component, is to be used as an input into this
                        activity. The evaluator will determine that the
                        premise(s) on which a vulnerability was deemed to be
                        non-exploitable is upheld in the composed TOE, or
                        whether the combination has re-introduced the potential
                        vulnerability. For example, if during evaluation of the
                        base component it was assumed that a particular
                        operating system service was disabled, which is enabled
                        in the composed TOE evaluation, any potential
                        vulnerabilities relating to that service previously
                        scoped out should now be considered.

                        Also, this list of known, non-exploitable
                        vulnerabilities resulting from the evaluation of the
                        base component should be considered in the light of any
                        known, non-exploitable vulnerabilities for the other
                        components (e.g. dependent component) within the
                        composed TOE. This is to consider the case where a
                        potential vulnerability that is non-exploitable in
                        isolation is exploitable when integrated with an IT
                        entity containing another potential
                        vulnerability.
                    </m-workunit>
                    <m-workunit id="aco_vul.2-4">

                        The evaluator shall examine the residual vulnerabilities
                        from the dependent component evaluation to determine
                        that they are not exploitable in the composed TOE in its
                        operational environment.

                        The list of vulnerabilities identified in the product
                        during the evaluation of the dependent component, which
                        were demonstrated to be non-exploitable in the dependent
                        component, is to be used as an input into this
                        activity. The evaluator will determine that the
                        premise(s) on which a vulnerability was deemed to be
                        non-exploitable is upheld in the composed TOE, or
                        whether the combination has re-introduced the potential
                        vulnerability. For example, if during evaluation of the
                        dependent component it was assumed that IT meeting the
                        operational environment requirements would not return a
                        certain value in response to a service request, which is
                        provided by the base component in the composed TOE
                        evaluation, any potential vulnerabilities relating to
                        that return value previously scoped out should now be
                        considered.

                        Also, this list of known, non-exploitable
                        vulnerabilities resulting from the evaluation of the
                        dependent component should be considered in the light of
                        any known, non-exploitable vulnerabilities for the other
                        components (e.g. base component) within the composed
                        TOE. This is to consider the case where a potential
                        vulnerability that is non-exploitable in isolation is
                        exploitable when integrated with an IT entity containing
                        another potential vulnerability.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.2.3e">
                    The evaluator shall perform a search of public domain
                    sources to identify possible vulnerabilities arising from
                    use of the base and dependent components in the composed TOE
                    operational environment.
                    <m-workunit id="aco_vul.2-5">

                        The evaluator shall examine the sources of information publicly
                        available to support the identification of possible security
                        vulnerabilities in the base component that have become known
                        since the completion of the base component evaluation.

                        The evaluator will use the information in the public
                        domain as described in <xref id="ava_van.2-2" show="link"/> to search for vulnerabilities in the base
                        component.

                        Those potential vulnerabilities that were publicly
                        available prior to the evaluation of the base component
                        do not have to be further investigated unless it is
                        apparent to the evaluator that the attack potential
                        required by an attacker to exploit the potential
                        vulnerability has been significantly reduced. This may
                        be through the introduction of some new technology since
                        the base component evaluation that means the
                        exploitation of the potential vulnerability has been
                        simplified.
                    </m-workunit>
                    <m-workunit id="aco_vul.2-6">

                        The evaluator shall examine the sources of information
                        publicly available to support the identification of
                        possible security vulnerabilities in the dependent
                        component that have become known since the completion of
                        the dependent component evaluation.

                        The evaluator will use the information in the public domain as
                        described in <xref id="ava_van.2-2" show="link"/> to search for
                        vulnerabilities in the dependent component.

                        Those potential vulnerabilities that were publicly
                        available prior to the evaluation of the dependent
                        component do not have to be further investigated unless
                        it is apparent to the evaluator that the attack
                        potential required by an attacker to exploit the
                        potential vulnerability has been significantly
                        reduced. This may be through the introduction of some
                        new technology since evaluation of the dependent
                        component that means the exploitation of the potential
                        vulnerability has been simplified.
                    </m-workunit>
                    <m-workunit id="aco_vul.2-7">

                        The evaluator shall record in the ETR the identified
                        potential security vulnerabilities that are candidates
                        for testing and applicable to the composed TOE in its
                        operational environment.

                        The ST, guidance documentation and functional
                        specification are used to determine whether the
                        vulnerabilities are relevant to the composed TOE in its
                        operational environment.

                        The evaluator records any reasons for exclusion of
                        vulnerabilities from further consideration if the
                        evaluator determines that the vulnerability is not
                        applicable in the operational environment. Otherwise the
                        evaluator records the potential vulnerability for
                        further consideration.

                        A list of potential vulnerabilities applicable to the
                        composed TOE in its operational environment, which can
                        be used as an input into penetration testing activities
                        (<xref id="aco_vul.2.5e" show="id"/>), shall be
                        reported in the ETR by the evaluators.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.2.4e">
                    The evaluator shall perform an independent vulnerability
                    analysis of the composed TOE, using the guidance
                    documentation, reliance information and composition
                    rationale to identify potential vulnerabilities in the
                    composed TOE.
                    <m-workunit id="aco_vul.2-8">

                        The evaluator shall conduct a search of the composed TOE
                        ST, guidance documentation, reliance information and
                        composition rationale to identify possible security
                        vulnerabilities in the composed TOE.

                        The consideration of the components of the composed TOE
                        in the independent evaluator vulnerability analysis will
                        take a slightly different form to that documented in
                        <xref id="ava_van.2.3e" show="link"/> for a component
                        evaluation, as it will not necessarily consider all
                        layers of design abstraction relevant to the assurance
                        package. These will have already been considered during
                        the evaluation of the components, but the evidence may
                        not be available for the composed TOE
                        evaluation. However, the general approach described in
                        the work units associated with <xref id="ava_van.2.3e" show="link"/> is applicable and should form the basis of
                        the evaluator's search for potential vulnerabilities in
                        the composed TOE.

                        A vulnerability analysis of the individual components
                        used in the composed TOE will have already been
                        performed during evaluation of the individual
                        components. The focus of the vulnerability analysis
                        during the composed TOE evaluation is to identify any
                        vulnerabilities introduced as a result of the
                        integration of the components or due to any changes in
                        the use of the components between the evaluated
                        component configuration to the composed TOE
                        configuration.

                        The evaluator will use the understanding of the
                        component's construction as detailed in the reliance
                        information for the dependent component, and the
                        development information and composition rationale for
                        the base component, together with the dependent
                        component design information. This information will
                        allow the evaluator to gain an understanding of how the
                        base component and dependent component interact and
                        identify potential vulnerabilities that may be
                        introduced as a result of this interaction.

                        The evaluator will consider any new guidance provided
                        for the installation, start-up and operation of the
                        composed TOE to identify any potential vulnerabilities
                        introduced through this revised guidance.

                        If any of the individual components have been through
                        assurance continuity activities since the completion of
                        the component evaluation, the evaluator will consider
                        the patch(es) in the independent vulnerability
                        analysis. Information related to the change provided in
                        a public report of the assurance continuity activities
                        (e.g. Maintenance Report) will be the main source of
                        input material of the change. This will be supplemented
                        by any updates to the guidance documentation resulting
                        from the change and any information regarding the change
                        available in the public domain, e.g. vendor
                        website.

                        Any risks identified due to the lack of evidence to
                        establish the full impact of any patches or deviations
                        in the configuration of a component from the evaluated
                        configuration are to be documented in the evaluator's
                        vulnerability analysis.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.2.5e">
                    The evaluator shall conduct penetration testing, based on
                    the identified vulnerabilities, to demonstrate that the
                    composed TOE is resistant to attacks by an attacker with
                    basic attack potential.
                    <m-workunit id="aco_vul.2-9">

                        The evaluator shall conduct penetration testing as
                        detailed for <xref id="ava_van.2.4e" show="link"/>.

                        The evaluator will apply all work units necessary for
                        the satisfaction of evaluator action <xref id="ava_van.2.4e" show="link"/>, reporting in the ETR
                        for the composed TOE all analysis and verdicts as
                        dictated by the work units.

                        The evaluator will also apply the work units for the
                        evaluator action <xref id="ava_van.2.1e" show="link"/>
                        to determine that the composed TOE provided by the
                        developer is suitable for testing.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Enhanced-Basic Composition vulnerability analysis" id="aco_vul.3">
                <aco-hierarchical acomponent="aco_vul.2"/>
                <aco-dependsoncomponent acomponent="aco_dev.3"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether the
                    composed TOE, in its operational environment, has
                    vulnerabilities exploitable by attackers possessing
                    Enhanced-Basic attack potential.

                    The developer provides an analysis of the disposition of
                    any residual vulnerabilities reported for the components
                    and of any vulnerabilities introduced through the
                    combination of the base and dependent components. The
                    evaluator performs a search of the public domain to
                    identify any new potential vulnerabilities in the
                    components (i.e. those issues that have been reported in
                    the public domain since the completion of the component
                    evaluations). The evaluator will also perform an
                    independent vulnerability analysis of the composed TOE and
                    penetration testing.
                </msa-objectives>
                <msa-application-notes>

                    See the application notes for <xref id="ava_van.3" show="link"/>.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the composed TOE suitable for testing;
                        </item>
                        <item>
                            the composed ST;
                        </item>
                        <item>
                            the composition rationale;
                        </item>
                        <item>
                            the reliance information;
                        </item>
                        <item>
                            the guidance documentation;
                        </item>
                        <item>
                            information publicly available to support the
                            identification of possible security vulnerabilities.
                        </item>
                        <item>
                            residual vulnerabilities reported during evaluation of
                            each component.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="aco_vul.3.1d">
                    The developer shall provide the composed TOE for testing.
                </ae-developer>
                <ae-content id="aco_vul.3.1c">
                    The composed TOE shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="aco_vul.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="aco_vul.3-1">
                        <ae-dc-element id="aco_vul.3.1c"/>
                        The evaluator shall examine the composed TOE to
                        determine that it has been installed properly and is in
                        a known state.

                        To determine that the composed TOE has been installed
                        properly and is in a known state the <xref id="ate_ind.2-1" show="link"/> and <xref id="ate_ind.2-2" show="link"/> work units will be
                        applied to the composed TOE.

                        If the assurance package includes <xref id="aco_ctt" show="id"/> family, then the evaluator may refer to the
                        result of the work unit <xref id="aco_ctt" show="link"/>*-1 to demonstrate this has been
                        satisfied.
                    </m-workunit>
                    <m-workunit id="aco_vul.3-2">

                        The evaluator shall examine the composed TOE
                        configuration to determine that any assumptions and
                        objectives in the STs the components relating to IT
                        entities for are fulfilled by the other
                        components.

                        The STs for the component may include assumptions about
                        other components that may use the component to which the
                        ST relates, e.g. the ST for an operating system used as
                        a base component may include an assumption that any
                        applications loaded on the operating system do not run
                        in privileged mode. These assumptions and objectives are
                        to be fulfilled by other components in the composed
                        TOE.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.3.2e">
                    The evaluator shall perform an analysis to determine that
                    any residual vulnerabilities identified for the base and
                    dependent components are not exploitable in the composed TOE
                    in its operational environment.
                    <m-workunit id="aco_vul.3-3">

                        The evaluator shall examine the residual vulnerabilities
                        from the base component evaluation to determine that
                        they are not exploitable in the composed TOE in its
                        operational environment.

                        The list of vulnerabilities identified in the product
                        during the evaluation of the base component, which were
                        demonstrated to be non-exploitable in the base
                        component, is to be used as an input into this
                        activity. The evaluator will determine that the
                        premise(s) on which a vulnerability was deemed to be
                        non-exploitable is upheld in the composed TOE, or
                        whether the combination has re-introduced the potential
                        vulnerability. For example, if during evaluation of the
                        base component it was assumed that a particular
                        operating system service was disabled, which is enabled
                        in the composed TOE evaluation, any potential
                        vulnerabilities relating to that service previously
                        scoped out should now be considered.

                        Also, this list of known, non-exploitable
                        vulnerabilities resulting from the evaluation of the
                        base component should be considered in the light of any
                        known, non-exploitable vulnerabilities for the other
                        components (e.g. dependent component) within the
                        composed TOE. This is to consider the case where a
                        potential vulnerability that is non-exploitable in
                        isolation is exploitable when integrated with an IT
                        entity containing another potential
                        vulnerability.
                    </m-workunit>
                    <m-workunit id="aco_vul.3-4">

                        The evaluator shall examine the residual vulnerabilities
                        from the dependent component evaluation to determine
                        that they are not exploitable in the composed TOE in its
                        operational environment.

                        The list of vulnerabilities identified in the product
                        during the evaluation of the dependent component, which
                        were demonstrated to be non-exploitable in the dependent
                        component, is to be used as an input into this
                        activity. The evaluator will determine that the
                        premise(s) on which a vulnerability was deemed to be
                        non-exploitable is upheld in the composed TOE, or
                        whether the combination has re-introduced the potential
                        vulnerability. For example, if during evaluation of the
                        dependent component it was assumed that IT meeting the
                        operational environment requirements would not return a
                        certain value in response to a service request, which is
                        provided by the base component in the composed TOE
                        evaluation, any potential vulnerabilities relating to
                        that return value previously scoped out should now be
                        considered.

                        Also, this list of known, non-exploitable
                        vulnerabilities resulting from the evaluation of the
                        dependent component should be considered in the light of
                        any known, non-exploitable vulnerabilities for the other
                        components (e.g. base component) within the composed
                        TOE. This is to consider the case where a potential
                        vulnerability that is non-exploitable in isolation is
                        exploitable when integrated with an IT entity containing
                        another potential vulnerability.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.3.3e">
                    The evaluator shall perform a search of public domain
                    sources to identify possible vulnerabilities arising from
                    use of the base and dependent components in the composed TOE
                    operational environment.
                    <m-workunit id="aco_vul.3-5">

                        The evaluator shall examine the sources of information publicly
                        available to support the identification of possible security
                        vulnerabilities in the base component that have become known
                        since the completion of the base component evaluation.

                        The evaluator will use the information in the public
                        domain as described in <xref id="ava_van.3-2" show="link"/> to search for vulnerabilities in the base
                        component.

                        Those potential vulnerabilities that were publicly
                        available prior to the evaluation of the base component
                        do not have to be further investigated unless it is
                        apparent to the evaluator that the attack potential
                        required by an attacker to exploit the potential
                        vulnerability has been significantly reduced. This may
                        be through the introduction of some new technology since
                        the base component evaluation that means the
                        exploitation of the potential vulnerability has been
                        simplified.
                    </m-workunit>
                    <m-workunit id="aco_vul.3-6">

                        The evaluator shall examine the sources of information
                        publicly available to support the identification of
                        possible security vulnerabilities in the dependent
                        component that have become known since completion of the
                        dependent component evaluation.

                        The evaluator will use the information in the public domain as
                        described in <xref id="ava_van.3-2" show="link"/> to search for
                        vulnerabilities in the dependent component.

                        Those potential vulnerabilities that were publicly
                        available prior to the evaluation of the dependent
                        component do not have to be further investigated unless
                        it is apparent to the evaluator that the attack
                        potential required by an attacker to exploit the
                        potential vulnerability has been significantly
                        reduced. This may be through the introduction of some
                        new technology since evaluation of the dependent
                        component that means the exploitation of the potential
                        vulnerability has been simplified.
                    </m-workunit>
                    <m-workunit id="aco_vul.3-7">

                        The evaluator shall record in the ETR the identified
                        potential security vulnerabilities that are candidates
                        for testing and applicable to the composed TOE in its
                        operational environment.

                        The ST, guidance documentation and functional
                        specification are used to determine whether the
                        vulnerabilities are relevant to the composed TOE in its
                        operational environment.

                        The evaluator records any reasons for exclusion of
                        vulnerabilities from further consideration if the
                        evaluator determines that the vulnerability is not
                        applicable in the operational environment. Otherwise the
                        evaluator records the potential vulnerability for
                        further consideration.

                        A list of potential vulnerabilities applicable to the
                        composed TOE in its operational environment, which can
                        be used as an input into penetration testing activities
                        (<xref id="aco_vul.3.5e" show="id"/>), shall be
                        reported in the ETR by the evaluators.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.3.4e">
                    The evaluator shall perform an independent vulnerability
                    analysis of the composed TOE, using the guidance
                    documentation, reliance information and composition
                    rationale to identify potential vulnerabilities in the
                    composed TOE.
                    <m-workunit id="aco_vul.3-8">

                        The evaluator shall conduct a search of the composed TOE
                        ST, guidance documentation, reliance information and
                        composition rationale to identify possible security
                        vulnerabilities in the composed TOE.

                        The consideration of the components in the independent
                        evaluator vulnerability analysis will take a slightly
                        different form to that documented in <xref id="ava_van.3.3e" show="link"/> for a component
                        evaluation, as it will not necessarily consider all
                        layers of design abstraction relevant to the assurance
                        package. These will have already been considered during
                        the evaluation of the base component, but the evidence
                        may not be available for the composed TOE
                        evaluation. However, the general approach described in
                        the work units associated with <xref id="ava_van.3.3e" show="link"/> is applicable and should form the basis of
                        the evaluator's search for potential vulnerabilities in
                        the composed TOE.

                        A vulnerability analysis of the individual components
                        used in the composed TOE will have already been
                        performed during evaluation of the components. The focus
                        of the vulnerability analysis during the composed TOE
                        evaluation is to identify any vulnerabilities introduced
                        as a result of the integration of the components or due
                        to any changes in the use of the components between the
                        configuration of the component determined during the
                        component evaluation and the composed TOE
                        configuration.

                        The evaluator will use the understanding of the
                        component's construction as detailed in the reliance
                        information for the dependent component, and the
                        composition rationale and development information for
                        the base component, together with the dependent
                        component design information. This information will
                        allow the evaluator to gain an understanding of how the
                        base component and dependent component interact.

                        The evaluator will consider any new guidance provided
                        for the installation, start-up and operation of the
                        composed TOE to identify any potential vulnerabilities
                        introduced through this revised guidance.

                        If any of the individual components have been through
                        assurance continuity activities since the completion of
                        the component evaluation, the evaluator will consider
                        the patch in the independent vulnerability
                        analysis. Information related to the change provided in
                        a public report of the assurance continuity activities
                        (e.g. Maintenance Report). This will be supplemented by
                        any updates to the guidance documentation resulting from
                        the change and any information regarding the change
                        available in the public domain, e.g. vendor
                        website.

                        Any risks identified due to the lack of evidence to
                        establish the full impact of any patches or deviations
                        in the configuration of a component from the evaluated
                        configuration are to be documented in the evaluator's
                        vulnerability analysis.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="aco_vul.3.5e">
                    The evaluator shall conduct penetration testing, based on the
                    identified vulnerabilities, to demonstrate that the composed TOE
                    is resistant to attacks by an attacker with Enhanced-Basic
                    attack potential.
                    <m-workunit id="aco_vul.3-9">
                        The evaluator shall conduct penetration testing as detailed
                        for <xref id="ava_van.3.4e" show="link"/>.
                        The evaluator will apply all work units necessary for the
                        satisfaction of evaluator action <xref id="ava_van.3.4e" show="link"/>, reporting in the ETR for the composed TOE all
                        analysis and verdicts as dictated by the work units.
                        The evaluator will also apply the work units for the
                        evaluator action <xref id="ava_van.3.1e" show="link"/> to
                        determine that the composed TOE provided by the developer is
                        suitable for testing.</m-workunit></ae-evaluator>
            </a-component>
        </a-family>
    </a-class>

    <a-class name="Development" id="adv">
        <ac-introduction>

            The requirements of the Development class provide information
            about the TOE. The knowledge obtained by this information is
            used as the basis for conducting vulnerability analysis and
            testing upon the TOE, as described in the <xref id="ava" show="id"/> and <xref id="ate" show="id"/> classes.


            The Development class encompasses six families of requirements
            for structuring and representing the TSF at various levels and
            varying forms of abstraction. These families include:
            <list type="itemized">
                <item>requirements for the description (at the various
                    levels of abstraction) of the design and implementation of
                    the SFRs (<xref id="adv_fsp" show="id"/>, <xref id="adv_tds" show="id"/>, <xref id="adv_imp" show="id"/>)</item>
                <item>requirements for the description of the
                    architecture-oriented features of domain separation, TSF
                    self-protection and non-bypassability of the security
                    functionality (<xref id="adv_arc" show="id"/>)</item>
                <item>requirements for a security policy model and for correspondence
                    mappings between security policy model and the functional
                    specification (<xref id="adv_spm" show="id"/>)</item>
                <item>requirements on the internal structure of the TSF,
                    which covers aspects such as modularity, layering, and
                    minimisation of complexity (<xref id="adv_int" show="id"/>)
                </item>
            </list>


            When documenting the security functionality of a TOE, there
            are two properties that need to be demonstrated.  The first
            property is that the security functionality works correctly;
            that is, it performs as specified. The second property, and
            one that is arguably harder to demonstrate, is that the TOE
            cannot be used in a way such that the security functionality
            can be corrupted or bypassed. These two properties require
            somewhat different approaches in analysis, and so the families
            in <xref id="adv" show="id"/> are structured to support these
            different approaches. The families <xref id="adv_fsp" show="link"/>, <xref id="adv_tds" show="link"/>, <xref id="adv_imp" show="link"/>, and <xref id="adv_spm" show="link"/> deal with the first property: the specification
            of the security functionality. The families <xref id="adv_arc" show="link"/> and <xref id="adv_int" show="link"/> deal with
            the second property: the specification of the design of the
            TOE demonstrating the security functionality cannot be
            corrupted or bypassed. It should be noted that both properties
            need to be realised: the more confidence one has that the
            properties are satisfied, the more trustworthy the TOE is. The
            components in the families are designed so that more assurance
            can be gained as the components hierarchically
            increase.

            The paradigm for the families targeted at the first property
            is one of design decomposition. At the highest level, there is
            a functional specification of the TSF in terms of its
            interfaces (describing <italic>what</italic> the TSF does in
            terms of requests to the TSF for services and resulting
            responses), decomposing the TSF into smaller units (dependent
            on the assurance desired and the complexity of the TOE) and
            describing <italic>how</italic> the TSF accomplishes its
            functions (to a level of detail commensurate with the
            assurance level), and showing the implementation of the TSF. A
            formal model of the security behaviour also may be given. All
            levels of decomposition are used in determining the
            completeness and accuracy of all other levels, ensuring that
            the levels are mutually supportive. The requirements for the
            various TSF representations are separated into different
            families, to allow the PP/ST author to specify which TSF
            representations are required. The level chosen will dictate
            the assurance desired/gained.

            Figure <xref show="id" id="adv-relationships"/> indicates the
            relationships among the various TSF representations of the
            <xref id="adv" show="id"/> class, as well as their
            relationships with other classes. As the figure indicates, the
            <xref id="ape" show="id"/> and <xref id="ase" show="id"/>
            classes define the requirements for the correspondence between
            the SFRs and the security objectives for the TOE. Class <xref id="ase" show="id"/> also defines requirements for the
            correspondence between both the security objectives and SFRs,
            and for the TOE summary specification which explains how the
            TOE meets its SFRs.  The activities of <xref id="alc_cmc.5.2e" show="id"/> include the verification that the TSF that is
            tested under the <xref id="ate" show="id"/> and <xref id="ava" show="id"/> classes is in fact the one described by all of the
            <xref id="adv" show="id"/> decomposition levels.
            <figure entity="a-class/graphics/ADV-relationships.png" width="textwidth" height="!" title="Relationships of ADV         constructs to one another and to other families" id="adv-relationships"/>

            The requirements for all other correspondence shown in Figure
            <xref show="id" id="adv-relationships"/> are defined in the
            <xref id="adv" show="id"/> class. The <xref id="adv_spm" show="link"/> family defines the requirements for formally
            modelling selected SFRs, and providing correspondence between
            the functional specification and the formal model.  Each
            assurance family specific to a TSF representation (i.e., <xref id="adv_fsp" show="link"/>, <xref id="adv_tds" show="link"/>
            and <xref id="adv_imp" show="link"/>) defines requirements
            relating that TSF representation to the SFRs. All
            decompositions must accurately reflect all other
            decompositions (i.e., be mutually supportive); the developer
            supplies the tracings in the last .C elements of the
            components. Assurance relating to this factor is obtained
            during the analysis for each of the levels of decomposition by
            referring to other levels of decomposition (in a recursive
            fashion) while the analysis of a particular level of
            decomposition is being performed; the evaluator verifies the
            correspondence as part of the second E element. The
            understanding gained from these levels of decomposition form
            the basis of the functional and penetration testing
            efforts.

            The <xref id="adv_int" show="id"/> family is not represented
            in this figure, as it is related to the internal structure of
            the TSF, and is only indirectly related to the process of
            refinement of the TSF representations. Similarly, the <xref id="adv_arc" show="id"/> family is not represented in the
            figure because it relates to the architectural soundness,
            rather than representation, of the TSF. Both <xref id="adv_int" show="id"/> and <xref id="adv_arc" show="id"/>
            relate to the analysis of the property that the TOE cannot be
            made to circumvent or corrupt its security
            functionality.

            The TOE security functionality (TSF) consists of all parts of
            the TOE that have to be relied upon for enforcement of the
            SFRs. The TSF includes both functionality that directly
            enforces the SFRs, as well as functionality that, while not
            directly enforcing the SFRs, contributes to their enforcement
            in a more indirect manner, including functionality with the
            capability to cause the SFRs to be violated. This includes
            portions of the TOE that are invoked on start-up that are
            responsible for putting the TSF into its initial secure
            state.

            Several important concepts were used in the development of the
            components of the <xref id="adv" show="id"/> families. These
            concepts, while introduced briefly here, are explained more
            fully in the application notes for the families.

            One over-riding notion is that, as more information becomes
            available, greater assurance can be obtained that the security
            functionality 1) is correctly implemented; 2) cannot be
            corrupted; and 3) cannot be bypassed. This is done through the
            verification that the documentation is correct and consistent
            with other documentation, and by providing information that
            can be used to ensure that the testing activities (both
            functional and penetration testing) are comprehensive. This is
            reflected in the levelling of the components of the
            families. In general, components are levelled based on the
            amount of information that is to be provided (and subsequently
            analysed).

            While not true for all TOEs, it is generally the case that the
            TSF is sufficiently complex that there are portions of the TSF
            that deserve more intense examination than other portions of
            the TSF. Determining those portions is unfortunately somewhat
            subjective, thus terminology and components have been defined
            such that as the level of assurance increases, the
            responsibility for determining what portions of the TSF need
            to be examined in detail shifts from the developer to the
            evaluator. To aid in expressing this concept, the following
            terminology is introduced. It should be noted that in the
            families of the class, this terminology is used when
            expressing SFR-related portions of the TOE (that is, elements
            and work units embodied in the <xref id="adv_fsp" show="link"/>, <xref id="adv_tds" show="link"/>, and <xref id="adv_imp" show="link"/> families). While the general
            concept (that some portions of the TOE are more
            <italic>interesting</italic> than others) applies to other
            families, the criteria are expressed differently in order to
            obtain the assurance required.

            All portions of the TSF are <italic>security
            relevant</italic>, meaning that they must preserve the
            security of the TOE as expressed by the SFRs and
            requirements for domain separation and
            non-bypassability. One aspect of security relevance is the
            degree to which a portion of the TSF enforces a security
            requirement. Since different portions of the TOE play
            different roles (or no apparent role at all) in enforcing
            security requirements, this creates a continuum of SFR
            relevance: at one end of this continuum are portions of the
            TOE that are termed <italic>SFR-enforcing</italic>. Such
            portions play a direct role in implementing any SFR on the
            TOE. Such SFRs refer to any functionality provided by one of
            the SFRs contained in the ST. It should be noted that the
            definition of <italic>plays a role in</italic> for
            SFR-enforcing functionality is impossible to express
            quantitatively. For example, in the implementation of a
            Discretionary Access Control (DAC) mechanism, a very narrow
            view of <italic>SFR-enforcing</italic> might be the several
            lines of code that actually perform the check of a subject's
            attributes against the object's attributes. A broader view
            would include the software entity (e.g., C function) that
            contained the several lines of code. A broader view still
            would include callers of the C function, since they would be
            responsible for enforcing the decision returned by the
            attribute check. A still broader view would include any code
            in the call tree (or programming equivalent for the
            implementation language used) for that C function (e.g., a
            sort function that sorted access control list entries in a
            first-match algorithm implementation). At some point, the
            component is not so much <italic>enforcing</italic> the
            security policy but rather plays a
            <italic>supporting</italic> role; such components are termed
            <italic>SFR supporting</italic>.

            One of the characteristics of SFR-supporting functionality is
            that it is trusted to preserve the correctness of the SFR
            implementation by operating without error. Such functionality
            may be depended on by SFR-enforcing functionality, but the
            dependence is generally at a functional level; for example,
            memory management, buffer management, etc. Further down on the
            security relevance continuum is functionality termed
            <italic>SFR non-interfering</italic>. Such functionality has
            no role in implementing the SFRs, and is likely part of the
            TSF because of its environment; for example, any code running
            in a privileged hardware mode on an operating system. It needs
            to be considered part of the TSF because, if compromised (or
            replaced by malicious code), it could compromise the correct
            operation of an SFR by virtue of its operating in the
            privileged hardware mode. An example of SFR non-interfering
            functionality might be a set of mathematical floating point
            operations implemented in kernel mode for speed
            considerations.

            The architecture family (<xref id="adv_arc" show="link"/>)
            provides for requirements and analysis of the TOE based on
            properties of domain separation, self-protection, and
            non-bypassability. These properties relate to the SFRs in
            that, if these properties are not present, it will likely lead
            to the failure of mechanisms implementing SFRs. Functionality
            and design relating to these properties <italic>is
            not</italic> considered a part of the continuum described
            above, but instead is treated separately due to its
            fundamentally different nature and analysis
            requirements.

            The difference in analysis of the implementation of SFRs
            (SFR-enforcing and SFR-supporting functionality) and the
            implementation of somewhat fundamental security properties of
            the TOE, which include the initialisation, self-protection,
            and non-bypassability concerns, is that the SFR-related
            functionality is more or less directly visible and relatively
            easy to test, while the above-mentioned properties require
            varying degrees of analysis on a much broader set of
            functionality. Further, the depth of analysis for such
            properties will vary depending on the design of the TOE. The
            <xref id="adv" show="id"/> families are constructed to address
            this by a separate family (<xref id="adv_arc" show="link"/>)
            devoted to analysis of the initialisation, self-protection,
            and non-bypassability requirements, while the other families
            are concerned with analysis of the functionality supporting
            SFRs.

            Even in cases where different descriptions are necessary for
            the multiple levels of abstraction, it is not absolutely
            necessary for each and every TSF representation to be in a
            separate document. Indeed, it may be the case that a single
            document meets the documentation requirements for more than
            one TSF representation, since it is the information about each
            of these TSF representations that is required, rather than the
            resulting document structure. In cases where multiple TSF
            representations are combined within a single document, the
            developer should indicate which portions of the documents meet
            which requirements.

            Three types of specification style are mandated by this class:
            informal, semiformal and formal. The functional specification
            and TOE design documentation are always written in either
            informal or semiformal style. A semiformal style reduces the
            ambiguity in these documents over an informal presentation. A
            formal specification may also be required <italic>in addition
            to</italic> the semi-formal presentation; the value is that a
            description of the TSF in more than one way will add increased
            assurance that the TSF has been completely and accurately
            specified.

            An informal specification is written as prose in natural
            language. Natural language is used here as meaning
            communication in any commonly spoken tongue (e.g. Spanish,
            German, French, English, Dutch). An informal specification is
            not subject to any notational or special restrictions other
            than those required as ordinary conventions for that language
            (e.g. grammar and syntax). While no notational restrictions
            apply, the informal specification is also required to provide
            defined meanings for terms that are used in a context other
            than that accepted by normal usage.

            The difference between semiformal and informal documents is
            only a matter of formatting or presentation: a semiformal
            notation includes such things as an explicit glossary of
            terms, a standardised presentation format, etc. A semiformal
            specification is written to a standard presentation
            template. The presentation should use terms consistently if
            written in a natural language. The presentation may also use
            more structured languages/diagrams (e.g. data-flow diagrams,
            state transition diagrams, entity-relationship diagrams, data
            structure diagrams, and process or program structure
            diagrams). Whether based on diagrams or natural language, a
            set of conventions must be used in the presentation. The
            glossary explicitly identifies the words that are being used
            in a precise and constant manner; similarly, the standardised
            format implies that extreme care has been taken in
            methodically preparing the document in a manner that maximises
            clarity. It should be noted that fundamentally different
            portions of the TSF may have different semiformal notation
            conventions and presentation styles (as long as the number of
            different ``semiformal notations'' is small); this still
            conforms to the concept of a <italic>semiformal
            presentation</italic>.

            A formal specification is written in a notation based upon
            well-established mathematical concepts, and is typically
            accompanied by supporting explanatory (informal) prose. These
            mathematical concepts are used to define the syntax and
            semantics of the notation and the proof rules that support
            logical reasoning. The syntactic and semantic rules supporting
            a formal notation should define how to recognise constructs
            unambiguously and determine their meaning. There needs to be
            evidence that it is impossible to derive contradictions, and
            all rules supporting the notation need to be defined or
            referenced.
        </ac-introduction>
        <ac-overview>

            The purpose of the Development class is to provide evidence
            about the TOE. Without the knowledge about the TOE that is
            gained from this information, there could be no useful
            vulnerability analysis or testing conducted upon the TOE (as
            described in the <xref id="ava" show="id"/> and <xref id="ate" show="id"/> classes). </ac-overview>
        <ma-introduction>

            The purpose of the development activity is to assess the
            design documentation in terms of its adequacy to understand
            how the TSF meets the SFRs and how the implementation of these
            SFRs cannot be tampered with or bypassed. This understanding
            is achieved through examination of increasingly refined
            descriptions of the TSF design documentation. Design
            documentation consists of a functional specification (which
            describes the interfaces of the TSF), a TOE design description
            (which describes the architecture of the TSF in terms of how
            it works in order to perform the functions related to the SFRs
            being claimed), and an implementation description (a source
            code level description). In addition, there is a security
            architecture description (which describes the architectural
            properties of the TSF to explain how its security enforcement
            cannot be compromised or bypassed), an internals description
            (which describes how the TSF was constructed in a manner that
            encourages understandability), and a security policy model
            (which formally describes the security policies enforced by
            the TSF).
        </ma-introduction>
        <ma-application-notes>

            The CC requirements for design documentation are levelled by
            the amount, and detail of information provided, and the degree
            of formality of the presentation of the information. At lower
            levels, the most security-critical portions of the TSF are
            described with the most detail, while less security-critical
            portions of the TSF are merely summarised; added assurance is
            gained by increasing the amount of information about the most
            security-critical portions of the TSF, and increasing the
            details about the less security-critical portions. The most
            assurance is achieved when thorough details and information of
            all portions are provided.

            The CC considers a document's degree of formality (that is,
            whether it is informal or semiformal) to be hierarchical. An
            informal document is one that is expressed in a natural
            language. The methodology does not dictate the specific
            language that must be used; that issue is left for the
            scheme. The following paragraphs differentiate the contents of
            the different informal documents.

            A functional specification provides a description of the
            purpose and method-of-use of interfaces to the TSF. For
            example, if an operating system presents the user with a means
            of self-identification, of creating files, of modifying or
            deleting files, of setting permissions defining what other
            users may access files, and of communicating with remote
            machines, its functional specification would contain
            descriptions of each of these and how they are realised
            through interactions with the externally-visible interfaces to
            the TSF. If there is also audit functionality that detects and
            record the occurrences of such events, descriptions of this
            audit functionality would also be expected to be part of the
            functional specification; while this functionality is
            technically not directly invoked by the user at the external
            interface, it certainly is affected by what occurs at the
            user's external interface.

            A design description is expressed in terms of logical
            divisions (subsystems or modules) that each provide a
            comprehensible service or function. For example, a firewall
            might be composed of subsystems that deal with packet
            filtering, with remote administration, with auditing, and with
            connection-level filtering. The design description of the
            firewall would describe the actions that are taken, in terms
            of what actions each subsystem takes when an incoming packet
            arrives at the firewall.
        </ma-application-notes>
        <a-family name="Security Architecture" id="adv_arc">
            <af-objectives>

                The objective of this family is for the developer to provide
                a description of the security architecture of the TSF. This
                will allow analysis of the information that, when coupled
                with the other evidence presented for the TSF, will confirm
                the TSF achieves the desired properties. The security
                architecture descriptions supports the implicit claim that
                security analysis of the TOE can be achieved by examining
                the TSF; without a sound architecture, the entire TOE
                functionality would have to be examined.
            </af-objectives>
            <af-overview>

                The information presented for the security architecture of
                the TOE is related to the information contained in other
                decomposition documentation (functional specification and
                TOE design documentation) provided for the TSF, but presents
                the design in a manner that supports architectural arguments
                (e.g., the TSF cannot be compromised; the TSF provides
                security domains consistent with its SFRs; the TSF cannot be
                bypassed).
            </af-overview>
            <af-levelling-criteria>

                This family contains only one component.
            </af-levelling-criteria>
            <af-application-notes>

                The properties of self-protection, domain separation, and
                non-bypassability are distinct from security functionality
                expressed by Part 2 SFRs because self-protection and
                non-bypassability largely have no directly observable
                interface at the TSF. Rather, they are properties of the TSF
                that are achieved through the design of the TOE and TSF, and
                enforced by the correct implementation of that
                design.

                The approach used in this family is for the developer to
                design and provide a TSF that exhibits the above-mentioned
                properties, and to provide evidence (in the form of
                documentation) that explains these properties of the
                TSF. This explanation is provided at the same level of
                detail as the description of the SFR-enforcing elements of
                the TOE in the TOE design document. The evaluator has the
                responsibility for looking at the evidence and, coupled with
                other evidence delivered for the TOE and TSF, determining
                that the properties are achieved.

                Specification of security functionality implementing the
                SFRs (in the <xref id="adv_fsp" show="link"/> and <xref id="adv_tds" show="link"/>) will not necessarily describe
                mechanisms employed in implementing self-protection and
                non-bypassability (e.g.  memory management
                mechanisms). Therefore, the material needed to provide the
                assurance that these requirements are being achieved is
                better suited to a presentation separate from the design
                decomposition of the TSF as embodied in <xref id="adv_fsp" show="id"/> and <xref id="adv_tds" show="id"/>. This is not
                to imply that the security architecture description called
                for by this component cannot reference or make use of the
                design decomposition material; but it is likely that much of
                the detail present in the decomposition documentation will
                not be relevant to the argument being provided for the
                security architecture description document.

                The description of architectural soundness can be thought of
                as a developer's vulnerability analysis, in that it provides
                the justification for why the TSF is sound and enforces all
                of its SFRs. Where the soundness is achieved through
                specific security mechanisms, these will be tested as part
                of the <xref id="ate_dpt" show="link"/> requirements; where
                the soundness is achieved solely through the architecture,
                the behaviour will be tested as part of the <xref id="ava" show="link"/> requirements.

                This family consists of requirements for a security
                architecture description that describes the self-protection,
                domain separation, non-bypassability principles, including a
                description of how these principles are supported by the
                parts of the TOE that are used for TSF
                initialisation.
                Additional information on the security architecture
                properties of self-protection, domain separation, and
                non-bypassability can be found in Annex <xref id="arc_annex" show="title"/>.
            </af-application-notes>
            <a-component name="Security architecture description" id="adv_arc.1">
                <aco-dependsoncomponent acomponent="adv_fsp.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TSF is structured such that it cannot be tampered with
                    or bypassed, and whether TSFs that provide security
                    domains isolate those domains from each other.
                </msa-objectives>
                <msa-application-notes>

                    The notions of self-protection, domain separation, and
                    non-bypassability are distinct from security functionality
                    expressed in Part 2 SFRs because self-protection and
                    non-bypassability largely have no directly observable
                    interface at the TSF. Rather, they are properties of the
                    TSF that are achieved through the design of the TOE, and
                    enforced by the correct implementation of that
                    design. Also, the evaluation of these properties is less
                    straight-forward than the evaluation of mechanisms; it is
                    more difficult to check for the absence of functionality
                    than for its presence. However, the determination that
                    these properties are being satisfied is just as critical
                    as the determination that the mechanisms are properly
                    implemented.

                    The overall approach used is that the developer provides a
                    TSF that meets the above-mentioned properties, and
                    provides evidence (in the form of documentation) that can
                    be analysed to show that the properties are indeed
                    met. The evaluator has the responsibility for looking at
                    the evidence and, coupled with other evidence delivered
                    for the TOE, determining that the properties are
                    achieved. The work units can be characterised as those
                    detailing with what information has to be provided, and
                    those dealing with the actual analysis the evaluator
                    performs.

                    The security architecture description describes how
                    domains are defined and how the TSF keeps them
                    separate. It describes what prevents untrusted processes
                    from getting to the TSF and modifying it. It describes
                    what ensures that all resources under the TSF's control
                    are adequately protected and that all actions related to
                    the SFRs are mediated by the TSF. It explains any role the
                    environment plays in any of these (e.g. presuming it gets
                    correctly invoked by its underlying environment, how is
                    its security functionality invoked?). In short, it
                    explains how the TOE is considered to be providing any
                    kind of <italic>security</italic> service.

                    The analyses the evaluator performs must be done in the
                    context of all of the development evidence provided for
                    the TOE, at the level of detail the evidence is
                    provided. At lower assurance levels there should not be
                    the expectation that, for example, TSF self-protection is
                    completely analysed, because only high-level design
                    representations will be available. The evaluator also
                    needs to be sure to use information gleaned from other
                    portions of their analysis (e.g., analysis of the TOE
                    design) in making their assessments for the properties
                    being examined in the following work units.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design;
                        </item>
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the implementation representation (if available);
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_arc.1.1d">
                    The developer shall design and implement the TOE so that the
                    security features of the TSF cannot be bypassed.
                </ae-developer>
                <ae-developer id="adv_arc.1.2d">
                    The developer shall design and implement the TSF so that it
                    is able to protect itself from tampering by untrusted active
                    entities.
                </ae-developer>
                <ae-developer id="adv_arc.1.3d">
                    The developer shall provide a security architecture
                    description of the TSF.
                </ae-developer>
                <ae-content id="adv_arc.1.1c">
                    The security architecture description shall be at a level of
                    detail commensurate with the description of the
                    SFR-enforcing abstractions described in the TOE design
                    document.
                </ae-content>
                <ae-content id="adv_arc.1.2c">
                    The security architecture description shall describe the
                    security domains maintained by the TSF consistently with the
                    SFRs.
                </ae-content>
                <ae-content id="adv_arc.1.3c">
                    The security architecture description shall describe how the
                    TSF initialisation process is secure.
                </ae-content>
                <ae-content id="adv_arc.1.4c">
                    The security architecture description shall demonstrate that
                    the TSF protects itself from tampering.
                </ae-content>
                <ae-content id="adv_arc.1.5c">
                    The security architecture description shall demonstrate that
                    the TSF prevents bypass of the SFR-enforcing functionality.
                </ae-content>
                <ae-evaluator id="adv_arc.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_arc.1-1">
                        <ae-dc-element id="adv_arc.1.1c"/>

                        The evaluator shall examine the security architecture
                        description to determine that the information provided
                        in the evidence is presented at a level of detail
                        commensurate with the descriptions of the SFR-enforcing
                        abstractions contained in the functional specification
                        and TOE design document.

                        With respect to the functional specification, the
                        evaluator should ensure that the self-protection
                        functionality described cover those effects that are
                        evident at the TSFI. Such a description might include
                        protection placed upon the executable images of the TSF,
                        and protection placed on objects (e.g., files used by
                        the TSF). The evaluator ensures that the functionality
                        that might be invoked through the TSFI is
                        described.

                        If <xref id="adv_tds.1" show="link"/> or <xref id="adv_tds.2" show="link"/> is included, the evaluator
                        ensures the security architecture description contains
                        information on how any subsystems that contribute to TSF
                        domain separation work.

                        If <xref id="adv_tds.3" show="link"/> or higher is
                        available, the evaluator ensures that the security
                        architecture description also contains
                        implementation-dependent information.  For example, such
                        a description might contain information pertaining to
                        coding conventions for parameter checking that would
                        prevent TSF compromises (e.g. buffer overflows), and
                        information on stack management for call and return
                        operations. The evaluator checks the descriptions of the
                        mechanisms to ensure that the level of detail is such
                        that there is little ambiguity between the description
                        in the security architecture description and the
                        implementation representation.

                        The evaluator action related to this work unit is assigned a fail verdict
                        if the security architecture description mentions any module, subsystem, or interface
                        that is not described in the functional specification or TOE design document. </m-workunit>
                    <m-workunit id="adv_arc.1-2">
                        <ae-dc-element id="adv_arc.1.2c"/>

                        The evaluator shall examine the security architecture
                        description to determine that it describes the security
                        domains maintained by the TSF.

                        Security domains refer to environments supplied by the
                        TSF for use by potentially-harmful entities; for
                        example, a typical secure operating system supplies a
                        set of resources (address space, per-process environment
                        variables) for use by processes with limited access
                        rights and security properties. The evaluator determines
                        that the developer's description of the security domains
                        takes into account all of the SFRs claimed by the
                        TOE.

                        For some TOEs such domains do not exist because all of
                        the interactions available to users are severely
                        constrained by the TSF. A packet-filter firewall is an
                        example of such a TOE. Users on the LAN or WAN do not
                        interact with the TOE, so there need be no security
                        domains; there are only data structures maintained by
                        the TSF to keep the users' packets separated. The
                        evaluator ensures that any claim that there are no
                        domains is supported by the evidence and that no such
                        domains are, in fact, available.
                    </m-workunit>
                    <m-workunit id="adv_arc.1-3">
                        <ae-dc-element id="adv_arc.1.3c"/>

                        The evaluator shall examine the security architecture
                        description to determine that the initialisation process
                        preserves security.

                        The information provided in the security architecture
                        description relating to TSF initialisation is directed
                        at the TOE components that are involved in bringing the
                        TSF into an initial secure state (i.e. when all parts of
                        the TSF are operational) when power-on or a reset is
                        applied. This discussion in the security architecture
                        description should list the system initialisation
                        components and the processing that occurs in
                        transitioning from the ``down'' state to the initial
                        secure state.

                        It is often the case that the components that perform
                        this initialisation function are not accessible after
                        the secure state is achieved; if this is the case then
                        the security architecture description identifies the components and
                        explains how they are not reachable by untrusted
                        entities after the TSF has been established. In this
                        respect, the property that needs to be preserved is that
                        these components either 1) cannot be accessed by
                        untrusted entities after the secure state is achieved,
                        or 2) if they provide interfaces to untrusted entities,
                        these TSFI cannot be used to tamper with the TSF.

                        The TOE components related to TSF initialisation, then,
                        are treated themselves as part of the TSF, and analysed
                        from that perspective. It should be noted that even
                        though these are treated as part of the TSF, it is
                        likely that a justification (as allowed by <xref id="adv_int" show="link"/>) can be made that they do not
                        have to meet the internal structuring requirements of
                        <xref id="adv_int" show="id"/>.
                    </m-workunit>
                    <m-workunit id="adv_arc.1-4">
                        <ae-dc-element id="adv_arc.1.4c"/>

                        The evaluator shall examine the security architecture
                        description to determine that it contains information
                        sufficient to support a determination that the TSF is
                        able to protect itself from tampering by untrusted
                        active entities.

                        ''Self-protection'' refers to the ability of the TSF to
                        protect itself from manipulation from external entities
                        that may result in changes to the TSF. For TOEs that
                        have dependencies on other IT entities, it is often the
                        case that the TOE uses services supplied by the other IT
                        entities in order to perform its functions. In such
                        cases, the TSF alone does not protect itself because it
                        depends on the other IT entities to provide some of the
                        protection. For the purposes of the security
                        architecture description, the notion of
                        <italic>self-protection</italic> applies only to the
                        services provided by the TSF through its TSFI, and not
                        to services provided by underlying IT entities that it
                        uses.

                        Self-protection is typically achieved by a variety of
                        means, ranging from physical and logical restrictions on
                        access to the TOE; to hardware-based means (e.g.
                        ``execution rings'' and memory management
                        functionality); to software-based means (e.g.  boundary
                        checking of inputs on a trusted server). The evaluator
                        determines that all such mechanisms are
                        described.

                        The evaluator determines that the design description
                        covers how user input is handled by the TSF in such a
                        way that the TSF does not subject itself to being
                        corrupted by that user input. For example, the TSF might
                        implement the notion of privilege and protect itself by
                        using privileged-mode routines to handle user input. The
                        TSF might make use of processor-based separation
                        mechanisms such as privilege levels or rings. The TSF
                        might implement software protection constructs or coding
                        conventions that contribute to implementing separation of
                        software domains, perhaps by delineating user address
                        space from system address space. And the TSF might have
                        reliance its environment to provide some support to the
                        protection of the TSF.

                        All of the mechanisms contributing to the domain
                        separation functions are described. The evaluator should
                        use knowledge gained from other evidence (functional
                        specification, TOE design, TSF internals description,
                        other parts of the security architecture description, or
                        implementation representation, as included in the
                        assurance package for the TOE) in determining if any
                        functionality contributing to self-protection was
                        described that is not present in the security
                        architecture description.

                        Accuracy of the description of the self-protection mechanisms is the property that the
                        description faithfully describes what is implemented. The evaluator should use other
                        evidence (functional specification, TOE design, TSF Internals documentation, other parts
                        of the security architecture description, implementation representation, as included in
                        the ST for the TOE) in determining whether there are discrepancies in any descriptions
                        of the self-protection mechanisms. If
                        <xref id="adv_imp" show="link"/>
                        is included in the assurance package for the TOE, the evaluator will choose a sample of
                        the implementation representation; the evaluator should also ensure that the descriptions
                        are accurate for the sample chosen. If an evaluator cannot understand how a certain
                        self-protection mechanism works or could work in the system architecture, it may be the
                        case that the description is not accurate.
                    </m-workunit>
                    <m-workunit id="adv_arc.1-5">
                        <ae-dc-element id="adv_arc.1.5c"/>

                        The evaluator shall examine the security architecture
                        description to determine that it presents an analysis
                        that adequately describes how the SFR-enforcing
                        mechanisms cannot be bypassed.

                        Non-bypassability is a property that the security
                        functionality of the TSF (as specified by the SFRs) is
                        always invoked.  For example, if access control to files
                        is specified as a capability of the TSF via an SFR,
                        there must be no interfaces through which files can be
                        accessed without invoking the TSF's access control
                        mechanism (such as an interface through which a raw disk
                        access takes place).

                        Describing how the TSF mechanisms cannot be bypassed
                        generally requires a systematic argument based on the
                        TSF and the TSFIs. The description of how the TSF works
                        (contained in the design decomposition evidence, such as
                        the functional specification, TOE design documentation)
                        - along with the information in the TSS - provides the
                        background necessary for the evaluator to understand
                        what resources are being protected and what security
                        functions are being provided. The functional
                        specification provides descriptions of the TSFIs through
                        which the resources/functions are accessed.

                        The evaluator assesses the description provided (and other
                        information provided by the developer, such as the functional
                        specification) to ensure that no available interface can be used
                        to bypass the TSF. This means that every available interface
                        must be either unrelated to the SFRs that are claimed in the ST
                        (and does not interact with anything that is used to satisfy
                        SFRs) or else uses the security functionality that is described
                        in other development evidence in the manner described. For
                        example, a game would likely be unrelated to the SFRs, so there
                        must be an explanation of how it cannot affect security. Access
                        to user data, however, is likely to be related to access control
                        SFRs, so the explanation would describe how the security
                        functionality works when invoked through the data-access
                        interfaces.  Such a description is needed for every available
                        interface.

                        An example of a description follows. Suppose the TSF
                        provides file protection. Further suppose that although
                        the ``traditional'' system call TSFIs for open, read,
                        and write invoke the file protection mechanism described
                        in the TOE design, there exists a TSFI that allows
                        access to a batch job facility (creating batch jobs,
                        deleting jobs, modifying unprocessed jobs). The
                        evaluator should be able to determine from the
                        vendor-provided description that this TSFI invokes the
                        same protection mechanisms as do the ``traditional''
                        interfaces. This could be done, for example, by
                        referencing the appropriate subclauses of the TOE design
                        that discuss <italic>how</italic> the batch job facility
                        TSFI achieves its security objectives.

                        Using this same example, suppose there is a TSFI whose
                        sole purpose is to display the time of day. The
                        evaluator should determine that the description
                        adequately argues that this TSFI is not capable of
                        manipulating any protected resources and should not
                        invoke any security functionality.

                        Another example of bypass is when the TSF is supposed to
                        maintain confidentiality of a cryptographic key (one is
                        allowed to use it for cryptographic operations, but is
                        not allowed to read/write it). If an attacker has direct
                        physical access to the device, he might be able to
                        examine side-channels such as the power usage of the
                        device, the exact timing of the device, or even any
                        electromagnetic emanations of the device and, from this,
                        infer the key.

                        If such side-channels may be present, the demonstration
                        should address the mechanisms that prevent these
                        side-channels from occurring, such as random internal
                        clocks, dual-line technology etc. Verification of these
                        mechanisms would be verified by a combination of purely
                        design-based arguments and testing.

                        For a final example using security functionality rather
                        than a protected resource, consider an ST that contains
                        <xref id="fco_nro.2" show="link"/>, which requires that
                        the TSF provides evidence of origination for information
                        types specified in the ST. Suppose that the
                        ``information types'' included all information that is
                        sent by the TOE via e-mail. In this case the evaluator
                        should examine the description to ensure that all TSFI
                        that can be invoked to send e-mail perform the
                        ``evidence of origination generation'' function are
                        detailed. The description might point to user guidance
                        to show all places where e-mail can originate (e.g.,
                        e-mail program, notification from scripts/batch jobs)
                        and then how each of these places invokes the evidence
                        generation function.

                        The evaluator should also ensure that the description is comprehensive, in that each
                        interface is analysed with respect to the entire set of claimed SFRs. This may require the
                        evaluator to examine supporting information (functional specification, TOE design, other
                        parts of the security architecture description, operational user guidance, and perhaps even
                        the implementation representation, as provided for the TOE) to determine that the description
                        has correctly capture all aspects of an interface. The evaluator should consider what SFRs each
                        TSFI might affect (from the description of the TSFI and its implementation in the supporting
                        documentation), and then examine the description to determine whether it covers those aspects.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Functional specification" id="adv_fsp">
            <af-objectives>

                This family levies requirements upon the functional specification,
                which describes the TSF interfaces (TSFIs).
                The TSFI consists of all means by which external entities (or
                subjects in the TOE but outside of the TSF) supply data to the TSF,
                receive data from the TSF and invoke services from the TSF.
                It does <italic>not</italic> describe how the TSF processes those service
                requests, nor does it describe the communication when the TSF invokes services
                from its operational environment; this information is addressed by the
                <xref id="adv_tds" show="link"/> and <xref id="aco_rel" show="link"/>
                families, respectively.

                This family provides assurance directly by allowing the
                evaluator to understand how the TSF meets the claimed SFRs. It
                also provides assurance indirectly, as input to other assurance
                families and classes:
                <list type="itemized"><item><xref id="adv_arc" show="id"/>, where the description of
                    the TSFIs may be used to gain better understanding of how the
                    TSF is protected against corruption (i.e. subversion of
                    self-protection or domain separation) and/or bypass;
                </item><item><xref id="ate" show="id"/>, where the description of the
                    TSFIs is an important input for both developer and evaluator
                    testing;
                </item><item><xref id="ava" show="id"/>, where the description of the
                    TSFIs is used to search for vulnerabilities.
                </item></list>
            </af-objectives>
            <af-overview>

                The information presented in the functional specification
                describes the interfaces through which the TSF services are
                invoked. At the lower levels of assurance, there is an
                effort to reduce the amount of information that must be
                supplied by requiring only the most security-critical
                information.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the degree of
                detail required of the description of the TSFIs, and the degree
                of formalism required of the description of the TSFIs.
            </af-levelling-criteria>
            <af-application-notes>

                Once the TSFIs are determined (see <xref id="TSFI-determination" show="title"/> for guidance and
                examples of determining TSFI), they are described. At
                lower-level components, developers focus their documentation
                (and evaluators focus their analysis) on the more
                security-relevant aspects of the TOE. Three categories of
                TSFIs are defined, based upon the relevance the services
                available through them have to the SFRs being claimed: <list type="itemized">
                <item>If a service available through an interface can be
                    traced to one of the SFRs levied on the TSF, then that
                    interface is termed <italic>SFR-enforcing</italic>.
                    Note that it is possible that an interface may have
                    various services and results, some of which may be
                    SFR-enforcing and some of which may not.</item>
                <item>interfaces to (or services available through an
                    interface relating to) services that SFR-enforcing
                    functionality depends upon, but need only to function
                    correctly in order for the security policies of the TOE
                    to be preserved, are termed
                    <italic>SFR-supporting</italic>. </item>
                <item>Interfaces to services on which SFR-enforcing
                    functionality has no dependence are termed <italic>SFR
                        non-interfering</italic>.</item></list>

                It should be noted that in order for an interface to be
                SFR-supporting or SFR non-interfering it must have
                <italic>no</italic> SFR-enforcing services or results. In
                contrast, an SFR-enforcing interface may have SFR-supporting
                services (for example, the ability to set the system clock
                may be an SFR-enforcing service of an interface, but if that
                same interface is used to display the system date that
                service may be only SFR-supporting).  An example of a purely
                SFR-supporting interface is a system call interface that is
                used both by users and by a portion of the TSF that is
                running on behalf of users.

                As more information about the TSFIs becomes available, the
                greater the assurance that can be gained that the interfaces are
                correctly categorised/analysed. The requirements are structured
                such that, at the lowest level, the information required for SFR
                non-interfering interfaces is the minimum necessary in order for
                the evaluator to make this determination in an effective
                manner. At higher levels, more information becomes available so
                that the evaluator has greater confidence in the
                designation.

                The purpose in defining these labels (SFR-enforcing,
                SFR-supporting, and SFR-non-interfering) and for levying
                different requirements upon each (at the lower assurance
                components) is to provide a first approximation of where to
                focus the analysis and the evidence upon which that analysis
                is performed. If the developer's documentation of the TSF
                interfaces describes all of the interfaces to the degree
                specified in the requirements for the SFR-enforcing
                interfaces (that is, if the documentation exceeds the
                requirements), there is no need for the developer to create
                new evidence to match the requirements. Similarly, because
                the labels are merely a means of differentiating the
                interface types within the requirements, there is no need
                for the developer to update the evidence solely to label the
                interfaces as SFR-enforcing, SFR-supporting, and
                SFR-non-interfering. The primary purpose of this labelling
                is to allow developers with less mature development
                methodologies (and associated artifacts, such as detailed
                interface and design documentation) to provide only the
                necessary evidence without undue cost.

                The last C element of each component within this family provides
                a direct correspondence between the SFRs and the functional
                specification; that is, an indication of which interfaces are
                used to invoke each of the claimed SFRs. In the cases where the
                ST contains such functional requirements as <xref id="fdp_rip" show="link"/>, whose functionality may not manifest itself at
                the TSFIs, the functional specification and/or the tracing is
                expected to identify these SFRs; including them in the functional
                specification helps to ensure that they are not lost at lower
                levels of decomposition, where they will be relevant.
                <subclause title="Detail about the Interfaces" id="Interface-details">

                    The requirements define collections of details about TSFI
                    to be provided.  For the purposes of the requirements,
                    interfaces are specified (in varying degrees of detail) in
                    terms of their purpose, method of use, parameters,
                    parameter descriptions, and error messages.

                    The <italic>purpose</italic> of an interface is a
                    high-level description of the general goal of the
                    interface (e.g. process GUI commands, receive network
                    packets, provide printer output, etc.)

                    The interface's <italic>method of use</italic> describes
                    how the interface is supposed to be used. This description
                    should be built around the various interactions available
                    at that interface. For instance, if the interface were a Unix
                    command shell, <italic>ls</italic>, <italic>mv</italic>
                    and <italic>cp</italic> would be interactions for that
                    interface.  For each interaction the method of use
                    describes what the interaction does, both for behaviour
                    seen at the interface (e.g. the programmer calling the
                    API, the Windows users changing a setting in the registry,
                    etc.)  as well as behaviour at other interfaces
                    (e.g. generating an audit record).

                    <italic>Parameters</italic> are explicit inputs to and
                    outputs from an interface that control the behaviour of
                    that interface. For example, parameters are the arguments
                    supplied to an API; the various fields in a packet for a
                    given network protocol; the individual key values in the
                    Windows Registry; the signals across a set of pins on a
                    chip; the flags that can be set for the
                    <italic>ls</italic>, etc. The parameters are
                    ``identified'' with a simple list of what they are.

                    A <italic>parameter description</italic> tells what the
                    parameter is in some meaningful way. For instance, an
                    acceptable parameter description for interface
                    <italic>foo(i)</italic> would be ``parameter i is an
                    integer that indicates the number of users currently
                    logged in to the system''. A description such as
                    ``parameter i is an integer'' is not an acceptable.

                    The description of an interface's <italic>actions</italic>
                    describes what the interface does. This is more detailed
                    than the purpose in that, while the ``purpose'' reveals
                    why one might want to use it, the ``actions'' reveals
                    everything that it does. These actions might be related to
                    the SFRs or not. In cases where the interface's action is
                    not related to SFRs, its description is said to be
                    <italic>summarised</italic>, meaning the description
                    merely makes clear that it is indeed not SFR-related.

                    The <italic>error message description</italic> identifies
                    the condition that generated it, what the message is, and
                    the meaning of any error codes. An error message is
                    generated by the TSF to signify that a problem or
                    irregularity of some degree has been encountered. The
                    requirements in this family refer to different kinds of
                    error messages: <list type="itemized">
                    <item> a ``direct'' error message is a
                        security-relevant response through a specific TSFI
                        invocation.</item>
                    <item> an ``indirect'' error cannot be tied to a
                        specific TSFI invocation because it results from
                        system-wide conditions (e.g. resource exhaustion,
                        connectivity interruptions, etc.). Error messages that
                        are not security-relevant are also considered
                        ``indirect''.</item>
                    <item> ``remaining'' errors are any other errors, such as those
                        that might be referenced within the code. For example, the use of
                        condition-checking code that checks for conditions that would not
                        logically occur (e.g. a final ``else'' after a list of ``case''
                        statements), would provide for generating a catch-all error
                        message; in an operational TOE, these error messages should never
                        be seen.</item></list>

                    An example functional specification is provided in <xref id="example-functional-spec" show="link"/>.
                </subclause>
                <subclause title="Components of this Family" id="fsp-components">

                    Increasing assurance through increased completeness and
                    accuracy in the interface specification is reflected in
                    the documentation required from the developer as detailed
                    in the various hierarchical components of this
                    family.

                    At <xref id="adv_fsp.1" show="link"/>, the only
                    documentation required is a characterisation of all TSFIs
                    and a high level description of SFR-enforcing and
                    SFR-supporting TSFIs. To provide some assurance that the
                    ``important'' aspects of the TSF have been correctly
                    characterised at the TSFIs, the developer is required to
                    provide the purpose and method of use, parameters for the
                    SFR-enforcing and SFR-supporting TSFIs.

                    At <xref id="adv_fsp.2" show="link"/>, the developer is
                    required to provide the purpose, method of use,
                    parameters, and parameter descriptions for all
                    TSFIs. Additionally, for the SFR-enforcing TSFIs the
                    developer has to describe the SFR-enforcing actions and
                    direct error messages.

                    At <xref id="adv_fsp.3" show="link"/>, the developer must now,
                    in addition to the information required at <xref id="adv_fsp.2" show="id"/>, provide enough information about the SFR-supporting
                    and SFR-non-interfering actions to show that they are not
                    SFR-enforcing. Further, the developer must now document all of
                    the direct error messages resulting from the invocation of
                    SFR-enforcing TSFIs.

                    At <xref id="adv_fsp.4" show="link"/>, all TSFIs - whether
                    SFR-enforcing, SFR-supporting, SFR-non-interfering - must
                    be described to the same degree, including all of the
                    direct error messages.

                    At <xref id="adv_fsp.5" show="link"/>, the TSFIs descriptions
                    also include error messages that do not result from an
                    invocation of a TSFI.

                    At <xref id="adv_fsp.6" show="link"/>, in addition to the
                    information required by <xref id="adv_fsp.5" show="id"/>, all
                    remaining error messages are included. The developer must also
                    provide a formal description of the TSFI. This provides an
                    alternative view of the TSFI that may expose inconsistencies or
                    incomplete specification.
                </subclause>
            </af-application-notes>
            <a-component name="Basic functional specification" id="adv_fsp.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether the
                    developer has provided a high-level description of at least the
                    SFR-enforcing and SFR-supporting TSFIs, in terms of descriptions
                    of their parameters. There is no other required evidence that
                    can be expected to be available to measure the accuracy of these
                    descriptions; the evaluator merely ensures the descriptions seem
                    plausible.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_fsp.1.1d">
                    The developer shall provide a functional specification.
                </ae-developer>
                <ae-developer id="adv_fsp.1.2d">
                    The developer shall provide a tracing from the functional
                    specification to the SFRs.
                </ae-developer>
                <ae-content id="adv_fsp.1.1c">
                    The functional specification shall describe the purpose and
                    method of use for each SFR-enforcing and SFR-supporting
                    TSFI.
                </ae-content>
                <ae-content id="adv_fsp.1.2c">
                    The functional specification shall identify all parameters
                    associated with each SFR-enforcing and SFR-supporting TSFI.
                </ae-content>
                <ae-content id="adv_fsp.1.3c">
                    The functional specification shall provide rationale for the
                    implicit categorisation of interfaces as
                    SFR-non-interfering.
                </ae-content>
                <ae-content id="adv_fsp.1.4c">
                    The tracing shall demonstrate that the SFRs trace to TSFIs
                    in the functional specification.
                </ae-content>
                <ae-evaluator id="adv_fsp.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_fsp.1-1">
                        <ae-dc-element id="adv_fsp.1.1c"/>

                        The evaluator shall examine the functional specification
                        to determine that it states the purpose of each
                        SFR-supporting and SFR-enforcing TSFI.

                        The purpose of a TSFI is a general statement summarising
                        the functionality provided by the interface. It is not
                        intended to be a complete statement of the actions and
                        results related to the interface, but rather a statement
                        to help the reader understand in general what the
                        interface is intended to be used for. The evaluator
                        should not only determine that the purpose exists, but
                        also that it accurately reflects the TSFI by taking into
                        account other information about the interface, such as
                        the description of the parameters; this can be done in
                        association with other work units for this
                        component.

                        If an action available through an interface plays a role in
                        enforcing any security policy on the TOE (that is, if one of the
                        actions of the interface can be traced to one of the SFRs levied
                        on the TSF), then that interface is
                        <italic>SFR-enforcing</italic>. Such policies are not limited to
                        the access control policies, but also refer to any functionality
                        specified by one of the SFRs contained in the ST. Note that it
                        is possible that an interface may have various actions and
                        results, some of which may be SFR-enforcing and some of which
                        may not.

                        Interfaces to (or actions available through an interface
                        relating to) actions that SFR-enforcing functionality
                        depends on, but need only to function correctly in order
                        for the security policies of the TOE to be preserved,
                        are termed <italic>SFR supporting</italic>. Interfaces
                        to actions on which SFR-enforcing functionality has no
                        dependence are termed <italic>SFR
                        non-interfering</italic>.

                        It should be noted that in order for an interface to be
                        SFR supporting or SFR non-interfering it must have
                        <italic>no</italic> SFR-enforcing actions or results. In
                        contrast, an SFR-enforcing interface may have
                        SFR-supporting actions (for example, the ability to set
                        the system clock may be an SFR-enforcing action of an
                        interface, but if that same interface is used to display
                        the system date that action may only be SFR
                        supporting). An example of a purely SFR-supporting
                        interface is a system call interface that is used both
                        by untrusted users and by a portion of the TSF that is
                        running in user mode.

                        At this level, it is unlikely that a developer will have
                        expended effort to label interfaces as SFR-enforcing and
                        SFR-supporting.  In the case that this has been done,
                        the evaluator should verify to the extent that
                        supporting documentation (e.g., operational user
                        guidance) allows that this identification is correct.
                        Note that this identification activity is necessary for
                        several work units for this component.

                        In the more likely case that the developer has not
                        labelled the interfaces, the evaluator must perform
                        their own identification of the interfaces first, and
                        then determine whether the required information (for
                        this work unit, the purpose) is present.  Again, because
                        of the lack of supporting evidence this identification
                        will be difficult and have low assurance that all
                        appropriate interfaces have been correctly identified,
                        but nonetheless the evaluator examines other evidence
                        available for the TOE to ensure as complete coverage as
                        is possible.
                    </m-workunit>
                    <m-workunit id="adv_fsp.1-2">
                        <ae-dc-element id="adv_fsp.1.1c"/>

                        The evaluator shall examine the functional specification
                        to determine that the method of use for each
                        SFR-supporting and SFR-enforcing TSFI is given.

                        See work unit <xref id="adv_fsp.1-1" show="link"/> for a
                        discussion on the identification of SFR-supporting and
                        SFR-enforcing TSFI.

                        The method of use for a TSFI summarises how the
                        interface is manipulated in order to invoke the actions
                        and obtain the results associated with the TSFI. The
                        evaluator should be able to determine, from reading this
                        material in the functional specification, how to use
                        each interface. This does not necessarily mean that
                        there needs to be a separate method of use for each
                        TSFI, as it may be possible to describe in general how
                        kernel calls are invoked, for instance, and then
                        identify each interface using that general
                        style. Different types of interfaces will require
                        different method of use specifications. APIs, network
                        protocol interfaces, system configuration parameters,
                        and hardware bus interfaces all have very different
                        methods of use, and this should be taken into account by
                        the developer when developing the functional
                        specification, as well as by the evaluator evaluating
                        the functional specification.

                        For administrative interfaces whose functionality is documented
                        as being inaccessible to untrusted users, the evaluator ensures
                        that the method of making the functions inaccessible is
                        described in the functional specification. It should be noted
                        that this inaccessibility needs to be tested by the developer in
                        their test suite.
                    </m-workunit>
                    <m-workunit id="adv_fsp.1-3">
                        <ae-dc-element id="adv_fsp.1.2c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it identifies all parameters
                        associated with each SFR-enforcing and SFR-supporting
                        TSFI.

                        See work unit <xref id="adv_fsp.1-1" show="link"/> for a
                        discussion on the identification of SFR-supporting and
                        SFR-enforcing TSFI.

                        The evaluator examines the functional specification to
                        ensure that all of the parameters are described for
                        identified TSFI. Parameters are explicit inputs or
                        outputs to an interface that control the behaviour of
                        that interface. For examples, parameters are the
                        arguments supplied to an API; the various fields in
                        packet for a given network protocol; the individual key
                        values in the Windows Registry; the signals across a set
                        of pins on a chip; etc.

                        While difficult to obtain much assurance that all
                        parameters for the applicable TSFI have been identified,
                        the evaluator should also check other evidence provided
                        for the evaluation (e.g., operational user guidance) to
                        see if behaviour or additional parameters are described
                        there but not in the functional specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.1-4">
                        <ae-dc-element id="adv_fsp.1.3c"/>

                        The evaluator shall examine the rationale provided by
                        the developer for the implicit categorisation of
                        interfaces as SFR-non-interfering to determine that it
                        is accurate.

                        In the case where the developer has provided adequate
                        documentation to perform the analysis called for by the
                        rest of the work units for this component without
                        explicitly identifying SFR-enforcing and SFR-supporting
                        interfaces, this work unit should be considered
                        satisfied.

                        This work unit is intended to apply to cases where the developer
                        has not described a portion of the TSFI, claiming that it is
                        SFR-non-interfering and therefore not subject to other
                        requirements of this component.  In such a case, the developer
                        provides a rationale for this characterisation in sufficient
                        detail such that the evaluator understands the rationale, the
                        characteristics of the interfaces affected (e.g., their
                        high-level function with respect to the TOE, such as ``colour
                        palette manipulation''), and that the claim that these are
                        SFR-non-interfering is supported.  Given the level of assurance
                        the evaluator should not expect more detail than is provided for
                        the SFR-enforcing or SFR-supporting interfaces, and in fact the
                        detail should be much less.  In most cases, individual
                        interfaces should not need to be addressed in the
                        developer-provided rationale subclause.
                    </m-workunit>
                    <m-workunit id="adv_fsp.1-5">
                        <ae-dc-element id="adv_fsp.1.4c"/>
                        The evaluator shall check that the tracing links the
                        SFRs to the corresponding TSFIs.

                        The tracing is provided by the developer to serve as a
                        guide to which SFRs are related to which TSFIs.  This
                        tracing can be as simple as a table; it is used as input
                        to the evaluator for use in the following work units, in
                        which the evaluator verifies its completeness and
                        accuracy.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_fsp.1.2e">
                    The evaluator shall determine that the functional
                    specification is an accurate and complete instantiation of
                    the SFRs.
                    <m-workunit id="adv_fsp.1-6">

                        The evaluator shall examine the functional specification
                        to determine that it is a complete instantiation of the
                        SFRs.

                        To ensure that all SFRs are covered by the functional
                        specification, as well as the test coverage analysis, the
                        evaluator may build upon the developer's tracing (see <xref id="adv_fsp.1-5" show="id"/> a map between the TOE security
                        functional requirements and the TSFI). Note that this map may
                        have to be at a level of detail below the component or even
                        element level of the requirements, because of operations
                        (assignments, refinements, selections) performed on the
                        functional requirement by the ST author.

                        For example, the <xref id="fdp_acc.1" show="id"/>
                        component contains an element with assignments.  If the
                        ST contained, for instance, ten rules in the <xref id="fdp_acc.1" show="id"/> assignment, and these ten
                        rules were covered by three different TSFI, it would be
                        inadequate for the evaluator to map <xref id="fdp_acc.1" show="id"/> to TSFI A, B, and C and claim they had
                        completed the work unit. Instead, the evaluator would
                        map <xref id="fdp_acc.1" show="id"/> (rule 1) to TSFI A;
                        <xref id="fdp_acc.1" show="id"/> (rule 2) to TSFI B;
                        etc. It might also be the case that the interface is a
                        wrapper interface (e.g., IOCTL), in which case the
                        mapping would need to be specific to certain set of
                        parameters for a given interface.

                        The evaluator must recognise that for requirements that have
                        little or no manifestation at the TSF boundary (e.g., <xref id="fdp_rip" show="id"/>) it is not expected that they
                        completely map those requirements to the TSFI. The analysis for
                        those requirements will be performed in the analysis for the TOE
                        design (<xref id="adv_tds" show="id"/>) when included in the
                        ST. It is also important to note that since the parameters
                        associated with TSFIs must be fully specified, the evaluator
                        should be able to determine if all aspects of an SFR appear to
                        be implemented at the interface level.
                    </m-workunit>
                    <m-workunit id="adv_fsp.1-7">

                        The evaluator shall examine the functional specification
                        to determine that it is an accurate instantiation of the
                        SFRs.

                        For each functional requirement in the ST that results
                        in effects visible at the TSF boundary, the information
                        in the associated TSFI for that requirement specifies
                        the required functionality described by the
                        requirement. For example, if the ST contains a
                        requirement for access control lists, and the only TSFI
                        that map to that requirement specify functionality for
                        Unix-style protection bits, then the functional
                        specification is not accurate with respect to the
                        requirements.

                        The evaluator must recognise that for requirements that
                        have little or no manifestation at the TSF boundary
                        (e.g., <xref id="fdp_rip" show="id"/>) it is not
                        expected that the evaluator completely map those
                        requirements to the TSFI. The analysis for those
                        requirements will be performed in the analysis for the
                        TOE design (<xref id="adv_tds" show="id"/>) when
                        included in the ST.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Security-enforcing functional specification" id="adv_fsp.2">
                <aco-hierarchical acomponent="adv_fsp.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has provided a description of the TSFIs in
                    terms of their purpose, method of use, and parameters. In
                    addition, the SFR-enforcing actions, results and error
                    messages of each TSFI that is SFR-enforcing are also
                    described.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity that is
                    required by the work-units is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design.
                        </item>
                    </list>

                    The evaluation evidence for this sub-activity that is used
                    if included in the ST for the TOE is:
                    <list type="enumerated">
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_fsp.2.1d">
                    The developer shall provide a functional specification.
                </ae-developer>
                <ae-developer id="adv_fsp.2.2d">
                    The developer shall provide a tracing from the functional
                    specification to the SFRs.
                </ae-developer>
                <ae-content id="adv_fsp.2.1c">
                    The functional specification shall completely represent the
                    TSF.
                </ae-content>
                <ae-content id="adv_fsp.2.2c">
                    The functional specification shall describe the purpose and
                    method of use for all TSFI.
                </ae-content>
                <ae-content id="adv_fsp.2.3c">
                    The functional specification shall identify and describe all
                    parameters associated with each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.2.4c">
                    For each SFR-enforcing TSFI, the functional specification shall
                    describe the SFR-enforcing actions associated with the TSFI.
                </ae-content>
                <ae-content id="adv_fsp.2.5c">
                    For each SFR-enforcing TSFI, the functional specification shall
                    describe direct error messages resulting from processing
                    associated with the SFR-enforcing actions.
                </ae-content>
                <ae-content id="adv_fsp.2.6c">
                    The tracing shall demonstrate that the SFRs trace to TSFIs
                    in the functional specification.
                </ae-content>
                <ae-evaluator id="adv_fsp.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_fsp.2-1">
                        <ae-dc-element id="adv_fsp.2.1c"/>

                        The evaluator shall examine the functional specification
                        to determine that the TSF is fully represented.

                        The identification of the TSFI is a necessary
                        prerequisite to all other activities in this
                        sub-activity. The TSF must be identified (done as part
                        of the <xref id="adv_tds" show="link"/> work units) in
                        order to identify the TSFI. This activity can be done at
                        a high level to ensure that no large groups of
                        interfaces have been missed (network protocols, hardware
                        interfaces, configuration files), or at a low level as
                        the evaluation of the functional specification
                        proceeds.

                        In making an assessment for this work unit, the
                        evaluator determines that all portions of the TSF are
                        addressed in terms of the interfaces listed in the
                        functional specification. All portions of the TSF should
                        have a corresponding interface description, or if there
                        are no corresponding interfaces for a portion of the
                        TSF, the evaluator determines that that is
                        acceptable.
                    </m-workunit>
                    <m-workunit id="adv_fsp.2-2">
                        <ae-dc-element id="adv_fsp.2.2c"/>

                        The evaluator shall examine the functional specification
                        to determine that it states the purpose of each
                        TSFI.

                        The purpose of a TSFI is a general statement summarising
                        the functionality provided by the interface. It is not
                        intended to be a complete statement of the actions and
                        results related to the interface, but rather a statement
                        to help the reader understand in general what the
                        interface is intended to be used for. The evaluator
                        should not only determine that the purpose exists, but
                        also that it accurately reflects the TSFI by taking into
                        account other information about the interface, such as
                        the description of actions and error messages.
                    </m-workunit>
                    <m-workunit id="adv_fsp.2-3">
                        <ae-dc-element id="adv_fsp.2.2c"/>

                        The evaluator shall examine the functional specification
                        to determine that the method of use for each TSFI is
                        given.

                        The method of use for a TSFI summarises how the
                        interface is manipulated in order to invoke the actions
                        and obtain the results associated with the TSFI. The
                        evaluator should be able to determine, from reading this
                        material in the functional specification, how to use
                        each interface. This does not necessarily mean that
                        there needs to be a separate method of use for each
                        TSFI, as it may be possible to describe in general how
                        kernel calls are invoked, for instance, and then
                        identify each interface using that general
                        style. Different types of interfaces will require
                        different method of use specifications. APIs, network
                        protocol interfaces, system configuration parameters,
                        and hardware bus interfaces all have very different
                        methods of use, and this should be taken into account by
                        the developer when developing the functional
                        specification, as well as by the evaluator evaluating
                        the functional specification.

                        For administrative interfaces whose functionality is documented
                        as being inaccessible to untrusted users, the evaluator ensures
                        that the method of making the functions inaccessible is
                        described in the functional specification. It should be noted
                        that this inaccessibility needs to be tested by the developer in
                        their test suite.

                        The evaluator should not only determine that the set of
                        method of use descriptions exist, but also that they
                        accurately cover each TSFI.
                    </m-workunit>
                    <m-workunit id="adv_fsp.2-4">
                        <ae-dc-element id="adv_fsp.2.3c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely identifies all
                        parameters associated with every TSFI.

                        The evaluator examines the functional specification to
                        ensure that all of the parameters are described for each
                        TSFI. Parameters are explicit inputs or outputs to an
                        interface that control the behaviour of that
                        interface. For examples, parameters are the arguments
                        supplied to an API; the various fields in packet for a
                        given network protocol; the individual key values in the
                        Windows Registry; the signals across a set of pins on a
                        chip; etc.

                        In order to determine that all of the parameters are
                        present in the TSFI, the evaluator should examine the
                        rest of the interface description (actions, error
                        messages, etc.) to determine if the effects of the
                        parameter are accounted for in the description. The
                        evaluator should also check other evidence provided for
                        the evaluation (e.g., TOE design, security architecture
                        description, operational user guidance, implementation
                        representation) to see if behaviour or additional
                        parameters are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.2-5">
                        <ae-dc-element id="adv_fsp.2.3c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        all parameters associated with every TSFI.

                        Once all of the parameters have been identified, the
                        evaluator needs to ensure that they are accurately
                        described, and that the description of the parameters is
                        complete. A parameter description tells what the
                        parameter is in some meaningful way. For instance, the
                        interface <italic>foo(i)</italic> could be described as
                        having ``parameter i which is an integer"; this is not
                        an acceptable parameter description. A description such
                        as ``parameter i is an integer that indicates the number
                        of users currently logged in to the system'' is much
                        more acceptable.

                        In order to determine that the description of the
                        parameters is complete, the evaluator should examine the
                        rest of the interface description (purpose, method of
                        use, actions, error messages, etc.) to determine if the
                        descriptions of the parameter(s) are accounted for in
                        the description. The evaluator should also check other
                        evidence provided (e.g., TOE design, architectural
                        design, operational user guidance, implementation
                        representation) to see if behaviour or additional
                        parameters are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.2-6">
                        <ae-dc-element id="adv_fsp.2.4c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        the SFR-enforcing actions associated with the
                        SFR-enforcing TSFIs.

                        If an action available through an interface can be
                        traced to one of the SFRs levied on the TSF, then that
                        interface is <italic>SFR-enforcing</italic>. Such
                        policies are not limited to the access control policies,
                        but also refer to any functionality specified by one of
                        the SFRs contained in the ST. Note that it is possible
                        that an interface may have various actions and results,
                        some of which may be SFR-enforcing and some of which may not.

                        The developer is not required to ``label'' interfaces as
                        SFR-enforcing, and likewise is not required to identify
                        actions available through an interface as SFR-enforcing.
                        It is the evaluator's responsibility to examine the
                        evidence provided by the developer and determine that
                        the required information is present.  In the case where
                        the developer has identified the SFR-enforcing TSFI and
                        SFR-enforcing actions available through those TSFI, the
                        evaluator must judge completeness and accuracy based on
                        other information supplied for the evaluation (e.g., TOE
                        design, security architecture description, operational
                        user guidance), and on the other information presented
                        for the interfaces (parameters and parameter
                        descriptions, error messages, etc.).

                        In this case (where the developer has provided only the
                        SFR-enforcing information for SFR-enforcing TSFI) the
                        evaluator also ensures that no interfaces have been
                        mis-categorised.  This is done by examining other
                        information supplied for the evaluation (e.g., TOE
                        design, security architecture description, operational
                        user guidance), and the other information presented for
                        the interfaces (parameters and parameter descriptions,
                        for example) not labelled as SFR-enforcing.

                        In the case where the developer has provided the same
                        level of information on all interfaces, the evaluator
                        performs the same type of analysis mentioned in the
                        previous paragraphs.  The evaluator should determine
                        which interfaces are SFR-enforcing and which are not,
                        and subsequently ensure that the SFR-enforcing aspects
                        of the SFR-enforcing actions are appropriately
                        described.
                        The SFR-enforcing actions are those that are
                        visible at any external interface and that provide for
                        the enforcement of the SFRs being claimed. For example,
                        if audit requirements are included in the ST, then
                        audit-related actions would be SFR-enforcing and
                        therefore must be described, even if the result of that
                        action is generally not visible through the invoked
                        interface (as is often the case with audit, where a user
                        action at one interface would produce an audit record
                        visible at another interface).

                        The level of description that is required is that
                        sufficient for the reader to understand what role the
                        TSFI actions play with respect to the SFR.  The
                        evaluator should keep in mind that the description
                        should be detailed enough to support the generation (and
                        assessment) of test cases against that interface.  If
                        the description is unclear or lacking detail such that
                        meaningful testing cannot be conducted against the TSFI,
                        it is likely that the description is inadequate.
                    </m-workunit>
                    <m-workunit id="adv_fsp.2-7">
                        <ae-dc-element id="adv_fsp.2.5c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        error messages that may result from SFR-enforcing
                        actions associated with each SFR-enforcing TSFI.

                        This work unit should be performed in conjunction with,
                        or after, work unit <xref id="adv_fsp.2-6" show="link"/>
                        in order to ensure the set of SFR-enforcing TSFI and
                        SFR-enforcing actions is correctly identified.  The
                        developer may provide more information than is required
                        (for example, all error messages associated with each
                        interface), in which the case the evaluator should
                        restrict their assessment of completeness and accuracy
                        to only those that they determine to be associated with
                        SFR-enforcing actions of SFR-enforcing TSFI.

                        Errors can take many forms, depending on the interface
                        being described. For an API, the interface itself may
                        return an error code, set a global error condition, or
                        set a certain parameter with an error code. For a
                        configuration file, an incorrectly configured parameter
                        may cause an error message to be written to a log
                        file. For a hardware PCI card, an error condition may
                        raise a signal on the bus, or trigger an exception
                        condition to the CPU.

                        Errors (and the associated error messages) come about
                        through the invocation of an interface. The processing
                        that occurs in response to the interface invocation may
                        encounter error conditions, which trigger (through an
                        implementation-specific mechanism) an error message to
                        be generated. In some instances this may be a return
                        value from the interface itself; in other instances a
                        global value may be set and checked after the invocation
                        of an interface. It is likely that a TOE will have a
                        number of low-level error messages that may result from
                        fundamental resource conditions, such as ``disk full''
                        or ``resource locked''. While these error messages may
                        map to a large number of TSFI, they could be used to
                        detect instances where detail from an interface
                        description has been omitted. For instance, a TSFI that
                        produces a ``disk full'' message, but has no obvious
                        description of why that TSFI should cause an access to
                        the disk in its description of actions, might cause the
                        evaluator to examine other evidence (<xref id="adv_arc" show="link"/>, <xref id="adv_tds" show="link"/>) related
                        that TSFI to determine if the description is
                        accurate.
                        In order to determine that the description of the
                        error messages of a TSFI is accurate and complete, the
                        evaluator measures the interface description against the
                        other evidence provided for the evaluation (e.g., TOE
                        design, security architecture description, operational
                        user guidance), as well as other evidence available for
                        that TSFI (parameters, analysis from work unit <xref id="adv_fsp.2-6" show="id"/>).
                    </m-workunit>
                    <m-workunit id="adv_fsp.2-8">
                        <ae-dc-element id="adv_fsp.2.6c"/>
                        The evaluator shall check that the tracing links the
                        SFRs to the corresponding TSFIs.

                        The tracing is provided by the developer to serve as a
                        guide to which SFRs are related to which TSFIs.  This
                        tracing can be as simple as a table; it is used as input
                        to the evaluator for use in the following work units, in
                        which the evaluator verifies its completeness and
                        accuracy.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_fsp.2.2e">
                    The evaluator shall determine that the functional
                    specification is an accurate and complete instantiation of
                    the SFRs.
                    <m-workunit id="adv_fsp.2-9">

                        The evaluator shall examine the functional specification
                        to determine that it is a complete instantiation of the
                        SFRs.

                        To ensure that all SFRs are covered by the functional
                        specification, as well as the test coverage analysis,
                        the evaluator may build upon the developer's tracing
                        (see <xref id="adv_fsp.2-8" show="id"/> a map between
                        the TOE security functional requirements and the TSFI.
                        Note that this map may have to be at a level of detail
                        below the component or even element level of the
                        requirements, because of operations (assignments,
                        refinements, selections) performed on the functional
                        requirement by the ST author.

                        For example, the <xref id="fdp_acc.1" show="id"/>
                        component contains an element with assignments.  If the
                        ST contained, for instance, ten rules in the <xref id="fdp_acc.1" show="id"/> assignment, and these ten
                        rules were covered by three different TSFI, it would be
                        inadequate for the evaluator to map <xref id="fdp_acc.1" show="id"/> to TSFI A, B, and C and claim they had
                        completed the work unit. Instead, the evaluator would
                        map <xref id="fdp_acc.1" show="id"/> (rule 1) to TSFI A;
                        <xref id="fdp_acc.1" show="id"/> (rule 2) to TSFI B;
                        etc. It might also be the case that the interface is a
                        wrapper interface (e.g., IOCTL), in which case the
                        mapping would need to be specific to certain set of
                        parameters for a given interface.

                        The evaluator must recognise that for requirements that
                        have little or no manifestation at the TSF boundary
                        (e.g., <xref id="fdp_rip" show="id"/>) it is not
                        expected that they completely map those requirements to
                        the TSFI. The analysis for those requirements will be
                        performed in the analysis for the TOE design (<xref id="adv_tds" show="id"/>) when included in the ST. It is
                        also important to note that since the parameters,
                        actions, and error messages associated with TSFIs must
                        be fully specified, the evaluator should be able to
                        determine if all aspects of an SFR appear to be
                        implemented at the interface level.
                    </m-workunit>
                    <m-workunit id="adv_fsp.2-10">

                        The evaluator shall examine the functional specification
                        to determine that it is an accurate instantiation of the
                        SFRs.

                        For each functional requirement in the ST that results
                        in effects visible at the TSF boundary, the information
                        in the associated TSFI for that requirement specifies
                        the required functionality described by the
                        requirement. For example, if the ST contains a
                        requirement for access control lists, and the only TSFI
                        that map to that requirement specify functionality for
                        Unix-style protection bits, then the functional
                        specification is not accurate with respect to the
                        requirements.

                        The evaluator must recognise that for requirements that
                        have little or no manifestation at the TSF boundary
                        (e.g., <xref id="fdp_rip" show="id"/>) it is not
                        expected that the evaluator completely map those
                        requirements to the TSFI. The analysis for those
                        requirements will be performed in the analysis for the
                        TOE design (<xref id="adv_tds" show="id"/>) when
                        included in the ST.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Functional specification with complete summary" id="adv_fsp.3">
                <aco-hierarchical acomponent="adv_fsp.2"/>
                <aco-dependsoncomponent acomponent="adv_tds.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has provided a description of the TSFIs in
                    terms of their purpose, method of use, and parameters. In
                    addition, the actions, results and error messages of each
                    TSFI are also described sufficiently that it can be
                    determined whether they are SFR-enforcing, with the
                    SFR-enforcing TSFI being described in more detail than
                    other TSFIs.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity that is
                    required by the work-units is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design.
                        </item>
                    </list>

                    The evaluation evidence for this sub-activity that is used
                    if included in the ST for the TOE is:
                    <list type="enumerated">
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the implementation representation;
                        </item>
                        <item>
                            the TSF internals description;
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_fsp.3.1d">
                    The developer shall provide a functional specification.
                </ae-developer>
                <ae-developer id="adv_fsp.3.2d">
                    The developer shall provide a tracing from the functional
                    specification to the SFRs.
                </ae-developer>
                <ae-content id="adv_fsp.3.1c">
                    The functional specification shall completely represent the
                    TSF.
                </ae-content>
                <ae-content id="adv_fsp.3.2c">
                    The functional specification shall describe the purpose and
                    method of use for all TSFI.
                </ae-content>
                <ae-content id="adv_fsp.3.3c">
                    The functional specification shall identify and describe all
                    parameters associated with each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.3.4c">
                    For each SFR-enforcing TSFI, the functional specification shall
                    describe the SFR-enforcing actions associated with the TSFI.
                </ae-content>
                <ae-content id="adv_fsp.3.5c">
                    For each SFR-enforcing TSFI, the functional specification shall
                    describe direct error messages resulting from SFR-enforcing
                    actions and exceptions associated with invocation of the TSFI.
                </ae-content>
                <ae-content id="adv_fsp.3.6c">
                    The functional specification shall summarise the SFR-supporting
                    and SFR-non-interfering actions associated with each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.3.7c">
                    The tracing shall demonstrate that the SFRs trace to TSFIs
                    in the functional specification.
                </ae-content>
                <ae-evaluator id="adv_fsp.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_fsp.3-1">
                        <ae-dc-element id="adv_fsp.3.1c"/>

                        The evaluator shall examine the functional specification
                        to determine that the TSF is fully represented.

                        The identification of the TSFI is a necessary
                        prerequisite to all other activities in this
                        sub-activity. The TSF must be identified (done as part
                        of the <xref id="adv_tds" show="link"/> work units) in
                        order to identify the TSFI. This activity can be done at
                        a high level to ensure that no large groups of
                        interfaces have been missed (network protocols, hardware
                        interfaces, configuration files), or at a low level as
                        the evaluation of the functional specification
                        proceeds.

                        In making an assessment for this work unit, the
                        evaluator determines that all portions of the TSF are
                        addressed in terms of the interfaces listed in the
                        functional specification. All portions of the TSF should
                        have a corresponding interface description, or if there
                        are no corresponding interfaces for a portion of the
                        TSF, the evaluator determines that that is
                        acceptable.
                    </m-workunit>
                    <m-workunit id="adv_fsp.3-2">
                        <ae-dc-element id="adv_fsp.3.2c"/>

                        The evaluator shall examine the functional specification
                        to determine that it states the purpose of each
                        TSFI.

                        The purpose of a TSFI is a general statement summarising
                        the functionality provided by the interface. It is not
                        intended to be a complete statement of the actions and
                        results related to the interface, but rather a statement
                        to help the reader understand in general what the
                        interface is intended to be used for. The evaluator
                        should not only determine that the purpose exists, but
                        also that it accurately reflects the TSFI by taking into
                        account other information about the interface, such as
                        the description of actions and error messages.
                    </m-workunit>
                    <m-workunit id="adv_fsp.3-3">
                        <ae-dc-element id="adv_fsp.3.2c"/>

                        The evaluator shall examine the functional specification
                        to determine that the method of use for each TSFI is
                        given.

                        The method of use for a TSFI summarises how the
                        interface is manipulated in order to invoke the actions
                        and obtain the results associated with the TSFI. The
                        evaluator should be able to determine, from reading this
                        material in the functional specification, how to use
                        each interface. This does not necessarily mean that
                        there needs to be a separate method of use for each
                        TSFI, as it may be possible to describe in general how
                        kernel calls are invoked, for instance, and then
                        identify each interface using that general
                        style. Different types of interfaces will require
                        different method of use specifications. APIs, network
                        protocol interfaces, system configuration parameters,
                        and hardware bus interfaces all have very different
                        methods of use, and this should be taken into account by
                        the developer when developing the functional
                        specification, as well as by the evaluator evaluating
                        the functional specification.

                        For administrative interfaces whose functionality is documented
                        as being inaccessible to untrusted users, the evaluator ensures
                        that the method of making the functions inaccessible is
                        described in the functional specification. It should be noted
                        that this inaccessibility needs to be tested by the developer in
                        their test suite.

                        The evaluator should not only determine that the set of
                        method of use descriptions exist, but also that they
                        accurately cover each TSFI.
                    </m-workunit>
                    <m-workunit id="adv_fsp.3-4">
                        <ae-dc-element id="adv_fsp.3.3c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely identifies all
                        parameters associated with every TSFI.

                        The evaluator examines the functional specification to
                        ensure that all of the parameters are described for each
                        TSFI. Parameters are explicit inputs or outputs to an
                        interface that control the behaviour of that
                        interface. For examples, parameters are the arguments
                        supplied to an API; the various fields in packet for a
                        given network protocol; the individual key values in the
                        Windows Registry; the signals across a set of pins on a
                        chip; etc.

                        In order to determine that all of the parameters are
                        present in the TSFI, the evaluator should examine the
                        rest of the interface description (actions, error
                        messages, etc.) to determine if the effects of the
                        parameter are accounted for in the description. The
                        evaluator should also check other evidence provided for
                        the evaluation (e.g., TOE design, security architecture
                        description, operational user guidance, implementation
                        representation) to see if behaviour or additional
                        parameters are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.3-5">
                        <ae-dc-element id="adv_fsp.3.3c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        all parameters associated with every TSFI.

                        Once all of the parameters have been identified, the
                        evaluator needs to ensure that they are accurately
                        described, and that the description of the parameters is
                        complete. A parameter description tells what the
                        parameter is in some meaningful way. For instance, the
                        interface <italic>foo(i)</italic> could be described as
                        having ``parameter i which is an integer''; this is not
                        an acceptable parameter description. A description such
                        as ``parameter i is an integer that indicates the number
                        of users currently logged in to the system'' is much
                        more acceptable.

                        In order to determine that the description of the
                        parameters is complete, the evaluator should examine the
                        rest of the interface description (purpose, method of
                        use, actions, error messages, etc.) to determine if the
                        descriptions of the parameter(s) are accounted for in
                        the description. The evaluator should also check other
                        evidence provided (e.g., TOE design, architectural
                        design, operational user guidance, implementation
                        representation) to see if behaviour or additional
                        parameters are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.3-6">
                        <ae-dc-element id="adv_fsp.3.4c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        the SFR-enforcing actions associated with the
                        SFR-enforcing TSFIs.

                        If an action available through an interface plays a role
                        in enforcing any security policy on the TOE (that is, if
                        one of the actions of the interface can be traced to one
                        of the SFRs levied on the TSF), then that interface is
                        <italic>SFR-enforcing</italic>. Such policies are not
                        limited to the access control policies, but also refer
                        to any functionality specified by one of the SFRs
                        contained in the ST. Note that it is possible that an
                        interface may have various actions and results, some of
                        which may be SFR-enforcing and some of which may
                        not.
                        The developer is not required to ``label''
                        interfaces as SFR-enforcing, and likewise is not
                        required to identify actions available through an
                        interface as SFR-enforcing.  It is the evaluator's
                        responsibility to examine the evidence provided by the
                        developer and determine that the required information is
                        present.  In the case where the developer has identified
                        the SFR-enforcing TSFI and SFR-enforcing actions
                        available through those TSFI, the evaluator must judge
                        completeness and accuracy based on other information
                        supplied for the evaluation (e.g., TOE design, security
                        architecture description, operational user guidance),
                        and on the other information presented for the
                        interfaces (parameters and parameter descriptions, error
                        messages, etc.).

                        In this case (developer has provided only the
                        SFR-enforcing information for SFR-enforcing TSFI) the
                        evaluator also ensures that no interfaces have been
                        mis-categorised.  This is done by examining other
                        information supplied for the evaluation (e.g., TOE
                        design, security architecture description, operational
                        user guidance), and the other information presented for
                        the interfaces (parameters and parameter descriptions,
                        for example) not labelled as SFR-enforcing. The analysis
                        done for work units <xref id="adv_fsp.3-7" show="id"/>
                        and <xref id="adv_fsp.3-8" show="id"/> are also used in
                        making this determination.
                        In the case where the developer has provided the
                        same level of information on all interfaces, the
                        evaluator performs the same type of analysis mentioned
                        in the previous paragraphs.  The evaluator should
                        determine which interfaces are SFR-enforcing and which
                        are not, and subsequently ensure that the SFR-enforcing
                        aspects of the SFR-enforcing actions are appropriately
                        described.  Note that in this case, the evaluator should
                        be able to perform the bulk of the work associated with
                        work unit <xref id="adv_fsp.3-8" show="link"/> in the
                        course of performing this SFR-enforcing analysis.
                        The SFR-enforcing actions are those that are
                        visible at any external interface and that provide for
                        the enforcement of the SFRs being claimed. For example,
                        if audit requirements are included in the ST, then
                        audit-related actions would be SFR-enforcing and
                        therefore must be described, even if the result of that
                        action is generally not visible through the invoked
                        interface (as is often the case with audit, where a user
                        action at one interface would produce an audit record
                        visible at another interface).

                        The level of description that is required is that
                        sufficient for the reader to understand what role the
                        TSFI actions play with respect to the SFR.  The
                        evaluator should keep in mind that the description
                        should be detailed enough to support the generation (and
                        assessment) of test cases against that interface.  If
                        the description is unclear or lacking detail such that
                        meaningful testing cannot be conducted against the TSFI,
                        it is likely that the description is inadequate.
                    </m-workunit>
                    <m-workunit id="adv_fsp.3-7">
                        <ae-dc-element id="adv_fsp.3.5c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        error messages that may result from an invocation of
                        each SFR-enforcing TSFI.

                        This work unit should be performed in conjunction with, or
                        after, work unit <xref id="adv_fsp.3-6" show="link"/> in order
                        to ensure the set of SFR-enforcing TSFI is correctly identified.
                        The evaluator should note that the requirement and associated
                        work unit is that all direct error messages associated with an
                        SFR-enforcing TSFI must be described, that are associated with
                        SFR-enforcing actions.  This is because at this level of
                        assurance, the ``extra'' information provided by the error
                        message descriptions should be used in determining whether all
                        of the SFR-enforcing aspects of an interface have been
                        appropriately described.  For instance, if an error message
                        associated with a TSFI (e.g., ``access denied'') indicated that
                        an SFR-enforcing decision or action had taken place, but in the
                        description of the SFR-enforcing actions there was no mention of
                        that particular SFR-enforcing mechanism, then the description
                        may not be complete.

                        Errors can take many forms, depending on the interface
                        being described. For an API, the interface itself may
                        return an error code, set a global error condition, or
                        set a certain parameter with an error code. For a
                        configuration file, an incorrectly configured parameter
                        may cause an error message to be written to a log
                        file. For a hardware PCI card, an error condition may
                        raise a signal on the bus, or trigger an exception
                        condition to the CPU.

                        Errors (and the associated error messages) come about
                        through the invocation of an interface. The processing
                        that occurs in response to the interface invocation may
                        encounter error conditions, which trigger (through an
                        implementation-specific mechanism) an error message to
                        be generated. In some instances this may be a return
                        value from the interface itself; in other instances a
                        global value may be set and checked after the invocation
                        of an interface. It is likely that a TOE will have a
                        number of low-level error messages that may result from
                        fundamental resource conditions, such as ``disk full''
                        or ``resource locked''. While these error messages may
                        map to a large number of TSFI, they could be used to
                        detect instances where detail from an interface
                        description has been omitted. For instance, a TSFI that
                        produces a ``disk full'' message, but has no obvious
                        description of why that TSFI should cause an access to
                        the disk in its description of actions, might cause the
                        evaluator to examine other evidence (<xref id="adv_arc" show="link"/>, <xref id="adv_tds" show="link"/>) related
                        that TSFI to determine if the description is
                        accurate.

                        In order to determine that the description of the error messages
                        of a TSFI is accurate and complete, the evaluator measures the
                        interface description against the other evidence provided for
                        the evaluation (e.g., TOE design, security architecture
                        description, operational user guidance), as well as for other
                        evidence supplied for that TSFI (description of SFR-enforcing
                        actions, summary of SFR-supporting and SFR-non-interfering
                        actions and results).
                    </m-workunit>
                    <m-workunit id="adv_fsp.3-8">
                        <ae-dc-element id="adv_fsp.3.6c"/>

                        The evaluator shall examine the presentation of the TSFI to
                        determine that it summarises the SFR-supporting and
                        SFR-non-interfering actions associated with each TSFI.

                        The purpose of this work unit is to supplement the details about
                        the SFR-enforcing actions (provided in work unit <xref id="adv_fsp.3-6" show="link"/>) with a summary of the remaining
                        actions (i.e., those that are not SFR-enforcing). This covers
                        <italic>all</italic> SFR-supporting and SFR-non-interfering
                        actions, whether invokable through SFR-enforcing TSFI or through
                        SFR-supporting or SFR-non-interfering TSFI. Such a summary
                        about all SFR-supporting and SFR-non-interfering actions helps
                        to provide a more complete picture of the functions provided by
                        the TSF, and is to be used by the evaluator in determining
                        whether an action or TSFI may have been mis-categorised.

                        The information to be provided is more abstract than that
                        required for SFR-enforcing actions.  While it should still be
                        detailed enough so that the reader can understand what the
                        action does, the description does not have to be detailed enough
                        to support writing tests against it, for instance.  For the
                        evaluator, the key is that the information must be sufficient to
                        make a positive determination that the action is SFR-supporting
                        or SFR-non-interfering.  If that level of information is
                        missing, the summary is insufficient and more information must
                        be obtained.
                    </m-workunit>
                    <m-workunit id="adv_fsp.3-9">
                        <ae-dc-element id="adv_fsp.3.7c"/>
                        The evaluator shall check that the tracing links the
                        SFRs to the corresponding TSFIs.

                        The tracing is provided by the developer to serve as a
                        guide to which SFRs are related to which TSFIs.  This
                        tracing can be as simple as a table; it is used as input
                        to the evaluator for use in the following work units, in
                        which the evaluator verifies its completeness and
                        accuracy.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_fsp.3.2e">
                    The evaluator shall determine that the functional
                    specification is an accurate and complete instantiation of
                    the SFRs.
                    <m-workunit id="adv_fsp.3-10">

                        The evaluator shall examine the functional specification
                        to determine that it is a complete instantiation of the
                        SFRs.

                        To ensure that all SFRs are covered by the functional
                        specification, as well as the test coverage analysis,
                        the evaluator may build upon the developer's tracing
                        (see <xref id="adv_fsp.3-9" show="id"/> a map between
                        the TOE security functional requirements and the TSFI.
                        Note that this map may have to be at a level of detail
                        below the component or even element level of the
                        requirements, because of operations (assignments,
                        refinements, selections) performed on the functional
                        requirement by the ST author.

                        For example, the <xref id="fdp_acc.1" show="id"/>
                        component contains an element with assignments.  If the
                        ST contained, for instance, ten rules in the <xref id="fdp_acc.1" show="id"/> assignment, and these ten
                        rules were covered by three different TSFI, it would be
                        inadequate for the evaluator to map <xref id="fdp_acc.1" show="id"/> to TSFI A, B, and C and claim they had
                        completed the work unit. Instead, the evaluator would
                        map <xref id="fdp_acc.1" show="id"/> (rule 1) to TSFI A;
                        <xref id="fdp_acc.1" show="id"/> (rule 2) to TSFI B;
                        etc. It might also be the case that the interface is a
                        wrapper interface (e.g., IOCTL), in which case the
                        mapping would need to be specific to certain set of
                        parameters for a given interface.

                        The evaluator must recognise that for requirements that
                        have little or no manifestation at the TSF boundary
                        (e.g., <xref id="fdp_rip" show="id"/>) it is not
                        expected that they completely map those requirements to
                        the TSFI. The analysis for those requirements will be
                        performed in the analysis for the TOE design (<xref id="adv_tds" show="id"/>) when included in the ST. It is
                        also important to note that since the parameters,
                        actions, and error messages associated with TSFIs must
                        be fully specified, the evaluator should be able to
                        determine if all aspects of an SFR appear to be
                        implemented at the interface level.
                    </m-workunit>
                    <m-workunit id="adv_fsp.3-11">

                        The evaluator shall examine the functional specification
                        to determine that it is an accurate instantiation of the
                        SFRs.

                        For each functional requirement in the ST that results
                        in effects visible at the TSF boundary, the information
                        in the associated TSFI for that requirement specifies
                        the required functionality described by the
                        requirement. For example, if the ST contains a
                        requirement for access control lists, and the only TSFI
                        that map to that requirement specify functionality for
                        Unix-style protection bits, then the functional
                        specification is not accurate with respect to the
                        requirements.

                        The evaluator must recognise that for requirements that
                        have little or no manifestation at the TSF boundary
                        (e.g., <xref id="fdp_rip" show="id"/>) it is not
                        expected that the evaluator completely map those
                        requirements to the TSFI. The analysis for those
                        requirements will be performed in the analysis for the
                        TOE design (<xref id="adv_tds" show="id"/>) when
                        included in the ST.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Complete functional specification" id="adv_fsp.4">
                <aco-hierarchical acomponent="adv_fsp.3"/>
                <aco-dependsoncomponent acomponent="adv_tds.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has completely described all of the TSFI in
                    a manner such that the evaluator is able to determine
                    whether the TSFI are completely and accurately described,
                    and appears to implement the security functional
                    requirements of the ST.
                </msa-objectives>
                <msa-application-notes>

                    The functional specification describes the interfaces to
                    the TSF (the TSFI) in a structured manner. Because of the
                    dependency on <xref id="adv_tds.1" show="link"/>, the
                    evaluator is expected to have identified the TSF prior to
                    beginning work on this sub-activity. Without firm
                    knowledge of what comprises the TSF, it is not possible to
                    assess the completeness of the TSFI.

                    In performing the various work units included in this family,
                    the evaluator is asked to make assessments of accuracy and
                    completeness of several factors (the TSFI itself, as well as the
                    individual components (parameters, actions, error messages,
                    etc.) of the TSFI). In doing this analysis, the evaluator is
                    expected to use the documentation provided for the
                    evaluation. This includes the ST, the TOE design, and may
                    include other documentation such as the operational user
                    guidance, security architecture description, and implementation
                    representation. The documentation should be examined in an
                    iterative fashion. The evaluator may read, for example, in the
                    TOE design how a certain function is implemented, but see no way
                    to invoke that function from the interface. This might cause the
                    evaluator to question the completeness of a particular TSFI
                    description, or whether an interface has been left out of the
                    functional specification altogether. Describing analysis
                    activities of this sort in the ETR is a key method in providing
                    rationale that the work units have been performed
                    appropriately.

                    It should be recognised that there exist functional
                    requirements whose functionality is manifested wholly or
                    in part architecturally, rather than through a specific
                    mechanism. An example of this is the implementation of
                    mechanisms implementing the <xref id="fdp_rip" show="link"/> requirements. Such mechanisms typically are
                    implemented to ensure a behaviour isn't present, which is
                    difficult to test and typically is verified through
                    analysis. In the cases where such functional requirements
                    are included in the ST, it is expected that the evaluator
                    recognise that there may be SFRs of this type that have no
                    interfaces, and that this should not be considered a
                    deficiency in the functional specification.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity that is
                    required by the work-units is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design.
                        </item>
                    </list>

                    The evaluation evidence for this sub-activity that is used
                    if included in the ST for the TOE is:
                    <list type="enumerated">
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the implementation representation;
                        </item>
                        <item>
                            the TSF internals description;
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_fsp.4.1d">
                    The developer shall provide a functional specification.
                </ae-developer>
                <ae-developer id="adv_fsp.4.2d">
                    The developer shall provide a tracing from the functional
                    specification to the SFRs.
                </ae-developer>
                <ae-content id="adv_fsp.4.1c">
                    The functional specification shall completely represent the
                    TSF.
                </ae-content>
                <ae-content id="adv_fsp.4.2c">
                    The functional specification shall describe the purpose and
                    method of use for all TSFI.
                </ae-content>
                <ae-content id="adv_fsp.4.3c">
                    The functional specification shall identify and describe all
                    parameters associated with each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.4.4c">
                    The functional specification shall describe all actions
                    associated with each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.4.5c">
                    The functional specification shall describe all direct error
                    messages that may result from an invocation of each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.4.6c">
                    The tracing shall demonstrate that the SFRs trace to TSFIs
                    in the functional specification.
                </ae-content>
                <ae-evaluator id="adv_fsp.4.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_fsp.4-1">
                        <ae-dc-element id="adv_fsp.4.1c"/>

                        The evaluator shall examine the functional specification
                        to determine that the TSF is fully represented.

                        The identification of the TSFI is a necessary
                        prerequisite to all other activities in this
                        sub-activity. The TSF must be identified (done as part
                        of the <xref id="adv_tds" show="link"/> work units) in
                        order to identify the TSFI. This activity can be done at
                        a high level to ensure that no large groups of
                        interfaces have been missed (network protocols, hardware
                        interfaces, configuration files), or at a low level as
                        the evaluation of the functional specification
                        proceeds.

                        In making an assessment for this work unit, the
                        evaluator determines that all portions of the TSF are
                        addressed in terms of the interfaces listed in the
                        functional specification. All portions of the TSF should
                        have a corresponding interface description, or if there
                        are no corresponding interfaces for a portion of the
                        TSF, the evaluator determines that that is
                        acceptable.
                    </m-workunit>
                    <m-workunit id="adv_fsp.4-2">
                        <ae-dc-element id="adv_fsp.4.2c"/>

                        The evaluator shall examine the functional specification
                        to determine that it states the purpose of each
                        TSFI.

                        The purpose of a TSFI is a general statement summarising
                        the functionality provided by the interface. It is not
                        intended to be a complete statement of the actions and
                        results related to the interface, but rather a statement
                        to help the reader understand in general what the
                        interface is intended to be used for. The evaluator
                        should not only determine that the purpose exists, but
                        also that it accurately reflects the TSFI by taking into
                        account other information about the interface, such as
                        the description of actions and error messages.
                    </m-workunit>
                    <m-workunit id="adv_fsp.4-3">
                        <ae-dc-element id="adv_fsp.4.2c"/>

                        The evaluator shall examine the functional specification
                        to determine that the method of use for each TSFI is
                        given.

                        The method of use for a TSFI summarises how the
                        interface is manipulated in order to invoke the actions
                        and obtain the results associated with the TSFI. The
                        evaluator should be able to determine, from reading this
                        material in the functional specification, how to use
                        each interface. This does not necessarily mean that
                        there needs to be a separate method of use for each
                        TSFI, as it may be possible to describe in general how
                        kernel calls are invoked, for instance, and then
                        identify each interface using that general
                        style. Different types of interfaces will require
                        different method of use specifications. APIs, network
                        protocol interfaces, system configuration parameters,
                        and hardware bus interfaces all have very different
                        methods of use, and this should be taken into account by
                        the developer when developing the functional
                        specification, as well as by the evaluator evaluating
                        the functional specification.

                        For administrative interfaces whose functionality is documented
                        as being inaccessible to untrusted users, the evaluator ensures
                        that the method of making the functions inaccessible is
                        described in the functional specification. It should be noted
                        that this inaccessibility needs to be tested by the developer in
                        their test suite.

                        The evaluator should not only determine that the set of
                        method of use descriptions exist, but also that they
                        accurately cover each TSFI.
                    </m-workunit><m-workunit id="adv_fsp.4-4"><ae-dc-element id="adv_fsp.4.2c"/>
                    The evaluator shall examine the functional specification to
                    determine the completeness of the TSFI
                    The evaluator shall use the design documentation to identify the possible types of
                    interfaces. The evaluator shall search the design documentation and the guidance
                    documentation for potential TSFI not contained in the developer's documentation,
                    thus indicating that the set of TSFI defined by the developer is incomplete. The
                    evaluator shall examine the arguments presented by the developer that the TSFI is
                    complete and check down to the lowest level of design or with the
                    implementation representation that no additional TSFI exist.</m-workunit>
                    <m-workunit id="adv_fsp.4-5">
                        <ae-dc-element id="adv_fsp.4.3c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely identifies all
                        parameters associated with every TSFI.

                        The evaluator examines the functional specification to
                        ensure that all of the parameters are described for each
                        TSFI. Parameters are explicit inputs or outputs to an
                        interface that control the behaviour of that
                        interface. For examples, parameters are the arguments
                        supplied to an API; the various fields in packet for a
                        given network protocol; the individual key values in the
                        Windows Registry; the signals across a set of pins on a
                        chip; etc.

                        In order to determine that all of the parameters are
                        present in the TSFI, the evaluator should examine the
                        rest of the interface description (actions, error
                        messages, etc.) to determine if the effects of the
                        parameter are accounted for in the description. The
                        evaluator should also check other evidence provided for
                        the evaluation (e.g., TOE design, security architecture
                        description, operational user guidance, implementation
                        representation) to see if behaviour or additional
                        parameters are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.4-6">
                        <ae-dc-element id="adv_fsp.4.3c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        all parameters associated with every TSFI.

                        Once all of the parameters have been identified, the
                        evaluator needs to ensure that they are accurately
                        described, and that the description of the parameters is
                        complete. A parameter description tells what the
                        parameter is in some meaningful way. For instance, the
                        interface <italic>foo(i)</italic> could be described as
                        having ``parameter i which is an integer''; this is not
                        an acceptable parameter description. A description such
                        as ``parameter i is an integer that indicates the number
                        of users currently logged in to the system'' is much
                        more acceptable.

                        In order to determine that the description of the
                        parameters is complete, the evaluator should examine the
                        rest of the interface description (purpose, method of
                        use, actions, error messages, etc.) to determine if the
                        descriptions of the parameter(s) are accounted for in
                        the description. The evaluator should also check other
                        evidence provided (e.g., TOE design, architectural
                        design, operational user guidance, implementation
                        representation) to see if behaviour or additional
                        parameters are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.4-7">
                        <ae-dc-element id="adv_fsp.4.4c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        all actions associated with every TSFI.

                        The evaluator checks to ensure that all of the actions
                        are described. actions available through an interface
                        describe what the interface does (as opposed to the TOE
                        design, which describes how the actions are provided by
                        the TSF).

                        Actions of an interface describe functionality that can
                        be invoked through the interface, and can be categorised
                        as <italic>regular</italic> actions, and
                        <italic>SFR-related</italic> actions. Regular actions
                        are descriptions of what the interface does. The amount
                        of information provided for this description is
                        dependant on the complexity of the interface. The
                        SFR-related actions are those that are visible at any
                        external interface (for instance, audit activity caused
                        by the invocation of an interface (assuming audit
                        requirements are included in the ST) should be
                        described, even though the result of that action is
                        generally not visible through the invoked
                        interface). Depending on the parameters of an interface,
                        there may be many different actions able to be invoked
                        through the interface (for instance, an API might have
                        the first parameter be a ``subcommand'', and the
                        following parameters be specific to that subcommand. The
                        IOCTL API in some Unix systems is an example of such an
                        interface).

                        In order to determine that the description of the
                        actions of a TSFI is complete, the evaluator should
                        review the rest of the interface description (parameter
                        descriptions, error messages, etc.) to determine if the
                        actions described are accounted for. The evaluator
                        should also analyse other evidence provided for the
                        evaluation (e.g., TOE design, security architecture
                        description, operational user guidance, implementation
                        representation) to see if there is evidence of actions
                        that are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.4-8">
                        <ae-dc-element id="adv_fsp.4.5c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        all errors messages resulting from an invocation of each
                        TSFI.

                        Errors can take many forms, depending on the interface
                        being described. For an API, the interface itself may
                        return an error code; set a global error condition, or
                        set a certain parameter with an error code. For a
                        configuration file, an incorrectly configured parameter
                        may cause an error message to be written to a log
                        file. For a hardware PCI card, an error condition may
                        raise a signal on the bus, or trigger an exception
                        condition to the CPU.

                        Errors (and the associated error messages) come about
                        through the invocation of an interface. The processing
                        that occurs in response to the interface invocation may
                        encounter error conditions, which trigger (through an
                        implementation-specific mechanism) an error message to
                        be generated. In some instances this may be a return
                        value from the interface itself; in other instances a
                        global value may be set and checked after the invocation
                        of an interface. It is likely that a TOE will have a
                        number of low-level error messages that may result from
                        fundamental resource conditions, such as ``disk full''
                        or ``resource locked''. While these error messages may
                        map to a large number of TSFI, they could be used to
                        detect instances where detail from an interface
                        description has been omitted. For instance, a TSFI that
                        produces a ``disk full'' message, but has no obvious
                        description of why that TSFI should cause an access to
                        the disk in its description of actions, might cause the
                        evaluator to examine other evidence (<xref id="adv_arc" show="link"/>, <xref id="adv_tds" show="link"/>) related
                        that TSFI to determine if the description is complete
                        and accurate.

                        The evaluator determines that, for each TSFI, the exact
                        set of error messages that can be returned on invoking
                        that interface can be determined. The evaluator reviews
                        the evidence provided for the interface to determine if
                        the set of errors seems complete. They cross-check this
                        information with other evidence provided for the
                        evaluation (e.g., TOE design, security architecture
                        description, operational user guidance, implementation
                        representation) to ensure that there are no errors
                        steaming from processing mentioned that are not included
                        in the functional specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.4-9">
                        <ae-dc-element id="adv_fsp.4.5c"/>

                        The evaluator shall examine the presentation of the TSFI to determine
                        that it completely and accurately describes the meaning of all
                        error messages resulting from an invocation of each TSFI.

                        In order to determine accuracy, the evaluator must be
                        able to understand meaning of the error. For example, if
                        an interface returns a numeric code of 0, 1, or 2, the
                        evaluator would not be able to understand the error if
                        the functional specification only listed: ``possible
                        errors resulting from invocation of the
                        <italic>foo()</italic> interface are 0, 1, or
                        2''. Instead the evaluator checks to ensure that the
                        errors are described such as: ``possible errors
                        resulting from invocation of the <italic>foo()</italic>
                        interface are 0 (processing successful), 1 (file not
                        found), or 2 (incorrect filename
                        specification)''.

                        In order to determine that the description of the errors
                        due to invoking a TSFI is complete, the evaluator
                        examines the rest of the interface description
                        (parameter descriptions, actions, etc.) to determine if
                        potential error conditions that might be caused by using
                        such an interface are accounted for. The evaluator also
                        checks other evidence provided for the evaluation
                        (e.g. TOE design, security architecture description,
                        operational user guidance, implementation
                        representation) to see if error processing related to
                        the TSFI is described there but is not described in the
                        functional specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.4-10">
                        <ae-dc-element id="adv_fsp.4.6c"/>
                        The evaluator shall check that the tracing links the
                        SFRs to the corresponding TSFIs.

                        The tracing is provided by the developer to serve as a
                        guide to which SFRs are related to which TSFIs.  This
                        tracing can be as simple as a table; it is used as input
                        to the evaluator for use in the following work units, in
                        which the evaluator verifies its completeness and
                        accuracy.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_fsp.4.2e">
                    The evaluator shall determine that the functional
                    specification is an accurate and complete instantiation of
                    the SFRs.
                    <m-workunit id="adv_fsp.4-11">

                        The evaluator shall examine the functional specification
                        to determine that it is a complete instantiation of the
                        SFRs.

                        To ensure that all SFRs are covered by the functional
                        specification, as well as the test coverage analysis,
                        the evaluator may build upon the developer's tracing
                        (see <xref id="adv_fsp.4-10" show="link"/> a map between
                        the TOE security functional requirements and the TSFI.
                        Note that this map may have to be at a level of detail
                        below the component or even element level of the
                        requirements, because of operations (assignments,
                        refinements, selections) performed on the functional
                        requirement by the ST author.

                        For example, the <xref id="fdp_acc.1" show="id"/>
                        component contains an element with assignments.  If the
                        ST contained, for instance, ten rules in the <xref id="fdp_acc.1" show="id"/> assignment, and these ten
                        rules were covered by three different TSFI, it would be
                        inadequate for the evaluator to map <xref id="fdp_acc.1" show="id"/> to TSFI A, B, and C and claim they had
                        completed the work unit. Instead, the evaluator would
                        map <xref id="fdp_acc.1" show="id"/> (rule 1) to TSFI A;
                        <xref id="fdp_acc.1" show="id"/> (rule 2) to TSFI B;
                        etc. It might also be the case that the interface is a
                        wrapper interface (e.g., IOCTL), in which case the
                        mapping would need to be specific to certain set of
                        parameters for a given interface.

                        The evaluator must recognise that for requirements that
                        have little or no manifestation at the TSF boundary
                        (e.g., <xref id="fdp_rip" show="id"/>) it is not
                        expected that they completely map those requirements to
                        the TSFI. The analysis for those requirements will be
                        performed in the analysis for the TOE design (<xref id="adv_tds" show="id"/>) when included in the ST. It is
                        also important to note that since the parameters,
                        actions, and error messages associated with TSFIs must
                        be fully specified, the evaluator should be able to
                        determine if all aspects of an SFR appear to be
                        implemented at the interface level.
                    </m-workunit>
                    <m-workunit id="adv_fsp.4-12">

                        The evaluator shall examine the functional specification
                        to determine that it is an accurate instantiation of the
                        SFRs.

                        For each functional requirement in the ST that results
                        in effects visible at the TSF boundary, the information
                        in the associated TSFI for that requirement specifies
                        the required functionality described by the
                        requirement. For example, if the ST contains a
                        requirement for access control lists, and the only TSFI
                        that map to that requirement specify functionality for
                        Unix-style protection bits, then the functional
                        specification is not accurate with respect to the
                        requirements.

                        The evaluator must recognise that for requirements that
                        have little or no manifestation at the TSF boundary
                        (e.g., <xref id="fdp_rip" show="id"/>) it is not
                        expected that the evaluator completely map those
                        requirements to the TSFI. The analysis for those
                        requirements will be performed in the analysis for the
                        TOE design (<xref id="adv_tds" show="id"/>) when
                        included in the ST.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Complete semi-formal functional specification                 with additional error information" id="adv_fsp.5">
                <aco-hierarchical acomponent="adv_fsp.4"/>
                <aco-dependsoncomponent acomponent="adv_tds.1"/>
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has completely described all of the TSFI in
                    a manner such that the evaluator is able to determine
                    whether the TSFI are completely and accurately described,
                    and appears to implement the security functional
                    requirements of the ST. The completeness of the interfaces
                    is judged based upon the implementation
                    representation.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity that is
                    required by the work-units is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design;
                        </item>
                        <item>
                            the implementation representation.
                        </item>
                    </list>

                    The evaluation evidence for this sub-activity that is used
                    if included in the ST for the TOE is:
                    <list type="enumerated">
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the TSF internals description;
                        </item>
                        <item>
                            the formal security policy model;
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_fsp.5.1d">
                    The developer shall provide a functional specification.
                </ae-developer>
                <ae-developer id="adv_fsp.5.2d">
                    The developer shall provide a tracing from the functional
                    specification to the SFRs.
                </ae-developer>
                <ae-content id="adv_fsp.5.1c">
                    The functional specification shall completely represent the
                    TSF.
                </ae-content>
                <ae-content id="adv_fsp.5.2c">
                    The functional specification shall describe the TSFI using a
                    semi-formal style.
                </ae-content>
                <ae-content id="adv_fsp.5.3c">
                    The functional specification shall describe the purpose and
                    method of use for all TSFI.
                </ae-content>
                <ae-content id="adv_fsp.5.4c">
                    The functional specification shall identify and describe all
                    parameters associated with each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.5.5c">
                    The functional specification shall describe all actions
                    associated with each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.5.6c">
                    The functional specification shall describe all direct error
                    messages that may result from an invocation of each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.5.7c"> The functional specification
                    shall describe all error messages that do not result from an
                    invocation of a TSFI.
                </ae-content>
                <ae-content id="adv_fsp.5.8c">
                    The functional specification shall provide a rationale for
                    each error message contained in the TSF implementation yet
                    does not result from an invocation of a TSFI.
                </ae-content>
                <ae-content id="adv_fsp.5.9c">
                    The tracing shall demonstrate that the SFRs trace to TSFIs
                    in the functional specification.
                </ae-content>
                <ae-evaluator id="adv_fsp.5.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.  <m-workunit id="adv_fsp.5-1"> <ae-dc-element id="adv_fsp.5.1c"/>

                    The evaluator shall examine the functional specification
                    to determine that the TSF is fully represented.

                    The identification of the TSFI is a necessary
                    prerequisite to all other activities in this
                    sub-activity. The TSF must be identified (done as part
                    of the <xref id="adv_tds" show="link"/> work units) in
                    order to identify the TSFI. This activity can be done at
                    a high level to ensure that no large groups of
                    interfaces have been missed (network protocols, hardware
                    interfaces, configuration files), or at a low level as
                    the evaluation of the functional specification
                    proceeds.

                    In making an assessment for this work unit, the
                    evaluator determines that all portions of the TSF are
                    addressed in terms of the interfaces listed in the
                    functional specification. All portions of the TSF should
                    have a corresponding interface description, or if there
                    are no corresponding interfaces for a portion of the
                    TSF, the evaluator determines that that is
                    acceptable.
                </m-workunit>
                    <m-workunit id="adv_fsp.5-2">
                        <ae-dc-element id="adv_fsp.5.2c"/>

                        The evaluator shall examine the functional specification
                        to determine that it is presented using a semiformal
                        style.

                        A semi-formal presentation is characterised by a
                        standardised format with a well-defined syntax that
                        reduces ambiguity that may occur in informal
                        presentations. Since the intent of the semi-formal
                        format is to enhance the reader's ability to understand
                        the presentation, use of certain structured presentation
                        methods (pseudo-code, flow charts, block diagrams) are
                        appropriate, though not required.

                        For the purposes of this activity, the evaluator should
                        ensure that the interface descriptions are formatted in
                        a structured, consistent manner and use common
                        terminology. A semiformal presentation of the interfaces
                        also implies that the level of detail of the
                        presentation for the interfaces is largely consistent
                        across all TSFI. For the functional specification, it is
                        acceptable to refer to external specifications for
                        portions of the interface as long as those external
                        specifications are themselves semiformal.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-3">
                        <ae-dc-element id="adv_fsp.5.3c"/>

                        The evaluator shall examine the functional specification
                        to determine that it states the purpose of each
                        TSFI.

                        The purpose of a TSFI is a general statement summarising
                        the functionality provided by the interface. It is not
                        intended to be a complete statement of the actions and
                        results related to the interface, but rather a statement
                        to help the reader understand in general what the
                        interface is intended to be used for. The evaluator
                        should not only determine that the purpose exists, but
                        also that it accurately reflects the TSFI by taking into
                        account other information about the interface, such as
                        the description of actions and error messages.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-4">
                        <ae-dc-element id="adv_fsp.5.3c"/>

                        The evaluator shall examine the functional specification
                        to determine that the method of use for each TSFI is
                        given.

                        The method of use for a TSFI summarises how the
                        interface is manipulated in order to invoke the actions
                        and obtain the results associated with the TSFI. The
                        evaluator should be able to determine, from reading this
                        material in the functional specification, how to use
                        each interface. This does not necessarily mean that
                        there needs to be a separate method of use for each
                        TSFI, as it may be possible to describe in general how
                        kernel calls are invoked, for instance, and then
                        identify each interface using that general
                        style. Different types of interfaces will require
                        different method of use specifications. APIs, network
                        protocol interfaces, system configuration parameters,
                        and hardware bus interfaces all have very different
                        methods of use, and this should be taken into account by
                        the developer when developing the functional
                        specification, as well as by the evaluator evaluating
                        the functional specification.

                        For administrative interfaces whose functionality is documented
                        as being inaccessible to untrusted users, the evaluator ensures
                        that the method of making the functions inaccessible is
                        described in the functional specification. It should be noted
                        that this inaccessibility needs to be tested by the developer in
                        their test suite.

                        The evaluator should not only determine that the set of
                        method of use descriptions exist, but also that they
                        accurately cover each TSFI.
                    </m-workunit><m-workunit id="adv_fsp.5-5"><ae-dc-element id="adv_fsp.5.3c"/>
                    The evaluator shall examine the functional specification to
                    determine the completeness of the TSFI
                    The evaluator shall use the design documentation to identify the possible types of
                    interfaces. The evaluator shall search the design documentation and the guidance
                    documentation for potential TSFI not contained in the developer's documentation,
                    thus indicating that the set of TSFI defined by the developer is incomplete. The
                    evaluator shall examine the arguments presented by the developer that the TSFI is
                    complete and check down to the lowest level of design or with the
                    implementation representation that no additional TSFI exist.</m-workunit>
                    <m-workunit id="adv_fsp.5-6">
                        <ae-dc-element id="adv_fsp.5.4c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely identifies all
                        parameters associated with every TSFI.

                        The evaluator examines the functional specification to
                        ensure that all of the parameters are described for each
                        TSFI. Parameters are explicit inputs or outputs to an
                        interface that control the behaviour of that
                        interface. For examples, parameters are the arguments
                        supplied to an API; the various fields in packet for a
                        given network protocol; the individual key values in the
                        Windows Registry; the signals across a set of pins on a
                        chip; etc.

                        In order to determine that all of the parameters are
                        present in the TSFI, the evaluator should examine the
                        rest of the interface description (actions, error
                        messages, etc.) to determine if the effects of the
                        parameter are accounted for in the description. The
                        evaluator should also check other evidence provided for
                        the evaluation (e.g., TOE design, security architecture
                        description, operational user guidance, implementation
                        representation) to see if behaviour or additional
                        parameters are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-7">
                        <ae-dc-element id="adv_fsp.5.4c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        all parameters associated with every TSFI.

                        Once all of the parameters have been identified, the
                        evaluator needs to ensure that they are accurately
                        described, and that the description of the parameters is
                        complete. A parameter description tells what the
                        parameter is in some meaningful way. For instance, the
                        interface <italic>foo(i)</italic> could be described as
                        having ``parameter i which is an integer''; this is not
                        an acceptable parameter description. A description such
                        as ``parameter i is an integer that indicates the number
                        of users currently logged in to the system''. is much
                        more acceptable.

                        In order to determine that the description of the
                        parameters is complete, the evaluator should examine the
                        rest of the interface description (purpose, method of
                        use, actions, error messages, etc.) to determine if the
                        descriptions of the parameter(s) are accounted for in
                        the description. The evaluator should also check other
                        evidence provided (e.g., TOE design, architectural
                        design, operational user guidance, implementation
                        representation) to see if behaviour or additional
                        parameters are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-8">
                        <ae-dc-element id="adv_fsp.5.5c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        all actions associated with every TSFI.

                        The evaluator checks to ensure that all of the actions
                        are described. actions available through an interface
                        describe what the interface does (as opposed to the TOE
                        design, which describes how the actions are provided by
                        the TSF).

                        actions of an interface describe functionality that can
                        be invoked through the interface, and can be categorised
                        as <italic>regular</italic> actions, and
                        <italic>SFR-related</italic> actions. Regular actions
                        are descriptions of what the interface does. The amount
                        of information provided for this description is
                        dependant on the complexity of the interface. The
                        SFR-related actions are those that are visible at any
                        external interface (for instance, audit activity caused
                        by the invocation of an interface (assuming audit
                        requirements are included in the ST) should be
                        described, even though the result of that action is
                        generally not visible through the invoked
                        interface). Depending on the parameters of an interface,
                        there may be many different actions able to be invoked
                        through the interface (for instance, an API might have
                        the first parameter be a ``subcommand'', and the
                        following parameters be specific to that subcommand. The
                        IOCTL API in some Unix systems is an example of such an
                        interface).
                        In order to determine that the description of the
                        actions of a TSFI is complete, the evaluator should
                        review the rest of the interface description (parameter
                        descriptions, error messages, etc.)  to determine if the
                        actions described are accounted for. The evaluator
                        should also analyse other evidence provided for the
                        evaluation (e.g., TOE design, security architecture
                        description, operational user guidance, implementation
                        representation) to see if there is evidence of actions
                        that are described there but not in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-9">
                        <ae-dc-element id="adv_fsp.5.6c"/>

                        The evaluator shall examine the presentation of the TSFI
                        to determine that it completely and accurately describes
                        all errors messages resulting from an invocation of each
                        TSFI.

                        Errors can take many forms, depending on the interface
                        being described. For an API, the interface itself may
                        return an error code; set a global error condition, or
                        set a certain parameter with an error code. For a
                        configuration file, an incorrectly configured parameter
                        may cause an error message to be written to a log
                        file. For a hardware PCI card, an error condition may
                        raise a signal on the bus, or trigger an exception
                        condition to the CPU.

                        Errors (and the associated error messages) come about
                        through the invocation of an interface. The processing
                        that occurs in response to the interface invocation may
                        encounter error conditions, which trigger (through an
                        implementation-specific mechanism) an error message to
                        be generated. In some instances this may be a return
                        value from the interface itself; in other instances a
                        global value may be set and checked after the invocation
                        of an interface. It is likely that a TOE will have a
                        number of low-level error messages that may result from
                        fundamental resource conditions, such as ``disk full''
                        or ``resource locked''. While these error messages may
                        map to a large number of TSFI, they could be used to
                        detect instances where detail from an interface
                        description has been omitted. For instance, a TSFI that
                        produces a ``disk full'' message, but has no obvious
                        description of why that TSFI should cause an access to
                        the disk in its description of actions, might cause the
                        evaluator to examine other evidence (<xref id="adv_arc" show="id"/>, <xref id="adv_tds" show="id"/>) related
                        that TSFI to determine if the description is complete
                        and accurate.

                        The evaluator determines that, for each TSFI, the exact
                        set of error messages that can be returned on invoking
                        that interface can be determined. The evaluator reviews
                        the evidence provided for the interface to determine if
                        the set of errors seems complete. They cross-check this
                        information with other evidence provided for the
                        evaluation (e.g., TOE design, security architecture
                        description, operational user guidance, implementation
                        representation) to ensure that there are no errors
                        steaming from processing mentioned that are not included
                        in the functional specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-10">
                        <ae-dc-element id="adv_fsp.5.6c"/>

                        The evaluator shall examine the presentation of the TSFI to determine
                        that it completely and accurately describes the meaning of all
                        error messages resulting from an invocation of each TSFI.

                        In order to determine accuracy, the evaluator must be
                        able to understand meaning of the error. For example, if
                        an interface returns a numeric code of 0, 1, or 2, the
                        evaluator would not be able to understand the error if
                        the functional specification only listed: ``possible
                        errors resulting from invocation of the
                        <italic>foo()</italic> interface are 0, 1, or
                        2''. Instead the evaluator checks to ensure that the
                        errors are described such as: ``possible errors
                        resulting from invocation of the <italic>foo()</italic>
                        interface are 0 (processing successful), 1 (file not
                        found), or 2 (incorrect filename
                        specification)''.

                        In order to determine that the description of the errors
                        due to invoking a TSFI is complete, the evaluator
                        examines the rest of the interface description
                        (parameter descriptions, actions, etc.) to determine if
                        potential error conditions that might be caused by using
                        such an interface are accounted for. The evaluator also
                        checks other evidence provided for the evaluation (e.g.,
                        TOE design, security architecture description,
                        operational user guidance, implementation
                        representation) to see if error processing related to
                        the TSFI is described there but is not described in the
                        functional specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-11">
                        <ae-dc-element id="adv_fsp.5.7c"/>

                        The evaluator shall examine the functional specification
                        to determine that it completely and accurately describes
                        all errors messages that do not result from an
                        invocation of any TSFI.

                        This work unit complements work unit <xref id="adv_fsp.5-9" show="link"/>, which describes those
                        error messages that result from an invocation of the
                        TSFI. Taken together, these work units cover all error
                        messages that might be generated by the TSF.

                        The evaluator assesses the completeness and accuracy of
                        the functional specification by comparing its contents
                        to instances of error message generation within the
                        implementation representation. Most of these error
                        messages will have already been covered by work unit
                        <xref id="adv_fsp.5-9" show="link"/>.

                        The error messages related to this work unit are
                        typically those that are not expected to be generated,
                        but are constructed as a matter of good programming
                        practises. For example, a case statement that defines
                        actions resulting from each of a list of cases may end
                        with a final <italic>else</italic> statement to apply
                        to anything that might not be expected; this practise
                        ensures the TSF does not get into an undefined state.
                        However, it is not expected that the path of execution
                        would ever get to this <italic>else</italic>
                        statement; therefore, any error message generation
                        within this <italic>else</italic> statement would
                        never be generated.  Although it would not get
                        generated, it must still be included in the functional
                        specification.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-12">
                        <ae-dc-element id="adv_fsp.5.8c"/>

                        The evaluator shall examine the functional specification
                        to determine that it provides a rationale for each error
                        message contained in the TSF implementation yet does not
                        result from an invocation of a TSFI.

                        The evaluator ensures that every error message found
                        under work unit <xref id="adv_fsp.5-11" show="link"/>
                        contains a rationale describing why it cannot be invoked
                        from the TSFI.

                        As was described in the previous work unit, this
                        rationale might be as straightforward as the fact that
                        the error message in question is provided for
                        completeness of execution logic and that it is never
                        expected to be generated. The evaluator ensures that the
                        rationale for each such error message is logical.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-13">
                        <ae-dc-element id="adv_fsp.5.9c"/>
                        The evaluator shall check that the tracing links the
                        SFRs to the corresponding TSFIs.

                        The tracing is provided by the developer to serve as a
                        guide to which SFRs are related to which TSFIs.  This
                        tracing can be as simple as a table; it is used as input
                        to the evaluator for use in the following work units, in
                        which the evaluator verifies its completeness and
                        accuracy.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_fsp.5.2e">
                    The evaluator shall determine that the functional
                    specification is an accurate and complete instantiation of
                    the SFRs.
                    <m-workunit id="adv_fsp.5-14">

                        The evaluator shall examine the functional specification
                        to determine that it is a complete instantiation of the
                        SFRs.

                        To ensure that all SFRs are covered by the functional
                        specification, as well as the test coverage analysis,
                        the evaluator may build upon the developer's tracing
                        (see <xref id="adv_fsp.5-13" show="link"/> a map between
                        the TOE security functional requirements and the TSFI.
                        Note that this map may have to be at a level of detail
                        below the component or even element level of the
                        requirements, because of operations (assignments,
                        refinements, selections) performed on the functional
                        requirement by the ST author.

                        For example, the <xref id="fdp_acc.1" show="id"/>
                        component contains an element with assignments.  If the
                        ST contained, for instance, ten rules in the <xref id="fdp_acc.1" show="id"/> assignment, and these ten
                        rules were covered by three different TSFI, it would be
                        inadequate for the evaluator to map <xref id="fdp_acc.1" show="id"/> to TSFI A, B, and C and claim they had
                        completed the work unit. Instead, the evaluator would
                        map <xref id="fdp_acc.1" show="id"/> (rule 1) to TSFI A;
                        <xref id="fdp_acc.1" show="id"/> (rule 2) to TSFI B;
                        etc. It might also be the case that the interface is a
                        wrapper interface (e.g., IOCTL), in which case the
                        mapping would need to be specific to certain set of
                        parameters for a given interface.

                        The evaluator must recognise that for requirements that
                        have little or no manifestation at the TSF boundary
                        (e.g., <xref id="fdp_rip" show="id"/>) it is not
                        expected that they completely map those requirements to
                        the TSFI. The analysis for those requirements will be
                        performed in the analysis for the TOE design (<xref id="adv_tds" show="id"/>) when included in the ST. It is
                        also important to note that since the parameters,
                        actions, and error messages associated with TSFIs must
                        be fully specified, the evaluator should be able to
                        determine if all aspects of an SFR appear to be
                        implemented at the interface level.
                    </m-workunit>
                    <m-workunit id="adv_fsp.5-15">

                        The evaluator shall examine the functional specification
                        to determine that it is an accurate instantiation of the
                        SFRs.

                        For each functional requirement in the ST that results
                        in effects visible at the TSF boundary, the information
                        in the associated TSFI for that requirement specifies
                        the required functionality described by the
                        requirement. For example, if the ST contains a
                        requirement for access control lists, and the only TSFI
                        that map to that requirement specify functionality for
                        Unix-style protection bits, then the functional
                        specification is not accurate with respect to the
                        requirements.

                        The evaluator must recognise that for requirements that
                        have little or no manifestation at the TSF boundary
                        (e.g., <xref id="fdp_rip" show="id"/>) it is not
                        expected that the evaluator completely map those
                        requirements to the TSFI. The analysis for those
                        requirements will be performed in the analysis for the
                        TOE design (<xref id="adv_tds" show="id"/>) when
                        included in the ST.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Complete semi-formal functional specification                 with additional formal specification" id="adv_fsp.6">
                <aco-hierarchical acomponent="adv_fsp.5"/>
                <aco-dependsoncomponent acomponent="adv_tds.1"/><aco-dependsoncomponent acomponent="adv_imp.1"/>
                <msa-objectives>

                    (Need Objectives text for FSP.6 methodology)
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity that is
                    required by the work-units is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design.
                        </item>
                    </list>

                    The evaluation evidence for this sub-activity that is used
                    if included in the ST for the TOE is:
                    <list type="enumerated">
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the implementation representation;
                        </item>
                        <item>
                            the TSF internals description;
                        </item>
                        <item>
                            the formal security policy model;
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_fsp.6.1d">
                    The developer shall provide a functional specification.
                </ae-developer>
                <ae-developer id="adv_fsp.6.2d">
                    The developer shall provide a formal presentation of the
                    functional specification of the TSF.
                </ae-developer>
                <ae-developer id="adv_fsp.6.3d">
                    The developer shall provide a tracing from the functional
                    specification to the SFRs.
                </ae-developer>
                <ae-content id="adv_fsp.6.1c">
                    The functional specification shall completely represent the
                    TSF.
                </ae-content>
                <ae-content id="adv_fsp.6.2c">
                    The functional specification shall describe the TSFI using a
                    formal style.
                </ae-content>
                <ae-content id="adv_fsp.6.3c">
                    The functional specification shall describe the purpose and
                    method of use for all TSFI.
                </ae-content>
                <ae-content id="adv_fsp.6.4c">
                    The functional specification shall identify and describe all
                    parameters associated with each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.6.5c">
                    The functional specification shall describe all actions
                    associated with each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.6.6c">
                    The functional specification shall describe all direct error
                    messages that may result from an invocation of each TSFI.
                </ae-content>
                <ae-content id="adv_fsp.6.7c" boldfrom="adv_fsp.5.7c">
                    The functional specification shall describe all error messages
                    contained in the TSF implementation representation.
                </ae-content>
                <ae-content id="adv_fsp.6.8c" boldfrom="adv_fsp.5.8c">
                    The functional specification shall provide a rationale for
                    each error message contained in the TSF implementation that
                    is not otherwise described in the functional specification
                    justifying why it is not associated with a TSFI.
                </ae-content>
                <ae-content id="adv_fsp.6.9c">
                    The formal presentation of the functional specification of
                    the TSF shall describe the TSFI using a formal style,
                    supported by informal, explanatory text where appropriate.
                </ae-content>
                <ae-content id="adv_fsp.6.10c" boldfrom="adv_fsp.5.9c">
                    The tracing shall demonstrate that the SFRs trace to TSFIs
                    in the functional specification.
                </ae-content>
                <ae-evaluator id="adv_fsp.6.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                </ae-evaluator>
                <ae-evaluator id="adv_fsp.6.2e">
                    The evaluator shall determine that the functional
                    specification is an accurate and complete instantiation of
                    the SFRs.
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Implementation representation" id="adv_imp">
            <af-objectives>

                The function of the <xref id="adv_imp" show="link"/> family
                is for the developer to make available the implementation
                representation (and, at higher levels, the implementation
                itself) of the TOE in a form that can be analysed by the
                evaluator. The implementation representation is used in
                analysis activities for other families (analysing the TOE
                design, for instance) to demonstrate that the TOE conforms
                its design and to provide a basis for analysis in other
                areas of the evaluation (e.g., the search for
                vulnerabilities). The implementation representation is
                expected to be in a form that captures the detailed internal
                workings of the TSF. This may be software source code,
                firmware source code, hardware diagrams and/or IC hardware
                design language code or layout data.
            </af-objectives>
            <af-overview>

                The implementation representation of the TOE is made
                available so that it can be analysed by the evaluator to
                demonstrate that the TOE conforms its design and to provide
                a basis for analysis in other areas of the evaluation (e.g.,
                the search for vulnerabilities). The implementation
                representation captures the detailed internal workings of
                the TSF. This may be software source code, firmware source
                code, hardware diagrams and/or chip specifications.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the amount of
                implementation that is mapped to the TOE design
                description.
            </af-levelling-criteria>
            <af-application-notes>

                Source code or hardware diagrams and/or IC hardware design
                language code or layout data that are used to build the
                actual hardware are examples of parts of an implementation
                representation. It is important to note that while the
                implementation representation must be made available to the
                evaluator, this does not imply that the evaluator needs to
                possess that representation. For instance, the developer may
                require that the evaluator review the implementation
                representation at a site of the developer's choosing.

                The entire implementation representation is made available
                to ensure that analysis activities are not curtailed due to
                lack of information. This does not, however, imply that all
                of the representation is examined when the analysis
                activities are being performed. This is likely impractical
                in almost all cases, in addition to the fact that it most
                likely will not result in a higher-assurance TOE
                vs. targeted sampling of the implementation
                representation. The implementation representation is made
                available to allow analysis of other TOE design
                decompositions (e.g., functional specification, TOE design),
                and to gain confidence that the security functionality
                described at a higher level in the design actually appear to
                be implemented in the TOE. Conventions in some forms of the
                implementation representation may make it difficult or
                impossible to determine from just the implementation
                representation itself what the actual result of the
                compilation or run-time interpretation will be. For example,
                compiler directives for C language compilers will cause the
                compiler to exclude or include entire portions of the
                code. For this reason, it is important that such ``extra''
                information or related tools (scripts, compilers, etc.)  be
                provided so that the implementation representation can be
                accurately determined.

                The purpose of the mapping between the implementation
                representation and the TOE design description is to aid the
                evaluator's analysis. The internal workings of the TOE may
                be better understood when the TOE design is analysed with
                corresponding portions of the implementation representation.
                The mapping serves as an index into the implementation
                representation. At the lower component, only a subset of the
                implementation representation is mapped to the TOE design
                description. Because of the uncertainty of which portions of
                the implementation representation will need such a mapping,
                the developer may choose either to map the entire
                implementation representation beforehand, or to wait to see
                which portions of the implementation representation the
                evaluator requires to be mapped.

                The implementation representation is manipulated by the
                developer in a form that is suitable for transformation to
                the actual implementation. For instance, the developer may
                work with files containing source code, which is eventually
                compiled to become part of the TSF. The developer makes
                available the implementation representation in the form used
                by the developer, so that the evaluator may use automated
                techniques in the analysis. This also increases the
                confidence that the implementation representation examined
                is actually the one used in the production of the TSF (as
                opposed to the case where it is supplied in an alternate
                presentation format, such as a word processor document). It
                should be noted that other forms of the implementation
                representation may also be used by the developer; these
                forms are supplied as well. The overall goal is to supply
                the evaluator with the information that will maximise the
                effectiveness of the evaluator's analysis efforts.

                Some forms of the implementation representation may require
                additional information because they introduce significant
                barriers to understanding and analysis. Examples include
                ``shrouded'' source code or source code that has been
                obfuscated in other ways such that it prevents understanding
                and/or analysis. These forms of implementation
                representation typically result from the TOE developer
                taking a version of the implementation representation and
                running a shrouding or obfuscation program on it. While the
                shrouded representation is what is compiled and may be
                closer to the implementation (in terms of structure) than
                the original, un-shrouded representation, supplying such
                obfuscated code may cause significantly more time to be
                spent in analysis tasks involving the representation. When
                such forms of representation are created, the components
                require details on the shrouding tools/algorithms used so
                that the un-shrouded representation can be supplied, and the
                additional information can be used to gain confidence that
                the shrouding process does not compromise any security
                functionality.
            </af-application-notes>
            <a-component name="Implementation representation of the TSF" id="adv_imp.1">
                <aco-dependsoncomponent acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="alc_tat.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine that
                    the implementation representation made available by the
                    developer is suitable for use in other analysis
                    activities; <italic>suitability</italic> is judged by its
                    conformance to the requirements for this component.
                </msa-objectives>
                <msa-application-notes>

                    The entire implementation representation is made available
                    to ensure that analysis activities are not curtailed due
                    to lack of information. This does not, however, imply that
                    all of the representation is examined when the analysis
                    activities are being performed. This is likely impractical
                    in almost all cases, in addition to the fact that it most
                    likely will not result in a higher-assurance TOE
                    vs. targeted sampling of the implementation
                    representation. For this sub-activity, this is even
                    truer. It would not be productive for the evaluator to
                    spend large amounts of time verifying the requirements for
                    one portion of the implementation representation, and then
                    use a different portion of the implementation
                    representation in performing analysis for other work
                    units.  Therefore, the evaluator is encouraged to select
                    the sample of the implementation representation from the
                    areas of the TOE that will be of most interest during the
                    analysis performed during work units from other families
                    (e.g. <xref id="ate_ind" show="id"/>, <xref id="ava_van" show="id"/> and <xref id="adv_int" show="id"/>).
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the implementation representation;
                        </item>
                        <item>
                            the documentation of the development tools, as
                            resulting from <xref id="alc_tat" show="id"/> ;
                        </item>
                        <item>
                            TOE design description.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_imp.1.1d">
                    The developer shall make available the implementation
                    representation for the entire TSF.
                </ae-developer>
                <ae-developer id="adv_imp.1.2d">
                    The developer shall provide a mapping between the TOE design
                    description and the sample of the implementation
                    representation.
                </ae-developer>
                <ae-content id="adv_imp.1.1c">
                    The implementation representation shall define the TSF to a
                    level of detail such that the TSF can be generated without
                    further design decisions.
                </ae-content>
                <ae-content id="adv_imp.1.2c">
                    The implementation representation shall be in the form used
                    by the development personnel.
                </ae-content>
                <ae-content id="adv_imp.1.3c">
                    The mapping between the TOE design description and the
                    sample of the implementation representation shall
                    demonstrate their correspondence.
                </ae-content>
                <ae-evaluator id="adv_imp.1.1e">
                    The evaluator shall confirm that, for the selected sample of
                    the implementation representation, the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_imp.1-1">
                        <ae-dc-element id="adv_imp.1.1c"/>

                        The evaluator shall check that the implementation
                        representation defines the TSF to a level of detail such
                        that the TSF can be generated without further design
                        decisions.

                        Source code or hardware diagrams and/or IC hardware
                        design language code or layout data that are used to
                        build the actual hardware are examples of parts of an
                        implementation representation. The evaluator samples the
                        implementation representation to gain confidence that it
                        is at the appropriate level and not, for instance, a
                        pseudo-code level which requires additional design
                        decisions to be made. The evaluator is encouraged to
                        perform a quick check when first looking at the
                        implementation representation to assure themselves that
                        the developer is on the right track. However, the
                        evaluator is also encourage to perform the bulk of this
                        check while working on other work units that call for
                        examining the implementation; this will ensure the
                        sample examined for this work unit is relevant.
                    </m-workunit>
                    <m-workunit id="adv_imp.1-2">
                        <ae-dc-element id="adv_imp.1.2c"/>

                        The evaluator shall check that the implementation
                        representation is in the form used by development
                        personnel.

                        The implementation representation is manipulated by the
                        developer in form that it suitable for transformation to
                        the actual implementation. For instance, the developer
                        may work with files containing source code, which is
                        eventually compiled to become part of the TSF. The
                        developer makes available the implementation
                        representation in the form they use, so that the
                        evaluator may use automated techniques in the
                        analysis. This also increases the confidence that the
                        implementation representation examined is actually the
                        one used in the production of the TSF (as opposed to the
                        case where it is supplied in an alternate presentation
                        format, such as a word processor document). It should be
                        noted that other forms of the implementation
                        representation may also be used by the developer; these
                        forms are supplied as well. The overall goal is to
                        supply the evaluator with the information that will
                        maximise the evaluator's analysis efforts.

                        The evaluator samples the implementation representation
                        to gain confidence that it is the version that is usable
                        by the developer. The sample is such that the evaluator
                        has assurance that all areas of the implementation
                        representation are in conformance with the requirement;
                        however, a complete examination of the entire
                        implementation representation is unnecessary.

                        Conventions in some forms of the implementation
                        representation may make it difficult or impossible to
                        determine from just the implementation representation
                        itself what the actual result of the compilation or
                        run-time interpretation will be. For example, compiler
                        directives for C language compilers will cause the
                        compiler to exclude or include entire portions of the
                        code.

                        Some forms of the implementation representation may
                        require additional information because they introduce
                        significant barriers to understanding and
                        analysis. Examples include shrouded source code or
                        source code that has been obfuscated in other ways such
                        that it prevents understanding and/or analysis. These
                        forms of implementation representation typically result
                        from by taking a version of the implementation
                        representation that is used by the TOE developer and
                        running a shrouding or obfuscation program on it. While
                        the shrouded representation is what is compiled and may
                        be closer to the implementation (in terms of structure)
                        than the original, un-shrouded representation, supplying
                        such obfuscated code may cause significantly more time
                        to be spent in analysis tasks involving the
                        representation. When such forms of representation are
                        created, the components require details on the shrouding
                        tools/algorithms used so that the un-shrouded
                        representation can be supplied, and the additional
                        information can be used to gain confidence that the
                        shrouding process does not compromise any security
                        mechanisms.

                        The evaluator samples the implementation representation
                        to gain confidence that all of the information needed to
                        interpret the implementation representation has been
                        supplied. Note that the tools are among those referenced
                        by <xref id="alc_tat" show="link"/> components. The
                        evaluator is encouraged to perform a quick check when
                        first looking at the implementation representation to
                        assure themselves that the developer is on the right
                        track. However, the evaluator is also encouraged to
                        perform the bulk of this check while working on other
                        work units that call for examining the implementation;
                        this will ensure the sample examined for this work unit
                        is relevant.
                    </m-workunit>
                    <m-workunit id="adv_imp.1-3">
                        <ae-dc-element id="adv_imp.1.3c"/>

                        The evaluator shall examine the mapping between the TOE
                        design description and the sample of the implementation
                        representation to determine that it is accurate.

                        The evaluator augments the determination of existence
                        (specified in work unit <xref id="adv_imp.1-1" show="link"/>) by verifying the accuracy of a portion of
                        the implementation representation and the TOE design
                        description. For parts of the TOE design description
                        that are interesting, the evaluator would verify the
                        implementation representation accurately reflects the
                        description provided in the TOE design
                        description.

                        For example, the TOE design description might identify a
                        login module that is used to identify and authenticate
                        users. If user authentication is sufficiently
                        significant, the evaluator would verify that the
                        corresponding code in fact implements that service as
                        described in the TOE design description. It might also
                        be worthwhile to verify that the code accepts the
                        parameters as described in the functional
                        specification.

                        It is worth pointing out the developer must choose
                        whether to perform the mapping for the entire
                        implementation representation, thereby guaranteeing that
                        the chosen sample will be covered, or waiting for the
                        sample to be chosen before performing the mapping. The
                        first option is likely more work, but may be completed
                        before the evaluation begins. The second option is less
                        work, but will produce a suspension of evaluation
                        activity while the necessary evidence is being
                        produced.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Complete mapping of the implementation representation of the TSF" id="adv_imp.2">
                <aco-hierarchical acomponent="adv_imp.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="alc_tat.1"/>
                <aco-dependsoncomponent acomponent="alc_cmc.5"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine that
                    the implementation representation made available by the
                    developer can be transformed into the implementation that
                    is used in the testing activities.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the implementation representation;
                        </item>
                        <item>
                            the documentation of the development tools, as
                            resulting from <xref id="alc_tat" show="id"/> ;
                        </item>
                        <item>
                            TOE design description.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_imp.2.1d">
                    The developer shall make available the implementation
                    representation for the entire TSF.
                </ae-developer>
                <ae-developer id="adv_imp.2.2d">
                    The developer shall provide a mapping between the TOE design
                    description and the entire implementation representation.
                </ae-developer>
                <ae-content id="adv_imp.2.1c">
                    The implementation representation shall define the TSF to a
                    level of detail such that the TSF can be generated without
                    further design decisions.
                </ae-content>
                <ae-content id="adv_imp.2.2c">
                    The implementation representation shall be in the form used
                    by the development personnel.
                </ae-content>
                <ae-content id="adv_imp.2.3c">
                    The mapping between the TOE design description and the
                    entire implementation representation shall demonstrate their
                    correspondence.
                </ae-content>
                <ae-evaluator id="adv_imp.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="TSF internals" id="adv_int">
            <af-objectives>

                This family addresses the assessment of the internal
                structure of the TSF. A TSF whose internals are
                well-structured is easier to implement and less likely to
                contain flaws that could lead to vulnerabilities; it is also
                easier to maintain without the introduction of flaws.
            </af-objectives>
            <af-overview>

                The internal structure of the TSF can aid or hamper
                understandability of the implementation representation.
                Source code that conforms to coding standards, that exhibit
                a minimum of interactions, and that is written in modules
                each with a single purpose, is much easier to understand
                than poorly-structured code with unnecessary or
                loosely-defined interactions.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                the amount of structure and minimisation of complexity
                required.  <xref id="adv_int.1" show="link"/> places
                requirements for well-structured internals on only selected
                parts of the TSF. This component is not included in an EAL
                because this component is viewed for use in special
                circumstances (e.g., the sponsor has a specific concern
                regarding a cryptographic module, which is isolated from the
                rest of the TSF) and would not be widely applicable.

                At the next level, the requirements for well-structured
                internals are placed on the entire TSF. Finally,
                minimisation of complexity is introduced in the highest
                component.
            </af-levelling-criteria>
            <af-application-notes>

                These requirements, when applied to the internal structure
                of the TSF, typically result in improvements that aid both
                the developer and the evaluator in understanding the TSF,
                and also provide the basis for designing and evaluating test
                suites. Further, improving understandability of the TSF
                should assist the developer in simplifying its
                maintainability.

                The requirements in this family are presented at a fairly
                abstract level. The wide variety of TOEs makes it impossible
                to codify anything more specific than ``well-structured'' or
                ``minimum complexity''. Judgements on structure and
                complexity are expected to be derived from the specific
                technologies used in the TOE. For example, software is
                likely to be considered well-structured if it exhibits the
                characteristics cited in the software engineering
                disciplines. The components within this family call for
                identifying the standards for measuring the characteristic
                of being well-structured and not overly-complex.
            </af-application-notes>
            <a-component name="Well-structured subset of TSF internals" id="adv_int.1">
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="alc_tat.1"/>
                <aco-objectives>

                    The objective of this component is to provide a means for
                    requiring specific portions of the TSF to be
                    well-structured.  The intent is that the entire TSF has
                    been designed and implemented using sound engineering
                    principles, but the analysis is performed upon only a
                    specific subset.
                </aco-objectives>
                <aco-application-notes>

                    This component requires the PP or ST author to fill in an
                    assignment with the subset of the TSF. This subset may be
                    identified in terms of the internals of the TSF at any
                    layer of abstraction. For example:
                    <list type="enumerated">
                        <item>the structural elements of the TSF as identified
                            in the TOE design (e.g. ``The developer shall design
                            and implement <italic>the audit subsystem</italic>
                            such that it has well-structured internals.'')</item>
                        <item>the implementation (e.g. ``The developer shall
                            design and implement <italic>the encrypt.c and
                                decrypt.c files</italic> such that it has
                            well-structured internals.'' or ``The developer shall
                            design and implement <italic>the 6227 IC chip</italic>
                            such that it has well-structured
                            internals.'')</item></list>

                    It is likely this would not be readily accomplished by
                    referencing the claimed SFRs (e.g. ``The developer shall
                    design and implement <italic>the portion of the TSF that
                    provide anonymity as defined in <xref id="fpr_ano.2" show="id"/></italic>
                    such that it has well-structured
                    internals.'') because this does not indicate where to
                    focus the analysis.

                    This component has limited value and would be suitable in cases
                    where potentially-malicious users/subjects have limited or
                    strictly controlled access to the TSFIs or where there is
                    another means of protection (e.g., domain separation) that
                    ensures the chosen subset of the TSF cannot be adversely
                    affected by the rest of the TSF (e.g., the cryptographic
                    functionality, which is isolated from the rest of the TSF, is
                    well-structured).
                </aco-application-notes>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the defined subset of the TSF is designed and structured
                    such that the likelihood of flaws is reduced and that
                    maintenance can be more readily performed without the
                    introduction of flaws.
                </msa-objectives>
                <msa-application-notes>

                    The role of the internals description is to provide
                    evidence of the structure of the design and implementation
                    of the TSF.

                    The structure of the design has two aspects: the
                    constituent parts of the TSF and the procedures used to
                    design the TSF. In cases where the TSF is designed in a
                    manner consistent with the design represented by the TOE
                    design (see <xref id="adv_tds" show="id"/>), the
                    assessment of the TSF design is obvious. In cases where
                    the design procedures (see <xref id="alc_tat" show="id"/>)
                    are being followed, the assessment of the TSF design
                    procedures is similarly obvious.

                    In cases where the TSF is implemented using
                    procedure-based software, this structure is assessed on
                    the basis of its <italic>modularity</italic>; the
                    modules identified in the internals description are the
                    same as the modules identified in the TOE design (<xref id="adv_tds" show="link"/>). A module consists of one or
                    more source code files that cannot be decomposed into
                    smaller compilable units.

                    The use of the assignment in this component levies stricter
                    constraints on the subset of the TSF that is explicitly
                    identified in the assignment <xref id="adv_int.1.1d" show="id"/>
                    than on the remainder of the TSF.
                    While the entire TSF is to be designed using good
                    engineering principles and result in a well-structured TSF, only
                    the specified subset is specifically analysed for this
                    characteristic. The evaluator determines that the developer's
                    application of coding standards result in a TSF that is
                    understandable.

                    The primary goal of this component is to ensure the TSF
                    subset's implementation representation is understandable
                    to facilitate maintenance and analysis (of both the
                    developer and evaluator).
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the TOE design description;
                        </item>
                        <item>
                            the implementation representation (if <xref id="adv_imp" show="id"/> is part of the claimed
                            assurance);
                        </item>
                        <item>
                            the TSF internals description and justification;
                        </item>
                        <item>
                            the documentation of the coding standards, as
                            resulting from <xref id="alc_tat" show="id"/>.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_int.1.1d">
                    The developer shall design and implement <assignment>subset
                    of the TSF</assignment> such that it has well-structured
                    internals.
                </ae-developer>
                <ae-developer id="adv_int.1.2d">
                    The developer shall provide an internals description and
                    justification.
                </ae-developer>
                <ae-content id="adv_int.1.1c">
                    The justification shall explain the characteristics used to
                    judge the meaning of ``well-structured''.
                </ae-content>
                <ae-content id="adv_int.1.2c">
                    The TSF internals description shall demonstrate that the
                    assigned subset of the TSF is well-structured.
                </ae-content>
                <ae-evaluator id="adv_int.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_int.1-1">
                        <ae-dc-element id="adv_int.1.1c"/>
                        The evaluator shall examine the justification to
                        determine that it identifies the basis for determining
                        whether the TSF is well-structured.

                        The evaluator verifies that the criteria for determining
                        the characteristic of being well-structured are clearly
                        defined in the justification. Acceptable criteria
                        typically originate from industry standards for the
                        technology discipline.  For example, procedural software
                        that executes linearly is traditionally viewed as
                        well-structured if it adheres to software engineering
                        programming practises, such as those defined in the IEEE
                        Standard (<italic>IEEE Std 610.12-1990</italic>). For
                        example, it would identify the criteria for the
                        procedural software portions of the TSF subset:
                        <list type="enumerated">
                            <item>the process used for modular
                                decomposition</item>
                            <item>coding standards used in the development of the
                                implementation</item>
                            <item>a description of the maximum acceptable level of
                                intermodule coupling exhibited by the TSF
                                subset</item>
                            <item>a description of the minimum acceptable level of
                                cohesion exhibited the modules of the TSF
                                subset</item></list>

                        For other types of technologies used in the TOE - such as
                        non-procedural software (e.g. object-oriented programming),
                        widespread commodity hardware (e.g. PC microprocessors), and
                        special-purpose hardware (e.g. smart-card processors) - the
                        evaluator should seek guidance from the evaluation authority for
                        determining the adequacy of criteria for being
                        ``well-structured''.
                    </m-workunit>
                    <m-workunit id="adv_int.1-2">
                        <ae-dc-element id="adv_int.1.2c"/>
                        The evaluator shall check the TSF internals
                        description to determine that it identifies the Assigned
                        subset of the TSF.

                        This subset may be identified in terms of the internals
                        of the TSF at any layer of abstraction. For example, it
                        may be in terms of the structural elements of the TSF as
                        identified in the TOE design (e.g. the audit subsystem),
                        or in terms of the implementation
                        (e.g. <italic>encrypt.c</italic> and
                        <italic>decrypt.c</italic> files, or the 6227 IC
                        chip).

                        It is insufficient to identify this subset in terms of
                        the claimed SFRs (e.g. the portion of the TSF that
                        provide anonymity as defined in <xref id="fpr_ano.2" show="id"/>) because this does not indicate where to
                        focus the analysis.
                    </m-workunit>
                    <m-workunit id="adv_int.1-3">
                        <ae-dc-element id="adv_int.1.2c"/>
                        The evaluator shall examine the TSF internals
                        description to determine that it demonstrates that the
                        assigned TSF subset is well-structured.

                        The evaluator examines the internals description to
                        ensure that it provides a sound explanation of how the
                        TSF subset meets the criteria from <xref id="adv_int.1-1" show="id"/>

                        For example, it would explain how the procedural
                        software portions of the TSF subset meets the following:
                        <list type="enumerated">
                            <item>that there is a one-to-one correspondence
                                between the modules identified in the TSF subset and
                                the modules described in the TOE design (<xref id="adv_tds" show="id"/>)</item>
                            <item>how the TSF design is a reflection of the
                                modular decomposition process</item>
                            <item>a justification for all instances where the
                                coding standards were not used or met</item>
                            <item>a justification for any coupling or cohesion
                                outside the acceptable bounds</item></list>
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_int.1.2e">
                    The evaluator shall perform an internals analysis on the
                    assigned subset of the TSF.
                    <m-workunit id="adv_int.1-4">

                        The evaluator shall determine that the TOE design for
                        the assigned TSF subset is well-structured.

                        The evaluator examines a sample of the TOE design to
                        verify the accuracy of the justification. For example, a
                        sample of the TOE design is analysed to determine its
                        adherence to the design standards, etc. As with all
                        areas where the evaluator performs activities on a
                        subset the evaluator provides a justification of the
                        sample size and scope

                        The description of the TOE's decomposition into
                        subsystems and modules will make the argument that the
                        TSF subset is well-structured self-evident. Verification
                        that the procedures for structuring the TSF (as examined
                        in <xref id="alc_tat" show="id"/>) are being followed
                        will make it self-evident that the TSF subset is
                        well-structured.
                    </m-workunit>
                    <m-workunit id="adv_int.1-5">

                        The evaluator shall determine that the assigned TSF
                        subset is well-structured.

                        If <xref id="adv_imp" show="id"/> is not part of the
                        claimed assurance, then this work unit is not applicable
                        and is therefore considered to be satisfied.

                        The evaluator examines a sample of the TSF subset to
                        verify the accuracy of the internals description. For
                        example, a sample of the procedural software portions of
                        the TSF subset is analysed to determine its cohesion and
                        coupling, its adherence to the coding standards, etc. As
                        with all areas where the evaluator performs activities
                        on a subset the evaluator provides a justification of
                        the sample size and scope.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Well-structured internals" id="adv_int.2">
                <aco-hierarchical acomponent="adv_int.1"/>
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="alc_tat.1"/>
                <aco-objectives>

                    The objective of this component is to provide a means for
                    requiring the TSF to be well-structured. The intent is
                    that the entire TSF has been designed and implemented
                    using sound engineering principles.
                </aco-objectives>
                <aco-application-notes>

                    Judgements on the adequacy of the structure are expected to
                    be derived from the specific technologies used in the TOE.
                    This component calls for identifying the standards for
                    measuring the characteristic of being
                    well-structured.
                </aco-application-notes>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TSF is designed and structured such that the
                    likelihood of flaws is reduced and that maintenance can be
                    more readily performed without the introduction of
                    flaws.
                </msa-objectives>
                <msa-application-notes>

                    The role of the internals description is to provide
                    evidence of the structure of the design and implementation
                    of the TSF.

                    The structure of the design has two aspects: the
                    constituent parts of the TSF and the procedures used to
                    design the TSF. In cases where the TSF is designed in a
                    manner consistent with the design represented by the TOE
                    design (see <xref id="adv_tds" show="id"/>), the
                    assessment of the TSF design is obvious. In cases where
                    the design procedures (see <xref id="alc_tat" show="id"/>)
                    are being followed, the assessment of the TSF design
                    procedures is similarly obvious.

                    In cases where the TSF is implemented using
                    procedure-based software, this structure is assessed on
                    the basis of its <italic>modularity</italic>; the
                    modules identified in the internals description are the
                    same as the modules identified in the TOE design (<xref id="adv_tds" show="link"/>). A module consists of one or
                    more source code files that cannot be decomposed into
                    smaller compilable units.

                    The primary goal of this component is to ensure the TSF's
                    implementation representation is understandable to
                    facilitate maintenance and analysis (of both the developer
                    and evaluator).
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the modular design description;
                        </item>
                        <item>
                            the implementation representation (if <xref id="adv_imp" show="id"/> is part of the claimed
                            assurance));
                        </item>
                        <item>
                            the TSF internals description;
                        </item>
                        <item>
                            the documentation of the coding standards, as
                            resulting from <xref id="alc_tat" show="id"/>.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_int.2.1d">
                    The developer shall design and implement the entire TSF such
                    that it has well-structured internals.
                </ae-developer>
                <ae-developer id="adv_int.2.2d">
                    The developer shall provide an internals description and
                    justification.
                </ae-developer>
                <ae-content id="adv_int.2.1c">
                    The justification shall describe the characteristics used to
                    judge the meaning of ``well-structured''.
                </ae-content>
                <ae-content id="adv_int.2.2c">
                    The TSF internals description shall demonstrate that the
                    entire TSF is well-structured.
                </ae-content>
                <ae-evaluator id="adv_int.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_int.2-1">
                        <ae-dc-element id="adv_int.2.1c"/>
                        The evaluator shall examine the justification to
                        determine that it identifies the basis for determining
                        whether the TSF is well-structured.

                        The evaluator verifies that the criteria for determining
                        the characteristic of being well-structured are clearly
                        defined in the justification. Acceptable criteria
                        typically originate from industry standards for the
                        technology discipline.  For example, procedural software
                        that executes linearly is traditionally viewed as
                        well-structured if it adheres to software engineering
                        programming practises, such as those defined in the IEEE
                        Standard (<italic>IEEE Std 610.12-1990</italic>). For
                        example, it would identify the criteria for the
                        procedural software portions of the TSF:
                        <list type="enumerated">
                            <item>the process used for modular
                                decomposition</item>
                            <item>coding standards used in the development of the
                                implementation</item>
                            <item>a description of the maximum acceptable level of
                                intermodule coupling exhibited by the TSF</item>
                            <item>a description of the minimum acceptable level of
                                cohesion exhibited the modules of the
                                TSF</item></list>

                        For other types of technologies used in the TOE - such
                        as non-procedural software (e.g. object-oriented
                        programming), widespread commodity hardware (e.g. PC
                        microprocessors), and special-purpose hardware
                        (e.g. smart-card processors) - the evaluation authority
                        should be consulted for determining the adequacy of
                        criteria for being ``well-structured''.
                    </m-workunit>
                    <m-workunit id="adv_int.2-2">
                        <ae-dc-element id="adv_int.2.2c"/>
                        The evaluator shall examine the TSF internals
                        description to determine that it demonstrates that the
                        TSF is well-structured.

                        The evaluator examines the internals description to
                        ensure that it provides a sound explanation of how the
                        TSF meets the criteria from <xref id="adv_int.2-1" show="id"/>

                        For example, it would explain how the procedural
                        software portions of the TSF meet the following:
                        <list type="enumerated">
                            <item>that there is a one-to-one correspondence
                                between the modules identified in the TSF and the
                                modules described in the TOE design (<xref id="adv_tds" show="id"/>)</item>
                            <item>how the TSF design is a reflection of the
                                modular decomposition process</item>
                            <item>a justification for all instances where the
                                coding standards were not used or met</item>
                            <item>a justification for any coupling or cohesion
                                outside the acceptable bounds</item></list>
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_int.2.2e">
                    The evaluator shall perform an internals analysis on the
                    TSF.
                    <m-workunit id="adv_int.2-3">

                        The evaluator shall determine that the TOE design is
                        well-structured.

                        The evaluator examines the TOE design of a sample of the
                        TSF to verify the accuracy of the justification. For
                        example, a sample of the TOE design is analysed to
                        determine its adherence to the design standards, etc. As
                        with all areas where the evaluator performs activities
                        on a subset the evaluator provides a justification of
                        the sample size and scope

                        The description of the TOE's decomposition into
                        subsystems and modules will make the argument that the
                        TSF subset is well-structured self-evident. Verification
                        that the procedures for structuring the TSF (as examined
                        in <xref id="alc_tat" show="id"/>) are being followed
                        will make it self-evident that the TSF subset is
                        well-structured.
                    </m-workunit>
                    <m-workunit id="adv_int.2-4">

                        The evaluator shall determine that the TSF is
                        well-structured.

                        If <xref id="adv_imp" show="id"/> is not part of the
                        claimed assurance, then this work unit is not applicable
                        and is therefore considered to be satisfied.

                        The evaluator examines a sample of the TSF to verify the
                        accuracy of the internals description. For example, a
                        sample of the procedural software portions of the TSF is
                        analysed to determine its cohesion and coupling, its
                        adherence to the coding standards, etc. As with all
                        areas where the evaluator performs activities on a
                        subset the evaluator provides a justification of the
                        sample size and scope.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Minimally complex internals" id="adv_int.3">
                <aco-hierarchical acomponent="adv_int.2"/>
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="alc_tat.1"/>
                <aco-objectives>

                    The objective of this component is to provide a means for
                    requiring the TSF to be well-structured and of minimal
                    complexity. The intent is that the entire TSF has been
                    designed and implemented using sound engineering
                    principles.
                </aco-objectives>
                <aco-application-notes>

                    Judgements on the adequacy of the structure and complexity
                    are expected to be derived from the specific technologies
                    used in the TOE. This component calls for identifying the
                    standards for measuring the structure and
                    complexity.
                </aco-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the modular design description;
                        </item>
                        <item>
                            the implementation representation;
                        </item>
                        <item>
                            the TSF internals description;
                        </item>
                        <item>
                            the documentation of the coding standards, as
                            resulting from <xref id="alc_tat" show="id"/>.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_int.3.1d">
                    The developer shall design and implement the entire TSF such
                    that it has well-structured internals.
                </ae-developer>
                <ae-developer id="adv_int.3.2d">
                    The developer shall provide an internals description and
                    justification.
                </ae-developer>
                <ae-content id="adv_int.3.1c">
                    The justification shall describe the characteristics used to
                    judge the meaning of ``well-structured'' and ``complex''.
                </ae-content>
                <ae-content id="adv_int.3.2c">
                    The TSF internals description shall demonstrate that the
                    entire TSF is well-structured and is not overly complex.
                </ae-content>

                <ae-evaluator id="adv_int.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                </ae-evaluator>
                <ae-evaluator id="adv_int.3.2e">
                    The evaluator shall perform an internals analysis on the
                    entire TSF.
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Security policy modelling" id="adv_spm">
            <af-objectives>

                It is the objective of this family to provide additional
                assurance from the development of a formal <italic>security
                policy model</italic> of the TSF, and establishing a
                correspondence between the functional specification and this
                security policy model. Preserving internal consistency the
                security policy model is expected to formally establish the
                security principles from its characteristics by means of a
                mathematical proof.
            </af-objectives>
            <af-overview>

                A formal security model precisely describes important
                aspects of security and their relationship to the behaviour
                of the TSF.  Formalism helps to prove mathematically the
                thoroughness of the security.
            </af-overview>
            <af-levelling-criteria>

                This family contains only one component.
            </af-levelling-criteria>
            <af-application-notes>

                Inadequacies in a TOE can result either from a failure in
                understanding the security requirements or from a flawed
                implementation of those security requirements. Defining the
                security requirements adequately to ensure their
                understanding may be problematic because the definition must
                be sufficiently precise to prevent undesired results or
                subtle flaws during implementation of the TOE. Throughout
                the design, implementation, and review processes, the
                modelled security requirements may be used as precise design
                and implementation guidance, thereby providing increased
                assurance that the modelled security requirements are
                satisfied by the TOE. The precision of the model and
                resulting guidance is significantly improved by casting the
                model in a formal language and verifying the security
                requirements by formal proof.

                The creation of a formal security policy model helps to
                identify and eliminate ambiguous, inconsistent,
                contradictory, or unenforceable security policy
                elements. Once the TOE has been built, the formal model
                serves the evaluation effort by contributing to the
                evaluator's judgement of how well the developer has
                understood the security functionality being implemented and
                whether there are inconsistencies between the security
                requirements and the TOE design. The confidence in the model
                is accompanied by a proof that it contains no
                inconsistencies.

                A formal security model is a precise formal presentation of
                the important aspects of security and their relationship to
                the behaviour of the TOE; it identifies the set of rules and
                practises that regulates how the TSF manages, protects, and
                otherwise controls the system resources. The model includes
                the set of restrictions and properties that specify how
                information and computing resources are prevented from being
                used to violate the SFRs, accompanied by a persuasive set of
                engineering arguments showing that these restrictions and
                properties play a key role in the enforcement of the SFRs.
                It consists both of the formalisms that express the security
                functionality, as well as ancillary text to explain the
                model and to provide it with context. The security behaviour
                of the TSF is modelled both in terms of external behaviour
                (i.e. how the TSF interacts with the rest of the TOE and
                with its operational environment), as well as its internal
                behaviour.

                The Security Policy Model of the TOE is informally
                abstracted from its realisation by considering the proposed
                security requirements of the ST. The informal abstraction is
                taken to be successful if the TOE's principles (also termed
                ``invariants'') turn out to be enforced by its
                characteristics. The purpose of formal methods lies within
                the enhancement of the rigour of enforcement. Informal
                arguments are always prone to fallacies; especially if
                relationships among subjects, objects and operations get
                more and more involved. In order to minimise the risk of
                insecure state arrivals the rules and characteristics of the
                security policy model are mapped to respective properties
                and features within some formal system, whose rigour and
                strength can afterwards be used to obtain the security
                properties by means of theorems and formal proof.

                While the term ``formal security policy model'' is used in
                academic circles, the CC's approach has no fixed definition
                of ``security''; it would equate to whatever SFRs are being
                claimed. Therefore, the formal security policy model is
                merely a formal representation of the set of SFRs being
                claimed.

                The term <italic>security policy</italic> has
                traditionally been associated with only access control
                policies, whether label-based (mandatory access control) or
                user-based (discretionary access control). However, a
                security policy is not limited to access control; there are
                also audit policies, identification policies, authentication
                policies, encryption policies, management policies, and any
                other security policies that are enforced by the TOE, as
                described in the PP/ST. <xref id="adv_spm.1.1d" show="link"/> contains an assignment for identifying these
                policies that are formally modelled.
            </af-application-notes>
            <a-component name="Formal TOE security policy model" id="adv_spm.1">
                <aco-dependsoncomponent acomponent="adv_fsp.4"/>
                <msa-objectives>

                    The objectives of this sub-activity are to determine
                    whether the formal TOE security policy model clearly and
                    consistently describes the rules of operation, states,
                    transition, invariants, and other security properties of
                    the claimed SFRs and whether this description corresponds
                    with the description of the security functionality in the
                    functional specification.
                </msa-objectives>
                <msa-application-notes>

                    This activity applies to cases where the developer has
                    formally modelled all security policies of the TOE that
                    are capable of being modelled formally.

                    A formal TOE security policy model is a representation of
                    the rules (synonymously termed ``principles'') and
                    characteristics of security policies in mathematical
                    terms.  Their formal counterparts are called security
                    properties and security features, respectively. The
                    representation includes but is not limited to algebraic
                    specifications, finite state machines and logic formalisms
                    strong enough to formally infer the properties from the
                    features. The formal security policy model is accompanied
                    by an informal interpretation explaining how the rules and
                    characteristics are mapped to the respective properties
                    and features.

                    It is recognised that not all policies (see work unit
                    <xref id="adv_spm.1-3" show="link"/>) can be formally
                    modelled for all TOEs. This is because either the state of
                    the art is insufficient to formally model a given policy,
                    or because the nature of the TOE renders impossible the
                    modelling of policies that would otherwise be possible to
                    model. If none of the SFRs can be formally modelled, this
                    component cannot be met.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE security policy model;
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_spm.1.1d">
                    The developer shall provide a formal security policy model for
                    the <assignment>list of policies that are formally
                    modelled</assignment>.
                </ae-developer><ae-developer id="adv_spm.1.2d">
                For each policy covered by the formal security policy model, the
                model shall identify the relevant portions of the statement of
                SFRs that make up that policy.
            </ae-developer>
                <ae-developer id="adv_spm.1.3d">
                    The developer shall provide a formal proof of correspondence
                    between the model and any formal functional specification.
                </ae-developer>
                <ae-developer id="adv_spm.1.4d">
                    The developer shall provide a demonstration of
                    correspondence between the model and the functional
                    specification.
                </ae-developer>
                <ae-content id="adv_spm.1.1c">
                    The model shall be in a formal style, supported by
                    explanatory text as required, and identify the security
                    policies of the TSF that are modelled.
                </ae-content>
                <ae-content id="adv_spm.1.2c">
                    For all policies that are modelled, the model shall define
                    security for the TOE and provide a formal proof that the TOE
                    cannot reach a state that is not secure.
                </ae-content>
                <ae-content id="adv_spm.1.3c">
                    The correspondence between the model and the functional
                    specification shall be at the correct level of formality.
                </ae-content>
                <ae-content id="adv_spm.1.4c">
                    The correspondence shall show that the functional
                    specification is consistent and complete with respect to the
                    model.
                </ae-content>

                <ae-evaluator id="adv_spm.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_spm.1-1">
                        <ae-dc-element id="adv_spm.1.1c"/>

                        The evaluator shall examine the TOE security policy
                        model to determine that it is written in a formal
                        style.

                        The evaluator identifies the formal framework upon which
                        the TOE security policy model is based and ensures that
                        it is founded on well established mathematical concepts,
                        and identifies the security properties and features
                        addressed in the application notes and ensures the
                        formalisation of at least one security policy. If no
                        policy is formally modelled, this component cannot be
                        successfully claimed.

                        For additional guidance on formal methods refer to <xref id="formal_methods_annex" show="link"/>.
                    </m-workunit>
                    <m-workunit id="adv_spm.1-2">
                        <ae-dc-element id="adv_spm.1.1c"/>

                        The evaluator shall examine the TOE security policy
                        model to determine that it contains all necessary
                        informal explanatory text.

                        Supporting narrative descriptions are necessary for all
                        parts of the model (for example, to make clear the
                        meaning of any formal notation and how they are used)
                        including the security properties and features.
                    </m-workunit>
                    <m-workunit id="adv_spm.1-3">
                        <ae-dc-element id="adv_spm.1.1c"/>

                        The evaluator shall examine the TOE security policy
                        model to determine that it contains all policies that
                        can be formally modelled.

                        It is recognised that not all policies can be formally
                        modelled for all TOEs. This is because either the state
                        of the art is insufficient to formally model a given
                        policy, or because the nature of the TOE renders
                        impossible the modelling of policies that would
                        otherwise be possible to model.

                        While access control, information flow control, and data
                        integrity policies have all been formally modelled
                        successfully, the possibility of modelling other
                        policies is based on a case by case decision. Abstention
                        from formally modelling security relevant policies
                        requires argumentation and rests the burden of proof
                        entirely on the developer's side.

                        For any security policy where formal models are not
                        possible, the policy must be identified in the
                        assignment of <xref id="adv_spm.1.1d" show="link"/>.
                    </m-workunit>
                    <m-workunit id="adv_spm.1-4">
                        <ae-dc-element id="adv_spm.1.2c"/>

                        The evaluator shall examine the model to determine that
                        the security behaviour of the TOE is clearly
                        articulated.

                        The security policy model's properties describe the
                        TOE's behaviour in enforcing the principles of the
                        policy. For example, a policy that is modelled on the
                        basis of state transitions would include principles of
                        its states, identify its initial state, and define what
                        it means to be a secure state.

                        The security policy model's features describe the
                        attributes and conditions of the TOE that come into
                        consideration when enforcing its policy's
                        characteristics. For example, a policy that is modelled
                        on the basis of state transitions would describe the
                        necessary conditions to transform the TOE from one state
                        to the next.

                        An informal interpretation of all formal concepts
                        (including attributes, predicates and variables, if
                        available) must also be provided in order to make clear
                        their intended meaning.
                    </m-workunit>
                    <m-workunit id="adv_spm.1-5">
                        <ae-dc-element id="adv_spm.1.3c"/>

                        The evaluator shall examine the correspondence between
                        the security policy model and the formal functional
                        specification to determine that it is presented in a
                        formal style.

                        If no part of the functional specification is formal,
                        this work unit is not applicable and is therefore
                        considered to be satisfied. The corresponding work will
                        be performed under work unit <xref id="adv_spm.1-6" show="link"/>.

                        For any part of the functional specification that is
                        formally presented, the correspondence between that part
                        of the functional specification and the security policy
                        model must be formal. Analysis of the content is
                        performed as part of work units <xref id="adv_spm.1-7" show="link"/> through <xref id="adv_spm.1-10" show="link"/>.

                        For guidance on formal methods refer to <xref id="formal_methods_annex" show="link"/>.
                    </m-workunit>
                    <m-workunit id="adv_spm.1-6">
                        <ae-dc-element id="adv_spm.1.3c"/>

                        The evaluator shall examine the correspondence between
                        the security policy model and the semiformal functional
                        specification to determine that it is presented in a
                        semiformal style.

                        If the entire functional specification is formal, this
                        work unit is not applicable and is therefore considered
                        to be satisfied. The corresponding work will be
                        performed under work unit <xref id="adv_spm.1-5" show="link"/>.

                        For formally-modelled policies whose corresponding
                        description in the functional specification is not
                        formally presented, the correspondence between the model
                        and the functional specification must be a semiformal
                        demonstration. Analysis of the content is performed as
                        part of work units <xref id="adv_spm.1-7" show="link"/>
                        through <xref id="adv_spm.1-10" show="link"/>.

                        If a security policy model exists, either this work unit
                        or the previous work unit (or both) will be
                        applicable.
                    </m-workunit>
                    <m-workunit id="adv_spm.1-7">
                        <ae-dc-element id="adv_spm.1.4c"/>

                        The evaluator shall examine the TOE security policy
                        model rationale to determine that it formally proves the
                        correspondence between the security properties and the
                        security features.

                        The proof shall show that the security features enforce
                        the security properties. To determine the enforcement,
                        the evaluator considers the security properties and the
                        security features and verifies that the arguments used
                        in the proof are valid. The proof of correspondence
                        between the security properties and the security
                        features shall be formal.
                    </m-workunit>
                    <m-workunit id="adv_spm.1-8">
                        <ae-dc-element id="adv_spm.1.4c"/>

                        The evaluator shall examine the TOE security policy
                        model rationale to determine that it proves the internal
                        consistency of the TOE security policy model.

                        The proof shall show the absence of contradictions
                        within the TOE security policy model. In determining the
                        absence of contradictions, the evaluator verifies that
                        the arguments used in the proof are valid.

                        Since the TOE security policy model is formal, the proof
                        of its internal consistency shall be formal. It is
                        recognised that a complete formal proof of the internal
                        consistency of the TOE security policy model usually is
                        not possible due to the fundamental nature of formal
                        frameworks. Generally, it is sufficient to generate
                        evidence using formal proofs based on the specific TOE
                        security policy model that prove the internal
                        consistency by means of a combination with generic
                        arguments of the formal framework.
                    </m-workunit>
                    <m-workunit id="adv_spm.1-9">
                        <ae-dc-element id="adv_spm.1.4c"/>

                        The evaluator shall examine the TOE security policy
                        model rationale to determine that the behaviour modelled
                        is consistent with respect to policies described by the
                        security policies (as articulated by the functional
                        requirements in the ST).

                        The examination considers the informal relationships of
                        the model.  Hence the meaning of consistency reflects
                        the conventional understanding in contrast to the
                        internal consistency concept of the previous work
                        unit.

                        In determining consistency, the evaluator verifies that
                        the rationale shows that each description of properties
                        and features in the security policy model accurately
                        reflects the intent of the security policies. For
                        example, if a policy stated that access control was
                        necessary to the granularity of a single individual,
                        then a security policy model describing the security
                        behaviour of a TOE in the context of controlling groups
                        of users would not be consistent. Likewise, if the
                        policy stated that access control for groups of users
                        was necessary, then a security policy model describing
                        the security behaviour of a TOE in the context of
                        controlling individual users would also not be
                        consistent.

                        The evaluator also examines whether the security
                        policies are reflected within their formal counterparts
                        of the security policy model.
                    </m-workunit>
                    <m-workunit id="adv_spm.1-10">
                        <ae-dc-element id="adv_spm.1.4c"/>

                        The evaluator shall examine the TOE security policy
                        model rationale to determine that the behaviour modelled
                        is complete with respect to the policies described by
                        the security policies (i.e. as articulated by the
                        functional requirements in the ST).

                        In determining completeness of this rationale, the
                        evaluator considers the properties and features of the
                        security policy model and maps those properties and
                        features to explicit policy statements (i.e. functional
                        requirements).  The rationale should show that all
                        policies that are required to be modelled have an
                        associated property or feature description in the TOE
                        security policy model.

                        Abstention from formally modelling policy statements
                        always calls for justification on the developer's side
                        (also confer the application notes above).
                    </m-workunit>
                    <m-workunit id="adv_spm.1-11">


                        The evaluator shall examine the demonstration of
                        correspondence to determine that all Assigned policies
                        are mapped to functions within the functional
                        specification.

                        If all policies are included within the security policy
                        model (i.e. they are all formally modelled) and the
                        assignment in <xref id="adv_spm.1.1d" show="link"/> is
                        therefore empty, this work unit is not applicable and is
                        therefore considered to be satisfied.

                        The evaluator verifies that the correspondence
                        demonstrates that the descriptions of the SFR-related
                        functions in the functional specification correspond to
                        the SFRs. This may be done as part of the <xref id="adv_fsp" show="id"/> work units addressing
                        correspondence to the SFRs. However, if the developer
                        provides a well-structured semiformal or informal
                        security policy model to better articulate the notions
                        of security enforced by the TOE, the evaluator will
                        verify that such a model is consistent with the
                        SFRs.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="TOE design" id="adv_tds">
            <af-objectives>

                The design description of a TOE provides both context for a
                description of the TSF, and a thorough description of the
                TSF. As assurance needs increase, the level of detail
                provided in the description also increases. As the size and
                complexity of the TSF increase, multiple levels of
                decomposition are appropriate. The design requirements are
                intended to provide information (commensurate with the given
                assurance level) so that a determination can be made that
                the security functional requirements are realised.
            </af-objectives>
            <af-overview>

                The design description provides a further-refined
                description of the TSF from that presented in the functional
                specification. The functional specification provides a
                description of <italic>what</italic> the TSF does at its
                interface; the design description provides more insight into
                the TSF by describing <italic>how</italic> the TSF works in
                order to perform the functions supporting the SFRs. At lower
                assurance levels, complete details relating to all portions
                of the TSF are not required. As the desired assurance
                increases, more detail is made available so that analysis
                can be performed that supports the assurance claims being
                made.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                the amount of information that is required to be presented
                with respect to the TSF, and on the degree of formalism
                required of the design description.
            </af-levelling-criteria>
            <af-application-notes>

                The goal of design documentation is to provide sufficient
                information to determine the TSF boundary, and to describe
                <italic>how</italic> the TSF implements the Security
                Functional Requirements. The amount and structure of the
                design documentation will depend on the complexity of the
                TOE and the number of SFRs; in general, a very complex TOE
                with a large number of SFRs will require more design
                documentation than a very simple TOE implementing only a few
                SFRs. Very complex TOEs will benefit (in terms of the
                assurance provided) from the production of differing levels
                of decomposition in describing the design, while very simple
                TOEs do not require both high-level and low-level
                descriptions of its implementation.

                This family uses two levels of decomposition: the
                <italic>subsystem</italic> and the <italic>module</italic>.
                A module is the most specific description of functionality:
                it is a description of the implementation. A developer
                should be able to implement the part of the TOE described by
                the module with no further design decisions. A subsystem is
                a description of the design of the TOE; it helps to provide
                a high-level description of what a portion of the TOE is
                doing and how. As such, a subsystem may be further divided
                into lower-level subsystems, or into modules.  Very complex
                TOEs might require several levels of subsystems in order to
                adequately convey a useful description of how the TOE works.
                Very simple TOEs, in contrast, might not require a subsystem
                level of description; the module might clearly describe how
                the TOE works.

                The general approach adopted for design documentation is
                that, as the level of assurance increases, the emphasis of
                description shifts from the general (subsystem level) to
                more (module level) detail.  In cases where a module-level
                of abstraction is appropriate because the TOE is simple
                enough to be described at the module level, yet the level of
                assurance calls for a subsystem level of description, the
                module-level description alone will suffice. For complex
                TOEs, however, this is not the case: an enormous amount of
                (module-level) detail would be incomprehensible without an
                accompanying subsystem level of description.

                This approach follows the general paradigm that providing
                additional detail about the implementation of the TSF will
                result in greater assurance that the SFRs are implemented
                correctly, and provide information that can be used to
                demonstrate this in testing (<xref id="ate" show="link"/>).

                In the requirements for this family, the term
                <italic>interface</italic> is used as the means of
                communication (between two subsystems or modules). It
                describes how the communication is invoked; this is similar
                to the details of TSFI (see <xref id="adv_fsp" show="link"/>).  The term <italic>interaction</italic> is
                used to identify the purpose for communication; it
                identifies why two subsystems or modules are
                communicating.
                <subclause title="Detail about the Subsystems and Modules" id="subsystem-details">

                    The requirements define collections of details about
                    subsystems and modules to be provided:
                    <list type="enumerated">
                        <item>The subsystems and modules are
                            <italic>identified</italic> with a simple list of what
                            they are.</item>
                        <item>
                            Subsystems and modules may be <italic>categorised</italic>
                            (either implicitly or explicitly) as ``SFR-enforcing'',
                            ``SFR-supporting'', or ``SFR-non-interfering''; these terms are
                            used the same as they are used in <xref show="link" id="adv_fsp"/>.</item>
                        <item>
                            A subsystem's <italic>behaviour</italic> is what it does. The
                            behaviour may also be categorised as SFR-enforcing,
                            SFR-supporting, or SFR-non-interfering. The behaviour of the
                            subsystem is never categorised as more SFR-relevant than the
                            category of the subsystem itself. For example, an SFR-enforcing
                            subsystem can have SFR-enforcing behaviour as well as
                            SFR-supporting or SFR-non-interfering behaviour.</item>
                        <item>A <italic>behaviour summary</italic> of a
                            subsystem is an overview of the actions it performs
                            (e.g. ``The TCP subsystem assembles IP datagrams into
                            reliable byte streams''). </item>
                        <item>A <italic>behaviour description</italic> of a
                            subsystem is an explanation of everything it
                            does. This description should be at a level of detail
                            that one can readily determine whether the behaviour
                            has any relevance to the enforcement of the
                            SFRs.</item>
                        <item>
                            A <italic>description of interactions</italic> among or between
                            subsystems or modules identifies the reason that subsystems or
                            modules communicate, and characterises the information that is
                            passed. It need not define the information to the same level of
                            detail as an interface specification. For example, it would be
                            sufficient to say ``subsystem X requests a block of memory from
                            the memory manager, which responds with the location of the
                            allocated memory.  </item><item>
                        A <italic>description of interfaces</italic> provides the
                        details of how the interactions among modules are achieved.
                        Rather than describing the reason the modules are communicating
                        or the purpose of their communication (that is, the description
                        of interactions), the description of interfaces describes the
                        details of how that communication is accomplished, in terms of
                        the structure and contents of the messages, semaphores, internal
                        process communications, etc.
                    </item>
                        <item>
                            The <italic>purpose</italic> describes how a module provides
                            their functionality. It provides sufficient detail that no
                            further design decisions are needed. The correspondence between
                            the implementation representation that implements the module,
                            and the purpose of the module should be readily apparent.</item>
                        <item>A module is otherwise <italic>described</italic>
                            in terms of whatever is identified in the
                            element.</item></list> Subsystems and modules, and
                    ``SFR-enforcing'', etc. are all further explained in
                    greater detail in <xref show="title" id="tds_annex"/>.
                </subclause>
            </af-application-notes>
            <a-component name="Basic design" id="adv_tds.1">
                <aco-dependsoncomponent acomponent="adv_fsp.2"/>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            security architecture description;
                        </item>
                        <item>
                            the TOE design.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_tds.1.1d">
                    The developer shall provide the design of the TOE.
                </ae-developer>
                <ae-developer id="adv_tds.1.2d">
                    The developer shall provide a mapping from the TSFI of the
                    functional specification to the lowest level of
                    decomposition available in the TOE design.  </ae-developer>
                <ae-content id="adv_tds.1.1c">
                    The design shall describe the structure of the TOE in terms
                    of subsystems.
                </ae-content>
                <ae-content id="adv_tds.1.2c">
                    The design shall identify all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.1.3c">
                    The design shall describe the behaviour of each
                    SFR-supporting or SFR-non-interfering TSF subsystem in
                    sufficient detail to determine that it is not SFR-enforcing.
                </ae-content>
                <ae-content id="adv_tds.1.4c">
                    The design shall summarise the SFR-enforcing behaviour of
                    the SFR-enforcing subsystems.
                </ae-content>
                <ae-content id="adv_tds.1.5c">
                    The design shall provide a description of the interactions
                    among SFR-enforcing subsystems of the TSF, and between the
                    SFR-enforcing subsystems of the TSF and other subsystems of
                    the TSF.
                </ae-content>
                <ae-content id="adv_tds.1.6c">
                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.
                </ae-content>
                <ae-evaluator id="adv_tds.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_tds.1-1">
                        <ae-dc-element id="adv_tds.1.1c"/>

                        The evaluator shall examine the TOE design to determine
                        that the structure of the entire TOE is described in
                        terms of subsystems.

                        The evaluator ensures that all of the subsystems of the
                        TOE are identified. This description of the TOE will be
                        used as input to work unit <xref id="adv_tds.1-2" show="link"/>, where the parts of the TOE that make up
                        the TSF are identified. That is, this requirement is on
                        the entire TOE rather than on only the TSF.

                        The TOE (and TSF) may be described in multiple layers of
                        abstraction (i.e. subsystems and modules) Depending upon
                        the complexity of the TOE, its design may be described
                        in terms of subsystems and modules, as described in CC
                        Part 3 <xref show="none" id="tds_annex"/>.  At this
                        level of assurance, the decomposition only need be at
                        the ``subsystem'' level.

                        In performing this activity, the evaluator examines
                        other evidence presented for the TOE (e.g., ST, operator
                        user guidance) to determine that the description of the
                        TOE in such evidence is consistent with the description
                        contained in the TOE design.
                    </m-workunit>
                    <m-workunit id="adv_tds.1-2">
                        <ae-dc-element id="adv_tds.1.2c"/>

                        The evaluator shall examine the TOE design to determine
                        that all subsystems of the TSF are identified.

                        In work unit <xref id="adv_tds.1-1" show="link"/> all of
                        the subsystems of the TOE were identified, and a
                        determination made that the non-TSF subsystems were
                        correctly characterised. Building on that work, the
                        subsystems that were not characterised as non-TSF
                        subsystems should be precisely identified. The evaluator
                        determines that, of the hardware and software installed
                        and configured according to the <xref id="agd_pre" show="link"/> guidance, each subsystem has been
                        accounted for as either one that is part of the TSF, or
                        one that is not.
                    </m-workunit>
                    <m-workunit id="adv_tds.1-3">
                        <ae-dc-element id="adv_tds.1.3c"/>

                        The evaluator shall examine the TOE design to determine that
                        each SFR-supporting or SFR-non-interfering subsystem of the TSF
                        is described such that the evaluator can determine that the
                        subsystem is SFR-supporting or SFR-non-interfering.

                        SFR-supporting and SFR-non-interfering subsystems do not need to
                        be described in detail as to how they function in the system.
                        However, the evaluator makes a determination, based on the
                        evidence provided by the developer, that the subsystems that do
                        not have high-level descriptions are SFR-supporting or
                        SFR-non-interfering.  Note that if the developer provides a
                        uniform level of detailed documentation then this work unit will
                        be largely satisfied, since the point of categorising the
                        subsystems is to allow the developer to provide less information
                        for SFR-supporting and SFR-non-interfering subsystems than for
                        SFR-enforcing subsystems.

                        An SFR-supporting subsystem is one that is depended on
                        by an SFR-enforcing subsystem in order to implement an
                        SFR, but does not play as direct a role as an
                        SFR-enforcing subsystem. An SFR-non-interfering
                        subsystem is one that is not depended upon, in either a
                        supporting or enforcing role, to implement an
                        SFR.
                    </m-workunit>
                    <m-workunit id="adv_tds.1-4">
                        <ae-dc-element id="adv_tds.1.4c"/>

                        The evaluator shall examine the TOE design to determine
                        that it provides a complete, accurate, and high-level
                        description of the SFR-enforcing behaviour of the
                        SFR-enforcing subsystems.

                        The developer may designate subsystems as SFR-enforcing,
                        SFR-supporting, and SFR non-interfering, but these
                        ``tags'' are used only to describe the amount and type
                        of information the developer must provide, and can be
                        used to limit the amount of information the developer
                        has to develop if their engineering process does not
                        produce the documentation required. Whether the
                        subsystems have been categorised by the developer or
                        not, it is the
                        evaluator's responsibility to determine that the
                        subsystems have the appropriate information for their
                        role (SFR-enforcing, etc.) in the TOE, and to obtain the
                        appropriate information from the developer should the
                        developer fail to provide the required information for a
                        particular subsystem.

                        SFR-enforcing behaviour refers to <italic>how</italic> a
                        subsystem provides the functionality that implements an
                        SFR.  A high-level description need not refer to
                        specific data structures (although it may), but instead
                        talks about more general data flow, message flow, and
                        control relationships within a subsystem.  The goal of
                        these descriptions is to give the evaluator enough
                        information to understand <italic>how</italic> the
                        SFR-enforcing behaviour is achieved.  Note that the
                        evaluator should find unacceptable asserts of
                        SFR-enforcement in the TOE design documentation for this
                        work unit.  It should be noted that it is the
                        evaluator's determination with respect to what
                        ``high-level'' means for a particular TOE, and the
                        evaluator obtains enough information from the developer
                        to make a sound verdict for this work unit.

                        To determine completeness and accuracy, the evaluator
                        examines other information available (e.g., functional
                        specification, security architecture description,
                        implementation representation).  Descriptions of
                        functionality in these documents should be consistent
                        with what is provided for evidence for this work
                        unit
                    </m-workunit>
                    <m-workunit id="adv_tds.1-5">
                        <ae-dc-element id="adv_tds.1.5c"/>

                        The evaluator shall examine the TOE design to determine
                        that interactions between the subsystems of the TSF are
                        described.

                        The goal of describing the interactions between the
                        SFR-enforcing subsystems and other subsystems is to help provide
                        the reader a better understanding of how the TSF performs it
                        functions. These interactions do not need to be characterised at
                        the implementation level (e.g., parameters passed from one
                        routine in a subsystem to a routine in a different subsystem;
                        global variables; hardware signals (e.g., interrupts) from a
                        hardware subsystem to an interrupt-handling subsystem), but the
                        data elements identified for a particular subsystem that are
                        going to be used by another subsystem need to be covered in this
                        discussion.  Any control relationships between subsystems (e.g.,
                        a subsystem responsible for configuring a rule base for a
                        firewall system and the subsystem that actually implements these
                        rules) should also be described.

                        The evaluators need to use their own judgement in assessing the
                        completeness of the description. If the reason for an
                        interaction is unclear, or if there are SFR-related interactions
                        (discovered, for instance, in examining the descriptions of
                        subsystem behaviour) that do not appear to be described, the
                        evaluator ensures that this information is provided by the
                        developer. However, if the evaluator can determine that
                        interactions among a particular set of subsystems, while
                        incompletely described by the developer, will not aid in
                        understanding the overall functionality nor security
                        functionality provided by the TSF, then the evaluator may choose
                        to consider the description sufficient, and not pursue
                        completeness for its own sake.
                    </m-workunit>
                    <m-workunit id="adv_tds.1-6">
                        <ae-dc-element id="adv_tds.1.6c"/>

                        The evaluator shall examine the TOE design to determine
                        that it contains a complete and accurate mapping from
                        the TSFI described in the functional specification to
                        the subsystems of the TSF described in the TOE
                        design.

                        The subsystems described in the TOE design provide a
                        description of how the TSF works at a detailed level for
                        SFR-enforcing portions of the TSF, and at a higher level
                        for other portions of the TSF. The TSFI provide a
                        description of how the implementation is exercised. The
                        evidence from the developer identifies the subsystem
                        that is initially involved when an operation is
                        requested at the TSFI, and identify the various
                        subsystems that are primarily responsible for
                        implementing the functionality. Note that a complete
                        ``call tree'' for each TSFI is not required for this
                        work unit.

                        The evaluator assesses the completeness of the mapping
                        by ensuring that all of the TSFI map to at least one
                        subsystem. The verification of accuracy is more
                        complex.

                        The first aspect of accuracy is that each TSFI is mapped
                        to a subsystem at the TSF boundary. This determination
                        can be made by reviewing the subsystem description and
                        interactions, and from this information determining its
                        place in the architecture. The next aspect of accuracy
                        is that the mapping makes sense. For instance, mapping a
                        TSFI dealing with access control to a subsystem that
                        checks passwords is not accurate. The evaluator should
                        again use judgement in making this determination. The
                        goal is that this information aids the evaluator in
                        understanding the system and implementation of the SFRs,
                        and ways in which entities at the TSF boundary can
                        interact with the TSF. The bulk of the assessment of
                        whether the SFRs are described accurately by the
                        subsystems is performed in other work units.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_tds.1.2e">
                    The evaluator shall determine that the design is an accurate
                    and complete instantiation of all security functional
                    requirements.
                    <m-workunit id="adv_tds.1-7">

                        The evaluator shall examine the TOE security functional
                        requirements and the TOE design, to determine that all
                        ST security functional requirements are covered by the
                        TOE design.

                        The evaluator may construct a map between the TOE security
                        functional requirements and the TOE design.  This map will
                        likely be from a functional requirement to a set of
                        subsystems. Note that this map may have to be at a level of
                        detail below the component or even element level of the
                        requirements, because of operations (assignments, refinements,
                        selections) performed on the functional requirement by the ST
                        author.

                        For example, the <xref id="fdp_acc.1" show="link"/>
                        component contains an element with assignments.  If the
                        ST contained, for instance, ten rules in the <xref id="fdp_acc.1" show="link"/> assignment, and these ten
                        rules were implemented in specific places within fifteen
                        modules, it would be inadequate for the evaluator to map
                        <xref id="fdp_acc.1" show="link"/> to one subsystem and
                        claim the work unit had been completed. Instead, the
                        evaluator would map <xref id="fdp_acc.1" show="link"/>
                        (rule 1) to subsystem A, behaviours x, y, and z; <xref id="fdp_acc.1" show="link"/> (rule 2) to subsystem A,
                        behaviours x, p, and q; etc.
                    </m-workunit>
                    <m-workunit id="adv_tds.1-8">

                        The evaluator shall examine the TOE design to determine
                        that it is an accurate instantiation of all security
                        functional requirements.

                        The evaluator ensures that each security requirement
                        listed in the TOE security functional requirements
                        subclause of the ST has a corresponding design description
                        in the TOE design that accurately details how the TSF
                        meets that requirement. This requires that the evaluator
                        identify a collection of subsystems that are responsible
                        for implementing a given functional requirement, and
                        then examine those subsystems to understand how the
                        requirement is implemented. Finally, the evaluator would
                        assess whether the requirement was accurately
                        implemented.

                        As an example, if the ST requirements specified a
                        role-based access control mechanism, the evaluator would
                        first identify the subsystems that contribute to this
                        mechanism's implementation. This could be done by
                        in-depth knowledge or understanding of the TOE design or
                        by work done in the previous work unit. Note that this
                        trace is only to identify the subsystems, and is not the
                        complete analysis.

                        The next step would be to understand what mechanism the
                        subsystems implemented. For instance, if the design
                        described an implementation of access control based on
                        UNIX-style protection bits, the design would not be an
                        accurate instantiation of those access control
                        requirements present in the ST example used above. If
                        the evaluator could not determine that the mechanism was
                        accurately implemented because of a lack of detail, the
                        evaluator would have to assess whether all of the
                        SFR-enforcing subsystems have been identified, or if
                        adequate detail had been provided for those
                        subsystems.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Architectural design" id="adv_tds.2">
                <aco-hierarchical acomponent="adv_tds.1"/>
                <aco-dependsoncomponent acomponent="adv_fsp.3"/>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            security architecture description;
                        </item>
                        <item>
                            the TOE design.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_tds.2.1d">
                    The developer shall provide the design of the TOE.
                </ae-developer>
                <ae-developer id="adv_tds.2.2d">
                    The developer shall provide a mapping from the TSFI of the
                    functional specification to the lowest level of
                    decomposition available in the TOE design.
                </ae-developer>
                <ae-content id="adv_tds.2.1c">
                    The design shall describe the structure of the TOE in terms
                    of subsystems.
                </ae-content>
                <ae-content id="adv_tds.2.2c">
                    The design shall identify all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.2.3c">
                    The design shall describe the behaviour of each SFR
                    non-interfering subsystem of the TSF in detail sufficient to
                    determine that it is SFR non-interfering.
                </ae-content>
                <ae-content id="adv_tds.2.4c">
                    The design shall describe the SFR-enforcing behaviour of the
                    SFR-enforcing subsystems.
                </ae-content>
                <ae-content id="adv_tds.2.5c">
                    The design shall summarise the SFR-supporting and
                    SFR-non-interfering behaviour of the SFR-enforcing subsystems.
                </ae-content>
                <ae-content id="adv_tds.2.6c">
                    The design shall summarise the behaviour of the
                    SFR-supporting subsystems.
                </ae-content>
                <ae-content id="adv_tds.2.7c">
                    The design shall provide a description of the interactions
                    among all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.2.8c">
                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.
                </ae-content>
                <ae-evaluator id="adv_tds.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_tds.2-1">
                        <ae-dc-element id="adv_tds.2.1c"/>

                        The evaluator shall examine the TOE design to determine
                        that the structure of the entire TOE is described in
                        terms of subsystems.

                        The evaluator ensures that all of the subsystems of the
                        TOE are identified. This description of the TOE will be
                        used as input to work unit <xref id="adv_tds.2-2" show="link"/>, where the parts of the TOE that make up
                        the TSF are identified. That is, this requirement is on
                        the entire TOE rather than on only the TSF.

                        The TOE (and TSF) may be described in multiple layers of
                        abstraction (i.e. subsystems and modules) Depending upon
                        the complexity of the TOE, its design may be described
                        in terms of subsystems and modules, as described in CC
                        Part 3 <xref show="none" id="tds_annex"/>.  At this
                        level of assurance, the decomposition only need be at
                        the ``subsystem'' level.

                        In performing this activity, the evaluator examines
                        other evidence presented for the TOE (e.g., ST, operator
                        user guidance) to determine that the description of the
                        TOE in such evidence is consistent with the description
                        contained in the TOE design.
                    </m-workunit>
                    <m-workunit id="adv_tds.2-2">
                        <ae-dc-element id="adv_tds.2.2c"/>

                        The evaluator shall examine the TOE design to determine
                        that all subsystems of the TSF are identified.

                        In work unit <xref id="adv_tds.2-1" show="link"/> all of
                        the subsystems of the TOE were identified, and a
                        determination made that the non-TSF subsystems were
                        correctly characterised. Building on that work, the
                        subsystems that were not characterised as non-TSF
                        subsystems should be precisely identified. The evaluator
                        determines that, of the hardware and software installed
                        and configured according to the <xref id="agd_pre" show="link"/> guidance, each subsystem has been
                        accounted for as either one that is part of the TSF, or
                        one that is not.
                    </m-workunit>
                    <m-workunit id="adv_tds.2-3">
                        <ae-dc-element id="adv_tds.2.3c"/>

                        The evaluator shall examine the TOE design to determine
                        that each SFR-non-interfering subsystem of the TSF is
                        described such that the evaluator can determine that the
                        subsystem is SFR-non-interfering.

                        SFR-non-interfering subsystems do not need to be
                        described in detail as to how they function in the
                        system.  However, the evaluator makes a determination,
                        based on the evidence provided by the developer, that
                        the subsystems that do not have detailed descriptions
                        are SFR-non-interfering.  Note that if the developer
                        provides a uniform level of detailed documentation then
                        this work unit will be largely satisfied, since the
                        point of categorising the subsystems is to allow the
                        developer to provide less information for
                        SFR-non-interfering subsystems than for SFR-enforcing
                        and SFR-supporting subsystems.

                        An SFR-non-interfering subsystem is one on which the
                        SFR-enforcing and SFR-supporting subsystems have no
                        dependence; that is, they play no role in implementing
                        SFR functionality.
                    </m-workunit>
                    <m-workunit id="adv_tds.2-4">
                        <ae-dc-element id="adv_tds.2.4c"/>

                        The evaluator shall examine the TOE design to determine
                        that it provides a complete, accurate, and detailed
                        description of the SFR-enforcing behaviour of the
                        SFR-enforcing subsystems.

                        The developer may designate subsystems as SFR-enforcing,
                        SFR-supporting, and SFR non-interfering, but these
                        ``tags'' are used only to describe the amount and type
                        of information the developer must provide, and can be
                        used to limit the amount of information the developer
                        has to develop if their engineering process does not
                        produce the documentation required. Whether the
                        subsystems have been categorised by the developer or
                        not, it is the
                        evaluator's responsibility to determine that the
                        subsystems have the appropriate information for their
                        role (SFR-enforcing, etc.) in the TOE, and to obtain the
                        appropriate information from the developer should the
                        developer fail to provide the required information for a
                        particular subsystem.

                        SFR-enforcing behaviour refers to <italic>how</italic> a
                        subsystem provides the functionality that implements an
                        SFR.  While not at the level of an algorithmic
                        description, a detailed description of behaviour
                        typically discusses how the functionality is provided in
                        terms of what key data and data structures are, what
                        control relationships exist within a subsystem, and how
                        these elements work together to provide the
                        SFR-enforcing behaviour.  Such a description also
                        references SFR-supporting behaviour, which the evaluator
                        should consider in performing subsequent work
                        units.

                        To determine completeness and accuracy, the evaluator
                        examines other information available (e.g., functional
                        specification, security architecture description). Descriptions of
                        functionality in these documents should be consistent
                        with what is provided for evidence for this work unit.
                    </m-workunit>
                    <m-workunit id="adv_tds.2-5">
                        <ae-dc-element id="adv_tds.2.5c"/>

                        The evaluator shall examine the TOE design to determine that it
                        provides a complete and accurate high-level description of the
                        SFR-supporting and SFR-non-interfering behaviour of the
                        SFR-enforcing subsystems.

                        The developer may designate subsystems as SFR-enforcing,
                        SFR-supporting, and SFR non-interfering, but these
                        ``tags'' are used only to describe the amount and type
                        of information the developer must provide, and can be
                        used to limit the amount of information the developer
                        has to develop if their engineering process does not
                        produce the documentation required. Whether the
                        subsystems have been categorised by the developer or
                        not, it is the
                        evaluator's responsibility to determine that the
                        subsystems have the appropriate information for their
                        role (SFR-enforcing, etc.) in the TOE, and to obtain the
                        appropriate information from the developer should the
                        developer fail to provide the required information for a
                        particular subsystem.

                        In contrast to the previous work unit, this work unit calls for
                        the evaluator to assess the information provided for
                        SFR-enforcing subsystems that is SFR-supporting or
                        SFR-non-interfering.  The goal of this assessment is two-fold.
                        First, it should provide the evaluator greater understanding of
                        the way each subsystem works.  Second, the evaluator determines
                        that all SFR-enforcing behaviour exhibited by a subsystem has
                        been described.  Unlike the previous work unit, the information
                        provided for the SFR-supporting or SFR-non-interfering behaviour
                        does not have to be as detailed as that provided by the
                        SFR-enforcing behaviour.  For example, data structures or data
                        items that do not pertain to SFR-enforcing functionality will
                        likely not need to be described in detail, if at all.  It is the
                        evaluator's determination, however, with respect to what
                        ``high-level'' means for a particular TOE, and the evaluator
                        obtains enough information from the developer (even if it turns
                        out to be equivalent to information provided for the parts of
                        the subsystem that are SFR-enforcing) to make a sound verdict
                        for this work unit.

                        The evaluator is cautioned, however, that ``perfect''
                        assurance is not a goal nor required by this work unit,
                        so judgement will have to be exercised in determine the
                        amount and composition of the evidence required to make
                        a verdict on this work unit.

                        To determine completeness and accuracy, the evaluator examines
                        other information available (e.g., functional specification,
                        security architecture description).  Descriptions of functionality in these
                        documents should be consistent with what is provided for
                        evidence for this work unit.  In particular, the functional
                        specification should be used to determine that the behaviour
                        required to implement the TSF Interfaces described by the
                        functional specification are completely described by the
                        subsystem, since the behaviour will either be SFR-enforcing,
                        SFR-supporting or SFR-non-interfering.
                    </m-workunit>
                    <m-workunit id="adv_tds.2-6">
                        <ae-dc-element id="adv_tds.2.6c"/>

                        The evaluator shall examine the TOE design to determine
                        that it provides a complete and accurate high-level
                        description of the behaviour of the SFR-supporting
                        subsystems.

                        The developer may designate subsystems as SFR-enforcing,
                        SFR-supporting, and SFR non-interfering, but these
                        ``tags'' are used only to describe the amount and type
                        of information the developer must provide, and can be
                        used to limit the amount of information the developer
                        has to develop if their engineering process does not
                        produce the documentation required. Whether the
                        subsystems have been categorised by the developer or
                        not, it is the
                        evaluator's responsibility to determine that the
                        subsystems have the appropriate information for their
                        role (SFR-enforcing, etc.) in the TOE, and to obtain the
                        appropriate information from the developer should the
                        developer fail to provide the required information for a
                        particular subsystem.

                        In contrast to the previous two work units, this work
                        unit calls for the developer to provide (and the
                        evaluator to assess) information about SFR supporting
                        subsystems. Such subsystems should be referenced by the
                        descriptions of the SFR-enforcing subsystems, as well as
                        by the descriptions of interactions in work unit <xref id="adv_tds.2-7" show="link"/>.  The goal of evaluator's
                        assessment, like that for the previous work unit, is
                        two-fold.  First, it should provide the evaluator with
                        an understanding of the way each SFR-supporting
                        subsystem works.  Second, the evaluator determines that
                        the behaviour is described in enough detail so that the
                        way in which the subsystem supports the SFR-enforcing
                        behaviour is clear, and that the behaviour is not itself
                        SFR-enforcing.  The information provided for
                        SFR-supporting subsystem's behaviour does not have to be
                        as detailed as that provided by the SFR-enforcing
                        behaviour.  For example, data structures or data items
                        that do not pertain to SFR-enforcing functionality will
                        likely not need to be described in detail, if at all.
                        It is the evaluator's determination, however, with
                        respect to what ``high-level'' means for a particular
                        TOE, and the evaluator obtains enough information from
                        the developer (even if it turns out to be equivalent to
                        information provided for the parts of the subsystem that
                        are SFR-enforcing) to make a sound verdict for this work
                        unit.

                        The evaluator is cautions, however, that ``perfect''
                        assurance is not a goal nor required by this work unit,
                        so judgement will have to be exercised in determine the
                        amount and composition of the evidence required to make
                        a verdict on this work unit.

                        To determine completeness and accuracy, the evaluator
                        examines other information available (e.g., functional
                        specification, security architecture description,
                        implementation representation).  Descriptions of
                        functionality in these documents should be consistent
                        with what is provided for evidence for this work unit.
                        In particular, the functional specification should be
                        used to determine that the behaviour required to
                        implement the TSF Interfaces described by the functional
                        specification are completely described by the
                        subsystem.
                    </m-workunit>
                    <m-workunit id="adv_tds.2-7">
                        <ae-dc-element id="adv_tds.2.7c"/>

                        The evaluator shall examine the TOE design to determine
                        that interactions between the subsystems of the TSF are
                        described.

                        The goal of describing the interactions between the subsystems
                        is to help provide the reader a better understanding of how the
                        TSF performs it functions. These interactions do not need to be
                        characterised at the implementation level (e.g., parameters
                        passed from one routine in a subsystem to a routine in a
                        different subsystem; global variables; hardware signals (e.g.,
                        interrupts) from a hardware subsystem to an interrupt-handling
                        subsystem), but the data elements identified for a particular
                        subsystem that are going to be used by another subsystem need to
                        be covered in this discussion.  Any control relationships
                        between subsystems (e.g., a subsystem responsible for
                        configuring a rule base for a firewall system and the subsystem
                        that actually implements these rules) should also be
                        described.

                        It should be noted while the developer should characterise all
                        interactions between subsystems, the evaluators need to use
                        their own judgement in assessing the completeness of the
                        description. If the reason for an interaction is unclear, or if
                        there are SFR-related interactions (discovered, for instance, in
                        examining the descriptions of subsystem behaviour) that do not
                        appear to be described, the evaluator ensures that this
                        information is provided by the developer. However, if the
                        evaluator can determine that interactions among a particular set
                        of subsystems, while incompletely described by the developer,
                        will not aid in understanding the overall functionality nor
                        security functionality provided by the TSF, then the evaluator
                        may choose to consider the description sufficient, and not
                        pursue completeness for its own sake.
                    </m-workunit>
                    <m-workunit id="adv_tds.2-8">
                        <ae-dc-element id="adv_tds.2.8c"/>

                        The evaluator shall examine the TOE design to determine
                        that it contains a complete and accurate mapping from
                        the TSFI described in the functional specification to
                        the subsystems of the TSF described in the TOE
                        design.

                        The subsystems described in the TOE design provide a
                        description of how the TSF works at a detailed level for
                        SFR-enforcing portions of the TSF, and at a higher level
                        for other portions of the TSF. The TSFI provide a
                        description of how the implementation is exercised. The
                        evidence from the developer identifies the subsystem
                        that is initially involved when an operation is
                        requested at the TSFI, and identify the various
                        subsystems that are primarily responsible for
                        implementing the functionality. Note that a complete
                        ``call tree'' for each TSFI is not required for this
                        work unit.

                        The evaluator assesses the completeness of the mapping
                        by ensuring that all of the TSFI map to at least one
                        subsystem. The verification of accuracy is more
                        complex.

                        The first aspect of accuracy is that each TSFI is mapped
                        to a subsystem at the TSF boundary. This determination
                        can be made by reviewing the subsystem description and
                        interactions, and from this information determining its
                        place in the architecture. The next aspect of accuracy
                        is that the mapping makes sense. For instance, mapping a
                        TSFI dealing with access control to a subsystem that
                        checks passwords is not accurate. The evaluator should
                        again use judgement in making this determination. The
                        goal is that this information aids the evaluator in
                        understanding the system and implementation of the SFRs,
                        and ways in which entities at the TSF boundary can
                        interact with the TSF. The bulk of the assessment of
                        whether the SFRs are described accurately by the
                        subsystems is performed in other work units.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_tds.2.2e">
                    The evaluator shall determine that the design is an accurate
                    and complete instantiation of all security functional
                    requirements.
                    <m-workunit id="adv_tds.2-9">

                        The evaluator shall examine the TOE security functional
                        requirements and the TOE design, to determine that all
                        ST security functional requirements are covered by the
                        TOE design.

                        The evaluator may construct a map between the TOE security
                        functional requirements and the TOE design.  This map will
                        likely be from a functional requirement to a set of
                        subsystems. Note that this map may have to be at a level of
                        detail below the component or even element level of the
                        requirements, because of operations (assignments, refinements,
                        selections) performed on the functional requirement by the ST
                        author.

                        For example, the <xref id="fdp_acc.1" show="link"/>
                        component contains an element with assignments.  If the
                        ST contained, for instance, ten rules in the <xref id="fdp_acc.1" show="link"/> assignment, and these ten
                        rules were implemented in specific places within fifteen
                        modules, it would be inadequate for the evaluator to map
                        <xref id="fdp_acc.1" show="link"/> to one subsystem and
                        claim the work unit had been completed. Instead, the
                        evaluator would map <xref id="fdp_acc.1" show="link"/>
                        (rule 1) to subsystem A, behaviours x, y, and z; <xref id="fdp_acc.1" show="link"/> (rule 2) to subsystem A,
                        behaviours x, p, and q; etc.
                    </m-workunit>
                    <m-workunit id="adv_tds.2-10">

                        The evaluator shall examine the TOE design to determine
                        that it is an accurate instantiation of all security
                        functional requirements.

                        The evaluator ensures that each security requirement
                        listed in the TOE security functional requirements
                        subclause of the ST has a corresponding design description
                        in the TOE design that accurately details how the TSF
                        meets that requirement. This requires that the evaluator
                        identify a collection of subsystems that are responsible
                        for implementing a given functional requirement, and
                        then examine those subsystems to understand how the
                        requirement is implemented. Finally, the evaluator would
                        assess whether the requirement was accurately
                        implemented.

                        As an example, if the ST requirements specified a
                        role-based access control mechanism, the evaluator would
                        first identify the subsystems that contribute to this
                        mechanism's implementation. This could be done by
                        in-depth knowledge or understanding of the TOE design or
                        by work done in the previous work unit. Note that this
                        trace is only to identify the subsystems, and is not the
                        complete analysis.

                        The next step would be to understand what mechanism the
                        subsystems implemented. For instance, if the design
                        described an implementation of access control based on
                        UNIX-style protection bits, the design would not be an
                        accurate instantiation of those access control
                        requirements present in the ST example used above. If
                        the evaluator could not determine that the mechanism was
                        accurately implemented because of a lack of detail, the
                        evaluator would have to assess whether all of the
                        SFR-enforcing subsystems have been identified, or if
                        adequate detail had been provided for those
                        subsystems.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Basic modular design" id="adv_tds.3">
                <aco-hierarchical acomponent="adv_tds.2"/>
                <aco-dependsoncomponent acomponent="adv_fsp.4"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE design provides a description of the TOE in terms
                    of subsystems sufficient to determine the TSF boundary,
                    and provides a description of the TSF internals in terms
                    of modules (and optionally higher-level abstractions). It
                    provides a detailed description of the SFR-enforcing
                    modules and enough information about the SFR-supporting
                    and SFR-non-interfering modules for the evaluator to
                    determine that the SFRs are completely and accurately
                    implemented; as such, the TOE design provides an
                    explanation of the implementation representation.
                </msa-objectives>
                <msa-application-notes>

                    There are three types of activity that the evaluator must
                    undertake with respect to the TOE design. First, the evaluator
                    determines that the TSF boundary has been adequately
                    described. Second, the evaluator determines that the developer
                    has provided documentation that conforms to the content and
                    presentation requirements for this subsystem, and that is
                    consistent with other documentation provided for the
                    TOE. Finally, the evaluator must analyse the design information
                    provided for the SFR-enforcing modules (at a detailed level) and
                    the SFR-supporting and SFR-non-interfering  modules (at a less detailed level) to
                    understand how the system is implemented, and with that
                    knowledge ensure that the TSFI in the functional specification
                    are adequately described, and that the test information
                    adequately tests the TSF (done in the <xref id="ate" show="link"/> work units).

                    It is important to note that while the developer is obligated to
                    provide a complete description of the TSF (although
                    SFR-enforcing modules will have more detail than the
                    SFR-supporting or SFR-non-interfering modules), the evaluator is
                    expected to use their judgement in performing their
                    analysis. While the evaluator is expected to look at every
                    module, the detail to which they examine each module may
                    vary. The evaluator analyses each module in order to gain enough
                    understanding to determine the effect of the functionality of
                    the module on the security of the system, and the depth to which
                    they need to analyse the module may vary depending on the
                    module's role in the system. An important aspect of this
                    analysis is that the evaluator should use the other
                    documentation provided (TSS, functional specification, security
                    architecture description, and the TSF internal document) in
                    order to determine that the functionality that is described is
                    correct, and that the implicit designation of SFR-supporting or
                    SFR-non-interfering modules (see below) is supported by their
                    role in the system architecture.

                    The developer may designate modules as SFR-enforcing,
                    SFR-supporting, and SFR non-interfering, but these
                    ``tags'' are used only to describe the amount and type
                    of information the developer must provide, and can be
                    used to limit the amount of information the developer
                    has to develop if their engineering process does not
                    produce the documentation required. Whether the
                    modules have been categorised by the developer or
                    not, it is the
                    evaluator's responsibility to determine that the
                    modules have the appropriate information for their
                    role (SFR-enforcing, etc.) in the TOE, and to obtain the
                    appropriate information from the developer should the
                    developer fail to provide the required information for a
                    particular module.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            security architecture description;
                        </item>
                        <item>
                            the TOE design.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_tds.3.1d">
                    The developer shall provide the design of the TOE.
                </ae-developer>
                <ae-developer id="adv_tds.3.2d">
                    The developer shall provide a mapping from the TSFI of the
                    functional specification to the lowest level of
                    decomposition available in the TOE design.
                </ae-developer>
                <ae-content id="adv_tds.3.1c">
                    The design shall describe the structure of the TOE in terms
                    of subsystems.
                </ae-content>
                <ae-content id="adv_tds.3.2c">
                    The design shall describe the TSF in terms of modules.
                </ae-content>
                <ae-content id="adv_tds.3.3c">
                    The design shall identify all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.3.4c">
                    The design shall provide a description of each subsystem of
                    the TSF.
                </ae-content>
                <ae-content id="adv_tds.3.5c">
                    The design shall provide a description of the interactions
                    among all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.3.6c">
                    The design shall provide a mapping from the subsystems of
                    the TSF to the modules of the TSF.
                </ae-content>
                <ae-content id="adv_tds.3.7c">
                    The design shall describe each SFR-enforcing module in terms of
                    its purpose and relationship with other modules.
                </ae-content>
                <ae-content id="adv_tds.3.8c">
                    The design shall describe each SFR-enforcing module in terms of
                    its SFR-related interfaces, return values from those interfaces,
                    interaction with other modules and called
                    SFR-related interfaces to other SFR-enforcing modules.
                </ae-content>
                <ae-content id="adv_tds.3.9c">
                    The design shall describe each SFR-supporting or
                    SFR-non-interfering module in terms of its purpose and
                    interaction with other modules.
                </ae-content>
                <ae-content id="adv_tds.3.10c">
                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.
                </ae-content>
                <ae-evaluator id="adv_tds.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_tds.3-1">
                        <ae-dc-element id="adv_tds.3.1c"/>

                        The evaluator shall examine the TOE design to determine
                        that the structure of the entire TOE is described in
                        terms of subsystems.

                        The evaluator ensures that all of the subsystems of the
                        TOE are identified. This description of the TOE will be
                        used as input to work unit <xref id="adv_tds.3-2" show="link"/>, where the parts of the TOE that make up
                        the TSF are identified. That is, this requirement is on
                        the entire TOE rather than on only the TSF.

                        The TOE (and TSF) may be described in multiple layers of
                        abstraction (i.e. subsystems and modules). Depending upon the
                        complexity of the TOE, its design may be described in terms of
                        subsystems and modules, as described in CC Part 3 <xref show="none" id="tds_annex"/>.  For a very simple TOE that can be
                        described solely at the ``module'' level (see <xref id="adv_tds.3-2" show="link"/>), this work unit is not
                        applicable and therefore considered to be satisfied.

                        In performing this activity, the evaluator examines
                        other evidence presented for the TOE (e.g., ST, operator
                        user guidance) to determine that the description of the
                        TOE in such evidence is consistent with the description
                        contained in the TOE design.
                    </m-workunit>
                    <m-workunit id="adv_tds.3-2">
                        <ae-dc-element id="adv_tds.3.2c"/>

                        The evaluator shall examine the TOE design to determine
                        that the entire TSF is described in terms of
                        modules.

                        The evaluator will examine the modules for specific
                        properties in other work units; in this work unit the
                        evaluator determines that the modular description covers
                        the entire TSF, and not just a portion of the TSF. The
                        evaluator uses other evidence provided for the
                        evaluation (e.g., functional specification,
                        security architecture description) in making this
                        determination. For example, if the
                        functional specification contains interfaces to
                        functionality that does not appear to be described in
                        the TOE design description, it may be the case that a
                        portion of the TSF has not been included
                        appropriately. Making this determination will likely be
                        an iterative process, where as more analysis is done on
                        the other evidence, more confidence can be gained with
                        respect to the completeness of the documentation.

                        Unlike subsystems, modules describe the implementation in a level of detail that can serve
                        as a guide to reviewing the implementation representation. A description of a module should
                        be such that one could create an implementation of the module from the description, and the
                        resulting implementation would be 1) identical to the actual TSF implementation in terms of
                        the interfaces presented, 2) identical in the use of interfaces that are mentioned in the
                        design, and 3) functionally equivalent to the description of the purpose of the TSF module.
                        For instance, RFC 793 provides a high-level description of the TCP protocol. It is
                        necessarily implementation independent. While it provides a wealth of detail, it is
                        <bold><italic>not</italic></bold>
                        a suitable design description because it is not specific to an implementation. An actual
                        implementation can add to the protocol specified in the RFC, and implementation choices (for
                        instance, the use of global data vs. local data in various parts of the implementation) may
                        have an impact on the analysis that is performed. The design description of the TCP module would
                        list the interfaces presented by the implementation (rather than just those defined in RFC 793),
                        as well as an algorithm description of the processing associated with the modules implementing
                        TCP (assuming it was part of the TSF).
                    </m-workunit>
                    <m-workunit id="adv_tds.3-3">
                        <ae-dc-element id="adv_tds.3.3c"/>

                        The evaluator shall examine the TOE design to determine
                        that all subsystems of the TSF are identified.

                        If the design is presented solely in terms of modules,
                        then subsystems in these requirements are equivalent to
                        modules and the activity should be performed at the
                        module level.

                        In work unit <xref id="adv_tds.3-1" show="link"/> all of
                        the subsystems of the TOE were identified, and a
                        determination made that the non-TSF subsystems were
                        correctly characterised. Building on that work, the
                        subsystems that were not characterised as non-TSF
                        subsystems should be precisely identified. The evaluator
                        determines that, of the hardware and software installed
                        and configured according to the <xref id="agd_pre" show="link"/> guidance, each subsystem has been
                        accounted for as either one that is part of the TSF, or
                        one that is not.
                    </m-workunit>
                    <m-workunit id="adv_tds.3-4">
                        <ae-dc-element id="adv_tds.3.4c"/>

                        The evaluator shall examine the TOE design to determine
                        that each subsystem of the TSF describes its role in
                        the enforcement of SFRs described in the ST.

                        If the design is presented solely in terms of modules,
                        then this work unit will be considered satisfied by the
                        assessment done in subsequent work units; no explicit
                        action on the part of the evaluator is necessary in this
                        case.

                        On systems that are complex enough to warrant a
                        subsystem-level description of the TSF in addition to
                        the modular description, the goal of the subsystem-level
                        description is to give the evaluator context for the
                        modular description that follows. Therefore, the
                        evaluator ensures that the subsystem-level description
                        contains a description of how the security functional
                        requirements are achieved in the design, but at a level
                        of abstraction above the modular description. This
                        description should discuss the mechanisms used at a
                        level that is aligned with the module description; this
                        will provide the evaluators the road map needed to
                        intelligently assess the information contained in the
                        module description. A well-written set of subsystem
                        descriptions will help guide the evaluator in
                        determining the modules that are most important to
                        examine, thus focusing the evaluation activity on the
                        portions of the TSF that have the most relevance with
                        respect to the enforcement of the SFRs.

                        The evaluator ensures that all subsystems of the TSF
                        have a description. While the description should focus
                        on the role that the subsystem plays in enforcing or
                        supporting the implementation of the SFRs, enough
                        information must be present so that a context for
                        understanding the SFR-related functionality is
                        provided.
                    </m-workunit><m-workunit id="adv_tds.3-5"><ae-dc-element id="adv_tds.3.4c"/>
                    The evaluator shall examine the TOE design to determine that
                    each SFR-non-interfering subsystem of the TSF is described such that
                    the evaluator can determine that the subsystem is SFR-non-interfering.
                    If the design is presented solely in terms of modules, then this work unit
                    will be considered satisfied by the assessment done in subsequent work units;
                    no explicit action on the part of the evaluator is necessary in this case.
                    An SFR-non-interfering subsystem is one on which the SFR-enforcing and
                    SFR-supporting subsystems have no dependence; that is, they play no role
                    in implementing SFR functionality.
                    The evaluator ensures that all subsystems of the TSF have a description.
                    While the description should focus on the role that the subsystem do not plays
                    in enforcing or supporting the implementation of the SFRs, enough information
                    must be present so that a context for understanding the SFR-non-interfering
                    functionality is provided.</m-workunit>
                    <m-workunit id="adv_tds.3-6">
                        <ae-dc-element id="adv_tds.3.5c"/>

                        The evaluator shall examine the TOE design to determine
                        that interactions between the subsystems of the TSF are
                        described.

                        If the design is presented solely in terms of modules,
                        then this work unit will be considered satisfied by the
                        assessment done in subsequent work units; no explicit
                        action on the part of the evaluator is necessary in this
                        case.

                        On systems that are complex enough to warrant a subsystem-level
                        description of the TSF in addition to the modular description,
                        the goal of describing the interactions between the subsystems
                        is to help provide the reader a better understanding of how the
                        TSF performs its functions. These interactions do not need to be
                        characterised at the implementation level (e.g., parameters
                        passed from one routine in a subsystem to a routine in a
                        different subsystem; global variables; hardware signals (e.g.,
                        interrupts) from a hardware subsystem to an interrupt-handling
                        subsystem), but the data elements identified for a particular
                        subsystem that are going to be used by another subsystem should
                        be covered in this discussion.  Any control relationships
                        between subsystems (e.g., a subsystem responsible for
                        configuring a rule base for a firewall system and the subsystem
                        that actually implements these rules) should also be described.

                        It should be noted while the developer should characterise all
                        interactions between subsystems, the evaluators need to use
                        their own judgement in assessing the completeness of the
                        description. If the reason for an interaction is unclear, or if
                        there are SFR-related interactions (discovered, for instance, in
                        examining the module-level documentation) that do not appear to
                        be described, the evaluator ensures that this information is
                        provided by the developer. However, if the evaluator can
                        determine that interactions among a particular set of
                        subsystems, while incompletely described by the developer, and a
                        complete description will not aid in understanding the overall
                        functionality nor security functionality provided by the TSF,
                        then the evaluator may choose to consider the description
                        sufficient, and not pursue completeness for its own sake.
                    </m-workunit>
                    <m-workunit id="adv_tds.3-7">
                        <ae-dc-element id="adv_tds.3.6c"/>

                        The evaluator shall examine the TOE design to determine
                        that the mapping between the subsystems of the TSF and
                        the modules of the TSF is complete.

                        If the design is presented solely in terms of modules,
                        then this work unit is considered satisfied.

                        For TOEs that are complex enough to warrant a
                        subsystem-level description of the TSF in addition to
                        the modular description, the developer provides a simple
                        mapping showing how the modules of the TSF are allocated
                        to the subsystems. This will provide the evaluator a
                        guide in performing their module-level assessment. To
                        determine completeness, the evaluator examines each
                        mapping and determines that all subsystems map to at
                        least one module, and that all modules map to exactly
                        one subsystem.
                    </m-workunit>
                    <m-workunit id="adv_tds.3-8">
                        <ae-dc-element id="adv_tds.3.6c"/>

                        The evaluator shall examine the TOE design to determine
                        that the mapping between the subsystems of the TSF and
                        the modules of the TSF is accurate.

                        If the design is presented solely in terms of modules,
                        then this work unit is considered satisfied.

                        For TOEs that are complex enough to warrant a
                        subsystem-level description of the TSF in addition to
                        the modular description, the developer provides a simple
                        mapping showing how the modules of the TSF are allocated
                        to the subsystems. This will provide the evaluator a
                        guide in performing their module-level assessment.  The
                        evaluator may choose to check the accuracy of the
                        mapping in conjunction with performing other work
                        units. An ``inaccurate'' mapping is one where the module
                        is mistakenly associated with a subsystem where its
                        functions are not used within the subsystem. Because the
                        mapping is intended to be a guide supporting more
                        detailed analysis, the evaluator is cautioned to apply
                        appropriate effort to this work unit. Expending
                        extensive evaluator resources verifying the accuracy of
                        the mapping is not necessary. Inaccuracies that lead to
                        mis-understandings related to the design that are
                        uncovered as part of this or other work units are the
                        ones that should be associated with this work unit and
                        corrected.
                    </m-workunit>
                    <m-workunit id="adv_tds.3-9">
                        <ae-dc-element id="adv_tds.3.7c"/>

                        The evaluator shall examine the TOE design to determine
                        that the description of the purpose of each
                        SFR-enforcing module and relationship with other modules is complete and accurate.

                        The developer may designate modules as SFR-enforcing,
                        SFR-supporting, and SFR non-interfering, but these
                        ``tags'' are used only to describe the amount and type
                        of information the developer must provide, and can be
                        used to limit the amount of information the developer
                        has to develop if their engineering process does not
                        produce the documentation required. Whether the
                        modules have been categorised by the developer or
                        not, it is the
                        evaluator's responsibility to determine that the
                        modules have the appropriate information for their
                        role (SFR-enforcing, etc.) in the TOE, and to obtain the
                        appropriate information from the developer should the
                        developer fail to provide the required information for a
                        particular module.

                        The purpose of a module provides a description
                        indicating what function the module is fulfilling.  A
                        word of caution to evaluator is in order. The focus of
                        this work unit should be to provide the evaluator an
                        understanding of how the module works so that
                        determinations can be made about the soundness of the
                        implementation of the SFRs, as well as to support
                        architectural analysis performed for <xref id="adv_arc" show="id"/> component. As long as the evaluator has a
                        sound understanding of the module's operation, and its
                        relationship to other modules and the TOE as a whole,
                        the evaluator should consider the objective of the work
                        achieved and not engage in a documentation exercise for
                        the developer (by requiring, for example, a complete
                        algorithmic description for a self-evident
                        implementation representation).
                        Because the modules are at such a low level, it may be difficult
                        determine completeness and accuracy impacts from other
                        documentation, such as operational user guidance, the functional
                        specification, the TSF internals, or the security architecture
                        description. However, the evaluator uses the information present
                        in those documents to the extent possible to help ensure that
                        the purpose is accurately and completely described. This
                        analysis can be aided by the analysis performed for the work
                        units for the <xref id="adv_tds.3.10c" show="link"/> element,
                        which maps the TSFI in the functional specification to the
                        modules of the TSF.
                    </m-workunit>
                    <m-workunit id="adv_tds.3-10">
                        <ae-dc-element id="adv_tds.3.8c"/>

                        The evaluator shall examine the TOE design to determine
                        that the description of the interfaces presented by each
                        SFR-enforcing module contain an accurate and complete
                        description of the SFR-related parameters, the
                        invocation conventions for each interface, and any
                        values returned directly by the interface.

                        The SFR-related interfaces of a module are those
                        interfaces used by other modules as a means to invoke
                        the SFR-related operations provided, and to provide
                        inputs to or receive outputs from the module. The
                        purpose in the specification of these interfaces is to
                        permit the exercise of them during testing.
                        Inter-module interfaces that are not SFR-related need
                        not be specified or described, since they are not a
                        factor in testing. Likewise, other internal interfaces
                        that are not a factor in traversing SFR-related paths of
                        execution (such as those internal paths that are fixed)
                        need not be specified or described, since they are not a factor in testing.

                        SFR-related interfaces are described in terms of how
                        they are invoked, and any values that are returned. This
                        description would include a list of SFR-related
                        parameters, and descriptions of these parameters. Note
                        that global data would also be considered parameters if
                        used by the module (either as inputs or outputs) when
                        invoked. If a parameter were expected to take on a set
                        of values (e.g., a ``flag'' parameter), the complete set
                        of values the parameter could take on that would have an
                        effect on module processing would be
                        specified. Likewise, parameters representing data
                        structures are described such that each field of the
                        data structure is identified and described. Note that
                        different programming languages may have additional
                        ``interfaces'' that would be non-obvious; an example
                        would be operator/function overloading in C++. This
                        ``implicit interface'' in the class description would
                        also be described as part of the low-level TOE
                        design. Note that although a module could present only
                        one interface, it is more common that a module presents
                        a small set of related interfaces.

                        In terms of the assessment of parameters (inputs and
                        outputs) to a module, any use of global data must also
                        be considered. A module ``uses'' global data if it
                        either reads or writes the data. In order to assure the
                        description of such parameters (if used) is complete,
                        the evaluator uses other information provided about the
                        module in the TOE design (interfaces, algorithmic
                        description, etc.), as well as the description of the
                        particular set of global data assessed in work unit
                        <xref id="adv_tds.3-10" show="link"/>. For instance, the
                        evaluator could first determine the processing the
                        module performs by examining its function and interfaces
                        presented (particularly the parameters of the
                        interfaces). They could then check to see if the
                        processing appears to ``touch'' any of the global data
                        areas identified in the TOE design. The evaluator then
                        determines that, for each global data area that appears
                        to be ``touched'', that global data area is listed as a
                        means of input or output by the module the evaluator is
                        examining.

                        Invocation conventions are a programming-reference-type
                        description that one could use to correctly invoke a
                        module's interface if one were writing a program to make
                        use of the module's functionality through that
                        interface. This includes necessary inputs and outputs,
                        including any set-up that may need to be performed with
                        respect to global variables.

                        Values returned through the interface refer to values
                        that are either passed through parameters or messages;
                        values that the function call itself returns in the
                        style of a ``C'' program function call; or values passed
                        through global means (such as certain error routines in
                        *ix-style operating systems).

                        In order to assure the description is complete, the
                        evaluator uses other information provided about the
                        module in the TOE design (e.g., algorithmic description,
                        global data used) to ensure that it appears all data
                        necessary for performing the functions of the module is
                        presented to the module, and that any values that other
                        modules expect the module under examination to provide
                        are identified as being returned by the module. The
                        evaluator determines accuracy by ensuring that the
                        description of the processing matches the information
                        listed as being passed to or from an interface.

                    </m-workunit>
                    <m-workunit id="adv_tds.3-11">
                        <ae-dc-element id="adv_tds.3.9c"/>

                        The evaluator shall examine the TOE design to determine that
                        SFR-supporting and SFR-non-interfering modules are correctly
                        categorised.

                        In the cases where the developer has provided different amounts
                        of information for different modules, an implicit categorisation
                        has been done. That is, modules (for instance) with detail
                        presented on their SFR-related interfaces (see <xref id="adv_tds.3.10c" show="link"/>) are candidate SFR-enforcing
                        modules, although examination by the evaluator may lead to a
                        determination that some set of them are SFR-supporting or
                        SFR-non-interfering. Those with only a description of their
                        purpose and interaction with other modules (for instance) are
                        ``implicitly categorised'' as SFR-supporting or
                        SFR-non-interfering.

                        In these cases, a key focus of the evaluator for this work unit
                        is attempting to determine from the evidence provided for each
                        module implicitly categorised as SFR-supporting or
                        SFR-non-interfering and the evaluation information about other
                        modules (in the TOE design, the functional specification, the
                        security architecture description, and the operational user
                        guidance), whether the module is indeed SFR-supporting or
                        SFR-non-interfering. At this level of assurance some error
                        should be tolerated; the evaluator does not have to be
                        absolutely sure that a given module is SFR-supporting or
                        SFR-non-interfering, even though it is labelled as
                        such. However, if the evidence provided indicates that a
                        SFR-supporting or SFR-non-interfering module is SFR-enforcing,
                        the evaluator requests additional information from the developer
                        in order to resolve the apparent inconsistency. For instance,
                        suppose the documentation for Module A (an SFR-enforcing module)
                        indicates that it calls Module B to perform an access check on a
                        certain type of construct. When the evaluator examines the
                        information associated with Module B, they find that all the
                        developer has provided is a purpose and a set of interactions
                        (thus implicitly categorising Module B as SFR-supporting or
                        SFR-non-interfering). On examining the purpose and interactions
                        from Module A, the evaluator finds no mention of Module B
                        performing any access checks, and Module A is not listed as a
                        module with which Module B interacts. At this point the
                        evaluator should approach the developer to resolve the
                        discrepancies between the information provided in Module A and
                        that in Module B.

                        Another example would be where the evaluator examines the
                        mapping of the TSFI to the modules as provided by <xref id="adv_tds.3.2d" show="link"/>. This examination shows that
                        Module C is associated with an SFR requiring identification of
                        the user. Again, when the evaluator examines the information
                        associated with Module C, they find that all the developer has
                        provided is a purpose and a set of interactions (thus implicitly
                        categorising Module C as SFR-supporting or
                        SFR-non-interfering). Examining the purpose and interactions
                        presented for Module C, the evaluator is unable to determine why
                        Module C, listed as mapping to a TSFI concerned with user
                        identification, would not be classified as SFR-enforcing. Again,
                        the evaluator should approach the developer to resolve this
                        discrepancy.


                        A final example is from the opposite point of view. As
                        before, the developer has provided information associated
                        with Module D consisting of a purpose and a set of
                        interactions (thus implicitly categorising Module D as
                        SFR-supporting or SFR-non-interfering). The evaluator
                        examines all of the evidence provided, including the purpose
                        and interactions for Module D. The purpose appears to give a
                        meaningful description of Module D's function in the TOE,
                        the interactions are consistent with that description, and
                        there is nothing to indicate that Module D is
                        SFR-enforcing. In this case, the evaluator should not demand
                        more information about Module D ``just be to sure'' it is
                        correctly categorised. The developer has met their
                        obligations and the resulting assurance the evaluator has in
                        the implicit categorisation of Module D is (by definition)
                        appropriate for this assurance level.
                    </m-workunit>
                    <m-workunit id="adv_tds.3-12">
                        <ae-dc-element id="adv_tds.3.9c"/>

                        The evaluator shall examine the TOE design to determine that the
                        description of the purpose of each SFR-supporting or
                        SFR-non-interfering module is complete and accurate.

                        The description of the purpose of a module indicates
                        what function the module is fulfilling.  From the
                        description, the evaluator should be able to obtain a
                        general idea of the module's role. In order to assure
                        the description is complete, the evaluator uses the
                        information provided about the module's interactions
                        with other modules to assess whether the reasons for the
                        module being called are consistent with the module's
                        purpose. If the interaction description contains
                        functionality that is not apparent from, or in conflict
                        with, the module's purpose, the evaluator needs to
                        determine whether the problem is one of accuracy or of
                        completeness. The evaluator should be wary of purposes
                        that are too short, since meaningful analysis based on a
                        one-sentence purpose is likely to be impossible.

                        Because the modules are at such a low level, it may be difficult determine
                        completeness and accuracy impacts from other documentation,
                        such as administrative guidance, the functional specification,
                        the security architecture description, or the TSF internals document.
                        However, the evaluator uses the information present in those documents
                        to the extent possible to help ensure that the function is accurately
                        and completely described. This analysis can be aided by the analysis
                        performed for the work units for the ADV_TDS.3.10C element,
                        which maps the TSFI in the functional specification to the modules of the TSF.
                    </m-workunit>
                    <m-workunit id="adv_tds.3-13">
                        <ae-dc-element id="adv_tds.3.9c"/>

                        The evaluator shall examine the TOE design to determine that the
                        description of a SFR-supporting or SFR-non-interfering module's
                        interaction with other modules is complete and accurate.

                        It is important to note that, in terms of the Part 3
                        requirement and this work unit, the term
                        <italic>interaction</italic> is intended to convey less
                        rigour than <italic>interface</italic>. An interaction
                        does not need to be characterised at the implementation
                        level (e.g., parameters passed from one routine in a
                        module to a routine in a different module; global
                        variables; hardware signals (e.g., interrupts) from a
                        hardware subsystem to an interrupt-handling subsystem),
                        but the data elements identified for a particular module
                        that are going to be used by another module should be
                        covered in this discussion.  Any control relationships
                        between modules (e.g., a module responsible for
                        configuring a rule base for a firewall system and the
                        module that actually implements these rules) should also
                        be described.

                        Because the modules are at such a low level, it may be difficult
                        determine completeness and accuracy impacts from other
                        documentation, such as operational user guidance, the functional
                        specification, the security architecture description, or the TSF
                        internals document. However, the evaluator uses the information
                        present in those documents to the extent possible to help ensure
                        that the function is accurately and completely described. This
                        analysis can be aided by the analysis performed for the work
                        units for the <xref id="adv_tds.3.10c" show="link"/> element,
                        which maps the TSFI in the functional specification to the
                        modules of the TSF.

                        A module's interaction with other modules goes beyond
                        just a call-tree-type document. The interaction is
                        described from a functional perspective of why a module
                        interacts with other modules. The module's purpose
                        describes what functions the module provides to other
                        modules; the interactions should describe what the
                        module depends on from other modules in order to
                        accomplish this function.

                    </m-workunit>
                    <m-workunit id="adv_tds.3-14">
                        <ae-dc-element id="adv_tds.3.10c"/>

                        The evaluator shall examine the TOE design to determine
                        that it contains a complete and accurate mapping from
                        the TSFI described in the functional specification to
                        the modules of the TSF described in the TOE
                        design.

                        The modules described in the TOE design provide a description of
                        the implementation of the TSF. The TSFI provide a description of
                        how the implementation is exercised. The evidence from the
                        developer identifies the module that is initially invoked when
                        an operation is requested at the TSFI, and identifies the chain
                        of modules invoked up to the module that is primarily
                        responsible for implementing the functionality. However, a
                        complete call tree for each TSFI is not required for this work
                        unit. The cases in which more than one module would have to be
                        identified are where there are ``entry point'' modules or
                        wrapper modules that have no functionality other than
                        conditioning inputs or de-multiplexing an input. Mapping to one
                        of these modules would not provide any useful information to the
                        evaluator.

                        The evaluator assesses the completeness of the mapping
                        by ensuring that all of the TSFI map to at least one
                        module. The verification of accuracy is more
                        complex.

                        The first aspect of accuracy is that each TSFI is mapped to a module at the TSF boundary.
                        This determination can be made by reviewing the module description and its
                        interfaces/interactions. The next aspect of accuracy is that each TSFI identifies
                        a chain of modules between the initial module identified and a module
                        that is primarily responsible for implementing the function presented at the TSF.
                        Note that this may be the initial module, or there may be several modules,
                        depending on how much pre-conditioning of the inputs is done. It should be noted that
                        one indicator of a pre-conditioning module is that it is invoked for a large number
                        of the TSFI, where the TSFI are all of similar type (e.g., system call).
                        The final aspect of accuracy is that the mapping makes sense. For instance,
                        mapping a TSFI dealing with access control to a module that checks passwords
                        is not accurate. The evaluator should again use judgement in making this determination.
                        The goal is that this information aids the evaluator in understanding the system and
                        implementation of the SFRs, and ways in which entities at the TSF boundary can interact
                        with the TSF. The bulk of the assessment of whether the SFRs are described accurately
                        by the modules is performed in other work units.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_tds.3.2e">
                    The evaluator shall determine that the design is an accurate
                    and complete instantiation of all security functional
                    requirements.
                    <m-workunit id="adv_tds.3-15">

                        The evaluator shall examine the TOE security functional
                        requirements and the TOE design, to determine that all
                        ST security functional requirements are covered by the
                        TOE design.

                        The evaluator may construct a map between the TOE
                        security functional requirements and the TOE design.
                        This map will likely be from a functional requirement to
                        a set of subsystems, and later to modules. Note that this map may have to be
                        at a level of detail below the component or even element
                        level of the requirements, because of operations
                        (assignments, refinements, selections) performed on the
                        functional requirement by the ST author.

                        For example, the <xref id="fdp_acc.1" show="link"/>
                        component contains an element with assignments.  If the
                        ST contained, for instance, ten rules in the <xref id="fdp_acc.1" show="link"/> assignment, and these ten
                        rules were implemented in specific places within fifteen
                        modules, it would be inadequate for the evaluator to map
                        <xref id="fdp_acc.1" show="link"/> to one subsystem and
                        claim the work unit had been completed. Instead, the
                        evaluator would map <xref id="fdp_acc.1" show="link"/>
                        (rule 1) to modules x, y, and z of subsystem A;
                        <xref id="fdp_acc.1" show="link"/> (rule 2) to modules x, p, and q of subsystem A; etc.
                    </m-workunit>
                    <m-workunit id="adv_tds.3-16">

                        The evaluator shall examine the TOE design to determine
                        that it is an accurate instantiation of all security
                        functional requirements.

                        The evaluator may construct a map between the TOE security
                        functional requirements and the TOE design.  This map will
                        likely be from a functional requirement to a set of
                        subsystems. Note that this map may have to be at a level of
                        detail below the component or even element level of the
                        requirements, because of operations (assignments, refinements,
                        selections) performed on the functional requirement by the ST
                        author.

                        As an example, if the ST requirements specified a
                        role-based access control mechanism, the evaluator would
                        first identify the subsystems, and modules that contribute to this
                        mechanism's implementation. This could be done by
                        in-depth knowledge or understanding of the TOE design or
                        by work done in the previous work unit. Note that this
                        trace is only to identify the subsystems, and modules, and is not the
                        complete analysis.

                        The next step would be to understand what mechanism the
                        subsystems, and modules implemented. For instance, if the design
                        described an implementation of access control based on
                        UNIX-style protection bits, the design would not be an
                        accurate instantiation of those access control
                        requirements present in the ST example used above. If
                        the evaluator could not determine that the mechanism was
                        accurately implemented because of a lack of detail, the
                        evaluator would have to assess whether all of the
                        SFR-enforcing subsystems and modules have been identified, or if
                        adequate detail had been provided for those subsystems and modules.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Semiformal modular design" id="adv_tds.4">
                <aco-hierarchical acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="adv_fsp.5"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE design provides a description of the TOE in terms
                    of subsystems sufficient to determine the TSF boundary,
                    and provides a description of the TSF internals in terms
                    of modules (and optionally higher-level abstractions). It
                    provides a detailed description of the SFR-enforcing and
                    SFR-supporting modules and enough information about the
                    SFR-non-interfering modules for the evaluator to determine
                    that the SFRs are completely and accurately implemented;
                    as such, the TOE design provides an explanation of the
                    implementation representation.
                </msa-objectives>
                <msa-application-notes>

                    There are three types of activity that the evaluator must
                    undertake with respect to the TOE design. First, the evaluator
                    determines that the TSF boundary has been adequately
                    described. Second, the evaluator determines that the developer
                    has provided documentation that conforms to the content and
                    presentation requirements this subsystem, and that is consistent
                    with other documentation provided for the TOE. Finally, the
                    evaluator must analyse the design information provided for the
                    SFR-enforcing modules (at a detailed level) and the
                    SFR-supporting and SFR-non-interfering modules (at a less detailed level) to
                    understand how the system is implemented, and with that
                    knowledge ensure that the TSFI in the functional specification
                    are adequately described, and that the test information
                    adequately tests the TSF (done in the <xref id="ate" show="link"/> work units).
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            security architecture description;
                        </item>
                        <item>
                            the TOE design.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_tds.4.1d">
                    The developer shall provide the design of the TOE.
                </ae-developer>
                <ae-developer id="adv_tds.4.2d">
                    The developer shall provide a mapping from the TSFI of the
                    functional specification to the lowest level of
                    decomposition available in the TOE design.
                </ae-developer>
                <ae-content id="adv_tds.4.1c">
                    The design shall describe the structure of the TOE in terms
                    of subsystems.
                </ae-content>
                <ae-content id="adv_tds.4.2c">
                    The design shall describe the TSF in terms of modules,
                    designating each module as SFR-enforcing,
                    SFR-supporting, or SFR-non-interfering.
                </ae-content>
                <ae-content id="adv_tds.4.3c">
                    The design shall identify all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.4.4c">
                    The design shall provide a semiformal description of each subsystem of
                    the TSF, supported by informal, explanatory text where appropriate.
                </ae-content>
                <ae-content id="adv_tds.4.5c">
                    The design shall provide a description of the interactions
                    among all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.4.6c">
                    The design shall provide a mapping from the subsystems of
                    the TSF to the modules of the TSF.
                </ae-content>
                <ae-content id="adv_tds.4.7c">
                    The design shall describe each SFR-enforcing and SFR-supporting
                    module in terms of its purpose and relationship with other
                    modules.
                </ae-content>
                <ae-content id="adv_tds.4.8c">
                    The design shall describe each SFR-enforcing and SFR-supporting module
                    in terms of its SFR-related interfaces, return values from those interfaces,
                    interaction with other modules and called SFR-related
                    interfaces to other SFR-enforcing or SFR-supporting modules.
                </ae-content>
                <ae-content id="adv_tds.4.9c">
                    The design shall describe each SFR-non-interfering module in
                    terms of its purpose and interaction with other modules.
                </ae-content>
                <ae-content id="adv_tds.4.10c">
                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.
                </ae-content>
                <ae-evaluator id="adv_tds.4.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="adv_tds.4-1">
                        <ae-dc-element id="adv_tds.4.1c"/>

                        The evaluator shall examine the TOE design to determine
                        that the structure of the entire TOE is described in
                        terms of subsystems.

                        The evaluator ensures that all of the subsystems of the
                        TOE are identified. This description of the TOE will be
                        used as input to work unit <xref id="adv_tds.4-4" show="link"/>, where the parts of the TOE that make up
                        the TSF are identified. That is, this requirement is on
                        the entire TOE rather than on only the TSF.

                        The TOE (and TSF) may be described in multiple layers of
                        abstraction (i.e. subsystems and modules) Depending upon
                        the complexity of the TOE, its design may be described
                        in terms of subsystems and modules, as described in CC
                        Part 3 <xref show="none" id="tds_annex"/>.  For a very
                        simple TOE that can be described solely at the
                        ``module'' level (see <xref id="adv_tds.4-2" show="link"/>), this work unit is not applicable and
                        therefore considered to be satisfied.

                        In performing this activity, the evaluator examines
                        other evidence presented for the TOE (e.g., ST, operator
                        user guidance) to determine that the description of the
                        TOE in such evidence is consistent with the description
                        contained in the TOE design.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-2">
                        <ae-dc-element id="adv_tds.4.2c"/>

                        The evaluator shall examine the TOE design to determine
                        that the entire TSF is described in terms of
                        modules.

                        The evaluator will examine the modules for specific
                        properties in other work units; in this work unit the
                        evaluator determines that the modular description covers
                        the entire TSF, and not just a portion of the TSF. The
                        evaluator uses other evidence provided for the
                        evaluation (e.g., functional specification,
                        architectural description) in making this
                        determination. For example, if the functional
                        specification contains interfaces to functionality that
                        does not appear to be described in the TOE design
                        description, it may be the case that a portion of the
                        TSF has not been included appropriately. Making this
                        determination will likely be an iterative process, where
                        as more analysis is done on the other evidence, more
                        confidence can be gained with respect to the
                        completeness of the documentation.

                        Unlike subsystems, modules describe the implementation in a level of detail that can serve
                        as a guide to reviewing the implementation representation. A description of a module should
                        be such that one could create an implementation of the module from the description, and the
                        resulting implementation would be 1) identical to the actual TSF implementation in terms of
                        the interfaces presented, 2) identical in the use of interfaces that are mentioned in the
                        design, and 3) functionally equivalent to the description of the purpose of the TSF module.
                        For instance, RFC 793 provides a high-level description of the TCP protocol. It is
                        necessarily implementation independent. While it provides a wealth of detail, it is
                        <bold><italic>not</italic></bold>
                        a suitable design description because it is not specific to an implementation. An actual
                        implementation can add to the protocol specified in the RFC, and implementation choices (for
                        instance, the use of global data vs. local data in various parts of the implementation) may
                        have an impact on the analysis that is performed. The design description of the TCP module would
                        list the interfaces presented by the implementation (rather than just those defined in RFC 793),
                        as well as an algorithm description of the processing associated with the modules implementing
                        TCP (assuming it was part of the TSF).
                    </m-workunit>
                    <m-workunit id="adv_tds.4-3">
                        <ae-dc-element id="adv_tds.4.2c"/>

                        The evaluator shall check the TOE design to determine
                        that the TSF modules are identified as either
                        SFR-enforcing, SFR-supporting, or
                        SFR-non-interfering.

                        The purpose of designating each module (according to the role a
                        particular module plays in the enforcement of the SFRs) is to
                        allow developers to provide less information about the parts of
                        the TSF that have little role in security. It is always
                        permissible for the developer to provide more information or
                        detail than the requirements demand, as might occur when the
                        information has been gathered outside the evaluation context. In
                        such cases the developer must still designate the modules as
                        either SFR-enforcing, SFR-supporting, or
                        SFR-non-interfering.

                        The accuracy of these designations is continuously
                        reviewed as the evaluation progresses. The concern is
                        the mis-designation of modules as being less important
                        (and hence, having less information) than is really the
                        case.  While blatant mis-designations may be immediately
                        apparent (e.g., designating an authentication module as
                        anything but SFR-enforcing when <xref id="fia_uid" show="link"/> is one of the SFRs being claimed), other
                        mis-designations might not be discovered until the TSF
                        is better understood. The evaluator must therefore keep
                        in mind that these designations are the developer's
                        initial best effort, but are subject to change. Further
                        guidance is provided under work unit <xref id="adv_tds.4-17" show="link"/>, which examines the
                        accuracy of these designations.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-4">
                        <ae-dc-element id="adv_tds.4.3c"/>

                        The evaluator shall examine the TOE design to determine
                        that all subsystems of the TSF are identified.

                        If the design is presented solely in terms of modules,
                        then subsystems in these requirements are equivalent to
                        modules and the activity should be performed at the
                        module level.

                        In work unit <xref id="adv_tds.4-1" show="link"/> all of
                        the subsystems of the TOE were identified, and a
                        determination made that the non-TSF subsystems were
                        correctly characterised. Building on that work, the
                        subsystems that were not characterised as non-TSF
                        subsystems should be precisely identified. The evaluator
                        determines that, of the hardware and software installed
                        and configured according to the <xref id="agd_pre" show="link"/> guidance, each subsystem has been
                        accounted for as either one that is part of the TSF, or
                        one that is not.
                    </m-workunit><m-workunit id="adv_tds.4-5"><ae-dc-element id="adv_tds.4.4c"/>The evaluator shall examine the TDS documentation to determine
                    that the semiformal notation used for describing the subsystems, modules and
                    their interfaces is defined or referenced.A semiformal notation can be either defined by the sponsor or
                    a corresponding standard be referenced. The evaluator should provide a mapping
                    of security functions and their interfaces outlining in what part of the
                    documentation a function or interface is semiformal described and what notation
                    is used. The evaluator examines all semiformal notations used to make sure that
                    they are of a semiformal style and to justify the appropriateness of the manner
                    how the semiformal notations are used for the TOE.The evaluator is reminded that a semi-formal presentation is
                    characterised by a standardised format with a well-defined syntax that reduces
                    ambiguity that may occur in informal presentations. The syntax of all semiformal
                    notations used in the functional specification shall be defined or a corresponding
                    standard be referenced. The evaluator verifies that the semiformal notations used
                    for expressing the functional specification are capable of expressing features
                    relevant to security. In order to determine this, the evaluator can refer to the
                    SFR and compare the TSF security features stated in the ST and those described
                    in the FSP using the semiformal notations.</m-workunit>
                    <m-workunit id="adv_tds.4-6">
                        <ae-dc-element id="adv_tds.4.4c"/>

                        The evaluator shall examine the TOE design to determine
                        that each subsystem of the TSF describes its role in
                        the enforcement of SFRs described in the ST.

                        If the design is presented solely in terms of modules,
                        then this work unit will be considered satisfied by the
                        assessment done in subsequent work units; no explicit
                        action on the part of the evaluator is necessary in this
                        case.

                        On systems that are complex enough to warrant a
                        subsystem-level description of the TSF in addition to
                        the modular description, the goal of the subsystem-level
                        description is to give the evaluator context for the
                        modular description that follows. Therefore, the
                        evaluator ensures that the subsystem-level description
                        contains a description of how the security functional
                        requirements are achieved in the design, but at a level
                        of abstraction above the modular description. This
                        description should discuss the mechanisms used at a
                        level that is aligned with the module description; this
                        will provide the evaluators the road map needed to
                        intelligently assess the information contained in the
                        module description. A well-written set of subsystem
                        descriptions will help guide the evaluator in
                        determining the modules that are most important to
                        examine, thus focusing the evaluation activity on the
                        portions of the TSF that have the most relevance with
                        respect to the enforcement of the SFRs.

                        The evaluator ensures that all subsystems of the TSF
                        have a description. While the description should focus
                        on the role that the subsystem plays in enforcing or
                        supporting the implementation of the SFRs, enough
                        information must be present so that a context for
                        understanding the SFR-related functionality is
                        provided.
                    </m-workunit><m-workunit id="adv_tds.4-7"><ae-dc-element id="adv_tds.4.4c"/>
                    The evaluator shall examine the TOE design to determine that
                    each SFR-non-interfering subsystem of the TSF is described such that
                    the evaluator can determine that the subsystem is SFR-non-interfering.
                    If the design is presented solely in terms of modules, then this work unit
                    will be considered satisfied by the assessment done in subsequent work units;
                    no explicit action on the part of the evaluator is necessary in this case.
                    An SFR-non-interfering subsystem is one on which the SFR-enforcing and
                    SFR-supporting subsystems have no dependence; that is, they play no role
                    in implementing SFR functionality.
                    The evaluator ensures that all subsystems of the TSF have a description.
                    While the description should focus on the role that the subsystem do not plays
                    in enforcing or supporting the implementation of the SFRs, enough information
                    must be present so that a context for understanding the SFR-non-interfering
                    functionality is provided.</m-workunit>
                    <m-workunit id="adv_tds.4-8">
                        <ae-dc-element id="adv_tds.4.5c"/>

                        The evaluator shall examine the TOE design to determine
                        that interactions between the subsystems of the TSF are
                        described.

                        If the design is presented solely in terms of modules,
                        then this work unit will be considered satisfied by the
                        assessment done in subsequent work units; no explicit
                        action on the part of the evaluator is necessary in this
                        case.

                        On systems that are complex enough to warrant a subsystem-level
                        description of the TSF in addition to the modular description,
                        the goal of describing the interactions between the subsystems
                        is to help provide the reader a better understanding of how the
                        TSF performs it functions. These interactions do not need to be
                        characterised at the implementation level (e.g., parameters
                        passed from one routine in a subsystem to a routine in a
                        different subsystem; global variables; hardware signals (e.g.,
                        interrupts) from a hardware subsystem to an interrupt-handling
                        subsystem), but the data elements identified for a particular
                        subsystem that are going to be used by another subsystem need to
                        be covered in this discussion.  Any control relationships
                        between subsystems (e.g., a subsystem responsible for
                        configuring a rule base for a firewall system and the subsystem
                        that actually implements these rules) should also be
                        described.

                        It should be noted while the developer should characterise all
                        interactions between subsystems, the evaluators need to use
                        their own judgement in assessing the completeness of the
                        description. If the reason for an interaction is unclear, or if
                        there are SFR-related interactions (discovered, for instance, in
                        examining the module-level documentation) that do not appear to
                        be described, the evaluator ensures that this information is
                        provided by the developer. However, if the evaluator can
                        determine that interactions among a particular set of
                        subsystems, while incompletely described by the developer, and a
                        complete description will not aid in understanding the overall
                        functionality nor security functionality provided by the TSF,
                        then the evaluator may choose to consider the description
                        sufficient, and not pursue completeness for its own sake.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-9">
                        <ae-dc-element id="adv_tds.4.6c"/>

                        The evaluator shall examine the TOE design to determine
                        that the mapping between the subsystems of the TSF and
                        the modules of the TSF is complete.

                        If the design is presented solely in terms of modules,
                        then this work unit is considered satisfied.

                        For TOEs that are complex enough to warrant a
                        subsystem-level description of the TSF in addition to
                        the modular description, the developer provides a simple
                        mapping showing how the modules of the TSF are allocated
                        to the subsystems. This will provide the evaluator a
                        guide in performing their module-level assessment. To
                        determine completeness, the evaluator examines each
                        mapping and determines that all subsystems map to at
                        least one module, and that all modules map to exactly
                        one subsystem.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-10">
                        <ae-dc-element id="adv_tds.4.6c"/>

                        The evaluator shall examine the TOE design to determine
                        that the mapping between the subsystems of the TSF to
                        the modules of the TSF is accurate.

                        If the design is presented solely in terms of modules,
                        then this work unit is considered satisfied.

                        For TOEs that are complex enough to warrant a
                        subsystem-level description of the TSF in addition to
                        the modular description, the developer provides a simple
                        mapping showing how the modules of the TSF are allocated
                        to the subsystems. This will provide the evaluator a
                        guide in performing their module-level assessment.  The
                        evaluator may choose to check the accuracy of the
                        mapping in conjunction with performing other work
                        units. An ``inaccurate'' mapping is one where the module
                        is mistakenly associated with a subsystem where its
                        functions are not used within the subsystem. Because the
                        mapping is intended to be a guide supporting more
                        detailed analysis, the evaluator is cautioned to apply
                        appropriate effort to this work unit. Expending
                        extensive evaluator resources verifying the accuracy of
                        the mapping is not necessary. Inaccuracies that lead to
                        mis-understandings related to the design that are
                        uncovered as part of this or other work units are the
                        ones that should be associated with this work unit and
                        corrected.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-11">
                        <ae-dc-element id="adv_tds.4.7c"/>

                        The evaluator shall examine the TOE design to determine
                        that the description of the purpose of each
                        SFR-enforcing and SFR-supporting module, and relationship with other modules
                        is complete and accurate.

                        The developer may designate modules as SFR-enforcing,
                        SFR-supporting, and SFR non-interfering, but these
                        ``tags'' are used only to describe the amount and type
                        of information the developer must provide, and can be
                        used to limit the amount of information the developer
                        has to develop if their engineering process does not
                        produce the documentation required. Whether the modules
                        have been categorised by the developer or not, it is the
                        evaluator's responsibility to determine that the modules
                        have the appropriate information for their role
                        (SFR-enforcing, etc.) in the TOE, and to obtain the
                        appropriate information from the developer should the
                        developer fail to provide the required information for a
                        particular module.

                        The purpose of a module provides a description
                        indicating what function the module is fulfilling. A
                        word of caution to evaluator is in order. The focus of
                        this work unit should be to provide the evaluator an
                        understanding of how the module works so that
                        determinations can be made about the soundness of the
                        implementation of the SFRs, as well as to support
                        architectural analysis performed for <xref id="adv_arc" show="id"/> subsystems.  As long as the evaluator has a
                        sound understanding of the module's operation, and its
                        relationship to other modules and the TOE as a whole,
                        the evaluator should consider the objective of the work
                        achieved and not engage in a documentation exercise for
                        the developer (by requiring, for example, a complete
                        algorithmic description for a self-evident
                        implementation representation).
                        Because the modules are at such a low level, it may be difficult
                        determine completeness and accuracy impacts from other
                        documentation, such as operational user guidance, the functional
                        specification, the TSF internals, or the security architecture
                        description. However, the evaluator uses the information present
                        in those documents to the extent possible to help ensure that
                        the purpose is accurately and completely described. This
                        analysis can be aided by the analysis performed for the work
                        units for the <xref id="adv_tds.4.10c" show="link"/> element,
                        which maps the TSFI in the functional specification to the
                        modules of the TSF.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-12">
                        <ae-dc-element id="adv_tds.4.8c"/>

                        The evaluator shall examine the TOE design to determine
                        that the description of the interfaces presented by each
                        SFR-enforcing and SFR-supporting module contain an
                        accurate and complete description of the SFR-related
                        parameters, the invocation conventions for each
                        interface, and any values returned directly by the
                        interface.

                        The SFR-related interfaces of a module are those
                        interfaces used by other modules as a means to invoke
                        the SFR-related operations provided, and to provide
                        inputs to or receive outputs from the module. The
                        purpose in the specification of these interfaces is to
                        permit the exercise of them during testing.
                        Inter-module interfaces that are not SFR-related need
                        not be specified or described, since they are not a
                        factor in testing.  Likewise, other internal interfaces
                        that are not a factor in traversing SFR-related paths of
                        execution (such as those internal paths that are
                        fixed).
                        SFR-related interfaces of SFR-supporting modules are all
                        interfaces of SFR-supporting modules that are called directly
                        or indirectly from SFR-enforcing modules. Those interfaces
                        need to be described with all the parameter used in such a
                        call. This allows the evaluator to understand the purpose of
                        the call to the SFR-supporting module in the context of
                        operation of the SFR-enforcing modules.

                        SFR-related interfaces are described in terms of how
                        they are invoked, and any values that are returned. This
                        description would include a list of parameters, and
                        descriptions of these parameters. Note that global data
                        would also be considered parameters if used by the
                        module (either as inputs or outputs) when invoked. If a
                        parameter were expected to take on a set of values
                        (e.g., a ``flag'' parameter), the complete set of values
                        the parameter could take on that would have an effect on
                        module processing would be specified. Likewise,
                        parameters representing data structures are described
                        such that each field of the data structure is identified
                        and described. Note that different programming languages
                        may have additional ``interfaces'' that would be
                        non-obvious; an example would be operator/function
                        overloading in C++. This ``implicit interface'' in the
                        class description would also be described as part of the
                        low-level TOE design. Note that although a module could
                        present only one interface, it is more common that a
                        module presents a small set of related
                        interfaces.

                        In terms of the assessment of parameters (inputs and
                        outputs) to a module, any use of global data must also
                        be considered. A module ``uses'' global data if it
                        either reads or writes the data. In order to assure the
                        description of such parameters (if used) is complete,
                        the evaluator uses other information provided about the
                        module in the TOE design (interfaces, algorithmic
                        description, etc.), as well as the description of the
                        particular set of global data assessed in work unit
                        <xref id="adv_tds.4-12" show="link"/>. For instance, the
                        evaluator could first determine the processing the
                        module performs by examining its function and interfaces
                        presented (particularly the parameters of the
                        interfaces). They could then check to see if the
                        processing appears to ``touch'' any of the global data
                        areas identified in the TDS design. The evaluator then
                        determines that, for each global data area that appears
                        to be ``touched'', that global data area is listed as a
                        means of input or output by the module the evaluator is
                        examining.

                        Invocation conventions are a programming-reference-type
                        description that one could use to correctly invoke a
                        module's interface if one were writing a program to make
                        use of the module's functionality through that
                        interface. This includes necessary inputs and outputs,
                        including any set-up that may need to be performed with
                        respect to global variables.

                        Values returned through the interface refer to values
                        that are either passed through parameters or messages;
                        values that the function call itself returns in the
                        style of a ``C'' program function call; or values passed
                        through global means (such as certain error routines in
                        *ix-style operating systems).

                        In order to assure the description is complete, the
                        evaluator uses other information provided about the
                        module in the TOE design (e.g., algorithmic description,
                        global data used) to ensure that it appears all data
                        necessary for performing the functions of the module is
                        presented to the module, and that any values that other
                        modules expect the module under examination to provide
                        are identified as being returned by the module. The
                        evaluator determines accuracy by ensuring that the
                        description of the processing matches the information
                        listed as being passed to or from an interface.

                    </m-workunit>
                    <m-workunit id="adv_tds.4-13">
                        <ae-dc-element id="adv_tds.4.9c"/>

                        The evaluator shall examine the TOE design to determine
                        that SFR-non-interfering modules are correctly
                        categorised.

                        As mentioned in work unit <xref id="adv_tds.4-2" show="link"/>,
                        less information is required about modules that are
                        SFR-non-interfering.  A key focus of the evaluator for this work
                        unit is attempting to determine from the evidence provided for
                        each module implicitly categorised as SFR-non-interfering and
                        the evaluation (information about other modules in the TOE
                        design, the functional specification, the security architecture
                        description, the operational user guidance, the TSF internals
                        document, and perhaps even the implementation representation)
                        whether the module is indeed SFR-non-interfering. At this level
                        of assurance some error should be tolerated; the evaluator does
                        not have to be absolutely sure that a given module is
                        SFR-non-interfering, even though it is labelled as
                        such. However, if the evidence provided indicates that a
                        SFR-non-interfering module is SFR-enforcing or SFR-supporting,
                        the evaluator requests additional information from the developer
                        in order to resolve the apparent inconsistency. For example,
                        suppose the documentation for Module A (an SFR-enforcing module)
                        indicates that it calls Module B to perform an access check on a
                        certain type of construct. When the evaluator examines the
                        information associated with Module B, it is discovered that the
                        only information the developer has provided is a purpose and a
                        set of interactions (thus implicitly categorising Module B as
                        SFR-supporting or SFR-non-interfering). On examining the purpose and interactions
                        from Module A, the evaluator finds no mention of Module B
                        performing any access checks, and Module A is not listed as a
                        module with which Module B interacts. At this point the
                        evaluator should approach the developer to resolve the
                        discrepancies between the information provided in Module A and
                        that in Module B.

                        Another example would be where the evaluator examines
                        the mapping of the TSFI to the modules as provided by
                        <xref id="adv_tds.4.2d" show="link"/>. This examination
                        shows that Module C is associated with an SFR requiring
                        identification of the user. Again, when the evaluator
                        examines the information associated with Module C, they
                        find that all the developer has provided is a purpose
                        and a set of interactions (thus implicitly categorising
                        Module C as SFR-non-interfering). Examining the purpose
                        and interactions presented for Module C, the evaluator
                        is unable to determine why Module C, listed as mapping
                        to a TSFI concerned with user identification, would not
                        be classified as SFR-enforcing or SFR-supporting. Again,
                        the evaluator should approach the developer to resolve
                        this discrepancy.

                        A final example illustrates the opposite situation. As
                        before, the developer has provided information
                        associated with Module D consisting of a purpose and a
                        set of interactions (thus implicitly categorising Module
                        D as SFR-non-interfering). The evaluator examines all of
                        the evidence provided, including the purpose and
                        interactions for Module D. The purpose appears to give a
                        meaningful description of Module D's function in the
                        TOE, the interactions are consistent with that
                        description, and there is nothing to indicate that
                        Module D is SFR-enforcing or SFR-supporting. In this
                        case, the evaluator should not demand more information
                        about Module D ``just be to sure'' it is correctly
                        categorised. The developer has met the obligations and
                        the resulting assurance the evaluator has in the
                        implicit categorisation of Module D is (by definition)
                        appropriate for this assurance level.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-14">
                        <ae-dc-element id="adv_tds.4.9c"/>

                        The evaluator shall examine the TOE design to determine
                        that the description of the purpose of each
                        SFR-non-interfering module is complete and
                        accurate.

                        The description of the purpose of a module indicates
                        what function the module is fulfilling. From the
                        description, the evaluator should be able to obtain a
                        general idea of the module's role. In order to assure
                        the description is complete, the evaluator uses the
                        information provided about the module's interactions
                        with other modules to assess whether the reasons for the
                        module being called are consistent with the module's
                        purpose. If the interaction description contains
                        functionality that is not apparent from, or in conflict
                        with, the module's purpose, the evaluator needs to
                        determine whether the problem is one of accuracy or of
                        completeness. The evaluator should be wary of purposes
                        that are too short, since meaningful analysis based on a
                        one-sentence purpose is likely to be impossible.

                        Because the modules are at such a low level, it may be difficult
                        determine completeness and accuracy impacts from other
                        documentation, such as operational user guidance, the functional
                        specification, the security architecture description, or the TSF
                        internals document. However, the evaluator uses the information
                        present in those documents to the extent possible to help ensure
                        that the function is accurately and completely described. This
                        analysis can be aided by the analysis performed for the work
                        units for the <xref id="adv_tds.4.10c" show="link"/> element,
                        which maps the TSFI in the functional specification to the
                        modules of the TSF.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-15">
                        <ae-dc-element id="adv_tds.4.9c"/>

                        The evaluator shall examine the TOE design to determine
                        that the description of a SFR-non-interfering module's
                        interaction with other modules is complete and
                        accurate.

                        It is important to note that, in terms of the Part 3
                        requirement and this work unit, the term
                        <italic>interaction</italic> is intended to convey less
                        rigour than <italic>interface</italic>. An interaction
                        does not need to be characterised at the implementation
                        level (e.g., parameters passed from one routine in a
                        module to a routine in a different module; global
                        variables; hardware signals (e.g., interrupts) from a
                        hardware subsystem to an interrupt-handling subsystem),
                        but the data elements identified for a particular module
                        that are going to be used by another module should be
                        covered in this discussion.  Any control relationships
                        between modules (e.g., a module responsible for
                        configuring a rule base for a firewall system and the
                        module that actually implements these rules) should also
                        be described.

                        A module's interaction with other modules can be captured in
                        many ways. The intent for the TOE design is to allow the
                        evaluator to understand (in part through analysis of module
                        interactions) the role of the SFR-supporting and
                        SFR-non-interfering modules in the overall TOE
                        design. Understanding of this role will aid the evaluator in
                        performing work unit <xref id="adv_tds.4-8" show="link"/>.

                        A module's interaction with other modules goes beyond
                        just a call-tree-type document. The interaction is
                        described from a functional perspective of why a module
                        interacts with other modules. The module's purpose
                        describes what functions the module provides to other
                        modules; the interactions should describe what the
                        module depends on from other modules in order to
                        accomplish this function.

                        Because the modules are at such a low level, it may be difficult
                        determine completeness and accuracy impacts from other
                        documentation, such as operational user guidance, the functional
                        specification, the security architecture description, or the TSF
                        internals document. However, the evaluator uses the information
                        present in those documents to the extent possible to help ensure
                        that the interactions are accurately and completely
                        described.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-16">
                        <ae-dc-element id="adv_tds.4.10c"/>

                        The evaluator shall examine the TOE design to determine
                        that it contains a complete and accurate mapping from
                        the TSFI described in the functional specification to
                        the modules of the TSF described in the TOE
                        design.

                        The modules described in the TOE design provide a
                        description of the implementation of the TSF. The TSFI
                        provide a description of how the implementation is
                        exercised. The evidence from the developer identifies
                        the module that is initially invoked when an operation
                        is requested at the TSFI, and identify the chain of
                        modules invoked up to the module that is primarily
                        responsible for implementing the functionality. However,
                        a complete call tree for each TSFI is not required for
                        this work unit. The cases in which more than one module
                        would have to be identified are where there are ``entry
                        point'' modules or wrapper modules that have no
                        functionality other than conditioning inputs or
                        de-multiplexing an input. Mapping to one of these
                        modules would not provide any useful information to the
                        evaluator.

                        The evaluator assesses the completeness of the mapping
                        by ensuring that all of the TSFI map to at least one
                        module. The verification of accuracy is more
                        complex.

                        The first aspect of accuracy is that each TSFI is mapped
                        to a module at the TSF boundary. This determination can
                        be made by reviewing the module description and its
                        interfaces/interactions. The next aspect of accuracy is
                        that each TSFI identifies a chain of modules between the
                        initial module identified and a module that is primarily
                        responsible for implementing the function presented at
                        the TSF. Note that this may be the initial module, or
                        there may be several modules, depending on how much
                        pre-conditioning of the inputs is done. It should be
                        noted that one indicator of a pre-conditioning module is
                        that it is invoked for a large number of the TSFI, where
                        the TSFI are all of similar type (e.g., system
                        call). The final aspect of accuracy is that the mapping
                        makes sense. For instance, mapping a TSFI dealing with
                        access control to a module that checks passwords is not
                        accurate. The evaluator should again use judgement in
                        making this determination. The goal is that this
                        information aids the evaluator in understanding the
                        system and implementation of the SFRs, and ways in which
                        entities at the TSF boundary can interact with the
                        TSF. The bulk of the assessment of whether the SFRs are
                        described accurately by the modules is performed in
                        other work units.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="adv_tds.4.2e">
                    The evaluator shall determine that the design is an accurate
                    and complete instantiation of all security functional
                    requirements.
                    <m-workunit id="adv_tds.4-17">

                        The evaluator shall examine the TOE security functional
                        requirements and the TOE design, to determine that all
                        ST security functional requirements are covered by the
                        TOE design.

                        The evaluator may construct a map between the TOE
                        security functional requirements and the TOE design.
                        This map will likely be from a functional requirement to
                        a set of subsystems, and later to modules. Note that this map may have to be
                        at a level of detail below the component or even element
                        level of the requirements, because of operations
                        (assignments, refinements, selections) performed on the
                        functional requirement by the ST author.

                        For example, the <xref id="fdp_acc.1" show="link"/>
                        component contains an element with assignments.  If the
                        ST contained, for instance, ten rules in the <xref id="fdp_acc.1" show="link"/> assignment, and these ten
                        rules were implemented in specific places within fifteen
                        modules, it would be inadequate for the evaluator to map
                        <xref id="fdp_acc.1" show="link"/> to one subsystem and
                        claim the work unit had been completed. Instead, the
                        evaluator would map <xref id="fdp_acc.1" show="link"/>
                        (rule 1) to modules x, y and z of subsystem A;
                        <xref id="fdp_acc.1" show="link"/> (rule 2) to x, p, and q of subsystem A; etc.
                    </m-workunit>
                    <m-workunit id="adv_tds.4-18">

                        The evaluator shall examine the TOE design to determine
                        that it is an accurate instantiation of all security
                        functional requirements.

                        The evaluator may construct a map between the TOE security
                        functional requirements and the TOE design.  This map will
                        likely be from a functional requirement to a set of
                        subsystems. Note that this map may have to be at a level of
                        detail below the component or even element level of the
                        requirements, because of operations (assignments, refinements,
                        selections) performed on the functional requirement by the ST
                        author.

                        As an example, if the ST requirements specified a
                        role-based access control mechanism, the evaluator would
                        first identify the subsystems, and modules that contribute to this
                        mechanism's implementation. This could be done by
                        in-depth knowledge or understanding of the TOE design or
                        by work done in the previous work unit. Note that this
                        trace is only to identify the subsystems, and modules, and is not the
                        complete analysis.

                        The next step would be to understand what mechanism the
                        subsystems, and modules implemented. For instance, if the design
                        described an implementation of access control based on
                        UNIX-style protection bits, the design would not be an
                        accurate instantiation of those access control
                        requirements present in the ST example used above. If
                        the evaluator could not determine that the mechanism was
                        accurately implemented because of a lack of detail, the
                        evaluator would have to assess whether all of the
                        SFR-enforcing subsystems and modules have been identified, or if
                        adequate detail had been provided for those subsystems and modules.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Complete semiformal modular design" id="adv_tds.5">
                <aco-hierarchical acomponent="adv_tds.4"/>
                <aco-dependsoncomponent acomponent="adv_fsp.5"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE design provides a description of the TOE in terms
                    of subsystems sufficient to determine the TSF boundary,
                    and provides a description of the TSF internals in terms
                    of modules (and optionally higher-level abstractions). It
                    provides a detailed description of all modules for the
                    evaluator to determine that the SFRs are completely and
                    accurately implemented; as such, the TOE design provides
                    an explanation of the implementation
                    representation.
                </msa-objectives>
                <msa-application-notes>

                    At this level, there is no differentiation of required
                    information according to SFR-relevance.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            security architecture description;
                        </item>
                        <item>
                            the TOE design;
                        </item>
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the implementation representation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_tds.5.1d">
                    The developer shall provide the design of the TOE.
                </ae-developer>
                <ae-developer id="adv_tds.5.2d">
                    The developer shall provide a mapping from the TSFI of the
                    functional specification to the lowest level of
                    decomposition available in the TOE design.
                </ae-developer>
                <ae-content id="adv_tds.5.1c">
                    The design shall describe the structure of the TOE in terms
                    of subsystems.
                </ae-content>
                <ae-content id="adv_tds.5.2c">
                    The design shall describe the TSF in terms of modules,
                    designating each module as SFR-enforcing,
                    SFR-supporting, or SFR-non-interfering.
                </ae-content>
                <ae-content id="adv_tds.5.3c">
                    The design shall identify all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.5.4c">
                    The design shall provide a semiformal description of each
                    subsystem of the TSF, supported by informal, explanatory text where
                    appropriate.
                </ae-content>
                <ae-content id="adv_tds.5.5c">
                    The design shall provide a description of the interactions among all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.5.6c">
                    The design shall provide a mapping from the subsystems of
                    the TSF to the modules of the TSF.
                </ae-content>
                <ae-content id="adv_tds.5.7c">
                    The design shall provide a semiformal description of each module
                    in terms of its purpose, interaction, interfaces, return values
                    from those interfaces, and called interfaces to other modules,
                    supported by informal, explanatory text where appropriate.
                </ae-content>
                <ae-content id="adv_tds.5.8c">
                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.
                </ae-content>
                <ae-evaluator id="adv_tds.5.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                </ae-evaluator>
                <ae-evaluator id="adv_tds.5.2e">
                    The evaluator shall determine that the design is an accurate
                    and complete instantiation of all security functional
                    requirements.  </ae-evaluator>
            </a-component>
            <a-component name="Complete semiformal modular design with formal             high-level design presentation" id="adv_tds.6">
                <aco-hierarchical acomponent="adv_tds.5"/>
                <aco-dependsoncomponent acomponent="adv_fsp.6"/>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            security architecture description;
                        </item>
                        <item>
                            the TOE design;
                        </item>
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the implementation representation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="adv_tds.6.1d">
                    The developer shall provide the design of the TOE.
                </ae-developer>
                <ae-developer id="adv_tds.6.2d">
                    The developer shall provide a mapping from the TSFI of the
                    functional specification to the lowest level of
                    decomposition available in the TOE design.
                </ae-developer>
                <ae-developer id="adv_tds.6.3d">
                    The developer shall provide a formal specification of the
                    TSF subsystems.
                </ae-developer>
                <ae-developer id="adv_tds.6.4d">
                    The developer shall provide a proof of correspondence
                    between the formal specifications of the TSF subsystems and
                    of the functional specification.
                </ae-developer>
                <ae-content id="adv_tds.6.1c">
                    The design shall describe the structure of the TOE in terms
                    of subsystems.
                </ae-content>
                <ae-content id="adv_tds.6.2c">
                    The design shall describe the TSF in terms of modules,
                    designating each module as SFR-enforcing,
                    SFR-supporting, or SFR-non-interfering.
                </ae-content>
                <ae-content id="adv_tds.6.3c">
                    The design shall identify all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.6.4c">
                    The design shall provide a semiformal description of each
                    subsystem of the TSF, supported by informal, explanatory text where
                    appropriate.
                </ae-content>
                <ae-content id="adv_tds.6.5c">
                    The design shall provide a description of the interactions among all subsystems of the TSF.
                </ae-content>
                <ae-content id="adv_tds.6.6c">
                    The design shall provide a mapping from the subsystems of
                    the TSF to the modules of the TSF.
                </ae-content>
                <ae-content id="adv_tds.6.7c">
                    The design shall describe each module in semiformal style in terms
                    of its purpose, interaction, interfaces, return values from those interfaces,
                    and called interfaces to other modules, supported by informal, explanatory
                    text where appropriate.
                </ae-content>
                <ae-content id="adv_tds.6.8c">
                    The formal specification of the TSF subsystems shall
                    describe the TSF using a formal style, supported by
                    informal, explanatory text where appropriate.
                </ae-content>
                <ae-content id="adv_tds.6.9c">
                    The mapping shall demonstrate that all TSFIs trace to the behaviour described in the TOE design that they invoke.
                </ae-content>
                <ae-content id="adv_tds.6.10c">
                    The proof of correspondence between the formal
                    specifications of the TSF subsystems and of the functional
                    specification shall demonstrate that all behaviour described
                    in the TOE design is a correct and complete refinement of
                    the TSFI that invoked it.
                </ae-content>
                <ae-evaluator id="adv_tds.6.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.  </ae-evaluator>
                <ae-evaluator id="adv_tds.6.2e">
                    The evaluator shall determine that the design is an accurate
                    and complete instantiation of all security functional
                    requirements.  </ae-evaluator>
            </a-component>
        </a-family>
    </a-class>
    <a-class name="Guidance documents" id="agd">
        <ac-introduction>

            The guidance documents class provides the requirements for
            guidance documentation for all user roles. For the secure
            preparation and operation of the TOE it is necessary to
            describe all relevant aspects for the secure handling of the
            TOE. The class also addresses the possibility of unintended
            incorrect configuration or handling of the TOE.

            In many cases it may be appropriate that guidance is provided
            in separate documents for preparation and operation of the
            TOE, or even separate for different user roles as end-users,
            administrators, application programmers using software or
            hardware interfaces, etc.

            The guidance documents class is subdivided into two families
            which are concerned with the preparative user guidance (what
            has to be done to transform the delivered TOE into its
            evaluated configuration in the operational environment as
            described in the ST) and with the operational user guidance
            (what has to be done during the operation of the TOE in its
            evaluated configuration).
        </ac-introduction>
        <ac-overview>

            Assurance class <xref show="title" id="agd"/> defines
            requirements directed at the understandability, coverage and
            completeness of the preparative and operational documentation
            provided by the developer. This documentation, which provides
            information for all user roles, is an important factor in the
            secure preparation and operation of the TOE.
        </ac-overview>
        <ma-introduction>

            The purpose of the guidance document activity is to judge the
            adequacy of the documentation describing how the user can
            handle the TOE in a secure manner. Such documentation should
            take into account the various types of users (e.g. those who
            accept, install, administrate or operate the TOE) whose
            incorrect actions could adversely affect the security of the
            TOE or of their own data.

            The guidance documents class is subdivided into two families
            which are concerned firstly with the preparative procedures
            (all that has to be done to transform the delivered TOE into
            its evaluated configuration in the environment as described in
            the ST, i.e. accepting and installing the TOE) and secondly
            with the operational user guidance (all that has to be done
            during the operation of the TOE in its evaluated
            configuration, i.e. operation and administration).
        </ma-introduction>
        <ma-application-notes>

            The guidance documents activity applies to those functions and
            interfaces which are related to the security of the TOE. The
            secure configuration of the TOE is described in the ST.
        </ma-application-notes>
        <a-family name="Operational user guidance" id="agd_ope">
            <af-objectives>

                Operational user guidance refers to written material that is
                intended to be used by all types of users of the TOE in its
                evaluated configuration: end-users, persons responsible for
                maintaining and administering the TOE in a correct manner
                for maximum security, and by others (e.g. programmers) using
                the TOE's external interfaces. Operational user guidance
                describes the security functionality provided by the TSF,
                provides instructions and guidelines (including warnings),
                helps to understand the TSF and includes the
                security-critical information, and the security-critical
                actions required, for its secure use.  Misleading and
                unreasonable guidance should be absent from the guidance
                documentation, and secure procedures for all modes of
                operation should be addressed.  Insecure states should be
                easy to detect.

                The operational user guidance provides a measure of
                confidence that non-malicious users, administrators,
                application providers and others exercising the external
                interfaces of the TOE will understand the secure operation
                of the TOE and will use it as intended. The evaluation of
                the user guidance includes investigating whether the TOE can
                be used in a manner that is insecure but that the user of
                the TOE would reasonably believe to be secure. The objective
                is to minimise the risk of human or other errors in
                operation that may deactivate, disable, or fail to activate
                security functionality, resulting in an undetected insecure
                state.
            </af-objectives>
            <af-overview>

                Requirements for operational user guidance help ensure that
                all types of users are able to operate the TOE in a secure
                manner (e.g. the usage constraints assumed by the PP or ST
                must be clearly explained and illustrated). It should be
                excluded that the TOE can be used in a manner that is
                insecure but that the user of the TOE would reasonably
                believe to be secure. Operational user guidance is the
                primary vehicle available to the developer for providing the
                TOE users with the necessary background and specific
                information on how to correctly use the TOE's protection
                functions.

                Operational user guidance must do two things. First, it
                needs to explain what the security functionality accessible
                by the user does and how it is to be used, so that users are
                able to consistently and effectively protect their
                information.  Second, it needs to explain the user's role in
                maintaining the TOE's security.
            </af-overview>
            <af-levelling-criteria>

                This family contains only one component.
            </af-levelling-criteria>
            <af-application-notes>

                There may be different user roles or groups that are
                recognised by the TOE and that can interact with the
                TSF. These user roles and groups should be taken into
                consideration by the operational user guidance. They may be
                roughly grouped into administrators and non-administrative
                users, or more specifically grouped into persons responsible
                for receiving, accepting, installing and maintaining the
                TOE, application programmers, revisors, auditors,
                daily-management, end-users. Each role can encompass an
                extensive set of capabilities, or can be a single
                one.

                The requirement <xref show="title" id="agd_ope.1.1c"/>
                encompasses the aspect that any warnings to the users during
                operation of a TOE with regard to the security problem
                definition and the security objectives for the operational
                environment described in the PP/ST are appropriately covered
                in the user guidance.

                The concept of secure values, as employed in <xref show="title" id="agd_ope.1.3c"/>, has relevance where a user
                has control over security parameters. Guidance needs to be
                provided on secure and insecure settings for such
                parameters.

                <xref show="title" id="agd_ope.1.4c"/> requires that the
                user guidance describes the appropriate reactions to all
                security-relevant events. Although many security-relevant
                events are the result of performing functions, this need not
                always be the case (e.g. the audit log fills up, an
                intrusion is detected).  Furthermore, a security-relevant
                event may happen as a result of a specific chain of
                functions or, conversely, several security-relevant events
                may be triggered by one function.

                <xref show="title" id="agd_ope.1.7c"/> requires that the
                user guidance is clear and reasonable. Misleading or
                unreasonable guidance may result in a user of the TOE
                believing that the TOE is secure when it is not.

                An example of misleading guidance would be the description
                of a single guidance instruction that could be parsed in
                more than one way, one of which may result in an insecure
                state.

                An example of unreasonable guidance would be a
                recommendation to follow a procedure that is so complicated
                that it cannot reasonably be expected that users will follow
                this guidance.
            </af-application-notes>
            <a-component name="Operational user guidance" id="agd_ope.1">
                <aco-dependsoncomponent acomponent="adv_fsp.1"/>
                <msa-objectives>

                    The objectives of this sub-activity are to determine
                    whether the user guidance describes for each user role the
                    security functionality and interfaces provided by the TSF,
                    provides instructions and guidelines for the secure use of
                    the TOE, addresses secure procedures for all modes of
                    operation, facilitates prevention and detection of
                    insecure TOE states, or whether it is misleading or
                    unreasonable.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design, if applicable;
                        </item>
                        <item>
                            the user guidance;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="agd_ope.1.1d">
                    The developer shall provide operational user guidance.
                </ae-developer>
                <ae-content id="agd_ope.1.1c">
                    The operational user guidance shall describe, for each user
                    role, the user-accessible functions and privileges that
                    should be controlled in a secure processing environment,
                    including appropriate warnings.
                </ae-content>
                <ae-content id="agd_ope.1.2c">
                    The operational user guidance shall describe, for each user
                    role, how to use the available interfaces provided by the
                    TOE in a secure manner.
                </ae-content>
                <ae-content id="agd_ope.1.3c">
                    The operational user guidance shall describe, for each user
                    role, the available functions and interfaces, in particular
                    all security parameters under the control of the user,
                    indicating secure values as appropriate.
                </ae-content>
                <ae-content id="agd_ope.1.4c">
                    The operational user guidance shall, for each user role,
                    clearly present each type of security-relevant event
                    relative to the user-accessible functions that need to be
                    performed, including changing the security characteristics
                    of entities under the control of the TSF.
                </ae-content>
                <ae-content id="agd_ope.1.5c">
                    The operational user guidance shall identify all possible
                    modes of operation of the TOE (including operation following
                    failure or operational error), their consequences and
                    implications for maintaining secure operation.
                </ae-content>
                <ae-content id="agd_ope.1.6c">
                    The operational user guidance shall, for each user role,
                    describe the security measures to be followed in order to
                    fulfil the security objectives for the operational
                    environment as described in the ST.
                </ae-content>
                <ae-content id="agd_ope.1.7c">
                    The operational user guidance shall be clear and reasonable.
                </ae-content>
                <ae-evaluator id="agd_ope.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="agd_ope.1.1c"/>

                        The evaluator shall examine the operational user
                        guidance to determine that it describes, for each user
                        role, the user-accessible functions and privileges that
                        should be controlled in a secure processing environment,
                        including appropriate warnings.

                        The configuration of the TOE may allow different user
                        roles to have dissimilar privileges in making use of the
                        different functions of the TOE. This means that some
                        users are authorised to perform certain functions, while
                        other users may not be so authorised. These functions
                        and privileges should be described, for each user role,
                        by the user guidance.

                        The user guidance identifies, for each user role, the
                        functions and privileges that must be controlled, the
                        types of commands required for them, and the reasons for
                        such commands. The user guidance should contain warnings
                        regarding the use of these functions and
                        privileges. Warnings should address expected effects,
                        possible side effects, and possible interactions with
                        other functions and privileges.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="agd_ope.1.2c"/>

                        The evaluator shall examine the operational user
                        guidance to determine that it describes, for each user
                        role, the secure use of the available interfaces
                        provided by the TOE.

                        The user guidance should provide advice regarding
                        effective use of the TSF (e.g. reviewing password
                        composition practises, suggested frequency of user file
                        backups, discussion on the effects of changing user
                        access privileges).
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="agd_ope.1.3c"/>

                        The evaluator shall examine the operational user
                        guidance to determine that it describes, for each user
                        role, the available security functionality and
                        interfaces, in particular all security parameters under
                        the control of the user, indicating secure values as
                        appropriate.

                        The user guidance should contain an overview of the
                        security functionality that is visible at the user
                        interfaces.

                        The user guidance should identify and describe the
                        purpose, behaviour, and interrelationships of the
                        security interfaces and functionality.

                        For each user-accessible interface, the user guidance
                        should:
                        <list type="enumerated">
                            <item>
                                describe the method(s) by which the interface is
                                invoked (e.g. command-line, programming-language
                                system call, menu selection, command button);
                            </item>
                            <item>
                                describe the parameters to be set by the user, their
                                particular purposes, valid and default values, and
                                secure and insecure use settings of such parameters,
                                both individually or in combination;
                            </item>
                            <item>
                                describe the immediate TSF response, message, or
                                code returned.
                            </item>
                        </list>

                        The evaluator should consider the functional
                        specification and the ST to determine that the TSF
                        described in these documents is consistent to the
                        operational user guidance. The evaluator has to ensure
                        that the operational user guidance is complete to allow
                        the secure use through the TSFI available to all types
                        of human users. The evaluator may, as an aid, prepare an
                        informal mapping between the guidance and these
                        documents. Any omissions in this mapping may indicate
                        incompleteness.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="agd_ope.1.4c"/>

                        The evaluator shall examine the operational user
                        guidance to determine that it describes, for each user
                        role, each type of security-relevant event relative to
                        the user functions that need to be performed, including
                        changing the security characteristics of entities under
                        the control of the TSF and operation following failure
                        or operational error.

                        All types of security-relevant events are detailed for
                        each user role, such that each user knows what events
                        may occur and what action (if any) he may have to take
                        in order to maintain security.  Security-relevant events
                        that may occur during operation of the TOE (e.g. audit
                        trail overflow, system crash, updates to user records,
                        such as when a user account is removed when the user
                        leaves the organisation) are adequately defined to allow
                        user intervention to maintain secure operation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="agd_ope.1.5c"/>

                        The evaluator shall examine the operational user
                        guidance and other evaluation evidence to determine that
                        the guidance identifies all possible modes of operation
                        of the TOE (including, if applicable, operation
                        following failure or operational error), their
                        consequences and implications for maintaining secure
                        operation.

                        Other evaluation evidence, particularly the functional
                        specification, provide an information source that the
                        evaluator should use to determine that the guidance
                        contains sufficient guidance information.

                        If test documentation is included in the assurance
                        package, then the information provided in this evidence
                        can also be used to determine that the guidance contains
                        sufficient guidance documentation. The detail provided
                        in the test steps can be used to confirm that the
                        guidance provided is sufficient for the use and
                        administration of the TOE.

                        The evaluator should focus on a single human visible
                        TSFI at a time, comparing the guidance for securely
                        using the TSFI with other evaluation evidence, to
                        determine that the guidance related to the TSFI is
                        sufficient for the secure usage (i.e. consistent with
                        the SFRs) of that TSFI. The evaluator should also
                        consider the relationships between interfaces, searching
                        for potential conflicts.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="agd_ope.1.6c"/>

                        The evaluator shall examine the operational user
                        guidance to determine that it describes, for each user
                        role, the security measures to be followed in order to
                        fulfil the security objectives for the operational
                        environment as described in the ST.

                        The evaluator analyses the security objectives for the
                        operational environment in the ST and determines that
                        for each user role, the relevant security measures are
                        described appropriately in the user guidance.

                        The security measures described in the user guidance
                        should include all relevant external procedural,
                        physical, personnel and connectivity measures.

                        Note that those measures relevant for secure
                        installation of the TOE are examined in <xref show="title" id="agd_pre"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="agd_ope.1.7c"/>

                        The evaluator shall examine the operational user
                        guidance to determine that it is clear.

                        The guidance is unclear if it can reasonably be
                        misconstrued by an administrator or user, and used in a
                        way detrimental to the TOE, or to the security provided
                        by the TOE.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="agd_ope.1.7c"/>

                        The evaluator shall examine the operational user
                        guidance to determine that it is reasonable.

                        The guidance is unreasonable if it makes demands on the
                        TOE's usage or operational environment that are
                        inconsistent with the ST or unduly onerous to maintain
                        security.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Preparative procedures" id="agd_pre">
            <af-objectives>

                Preparative procedures are useful for ensuring that the TOE
                has been received and installed in a secure manner as
                intended by the developer. The requirements for preparation
                call for a secure transition from the delivered TOE to its
                initial operational environment. This includes investigating
                whether the TOE can be configured or installed in a manner
                that is insecure but that the user of the TOE would
                reasonably believe to be secure.
            </af-objectives>
            <af-overview>

                Preparation requires that the delivered copy of the TOE is
                accepted, configured and activated by the user to exhibit
                the protection properties as needed during operation of the
                TOE. The preparative procedures provide confidence that the
                user will be aware of the TOE configuration parameters and
                how they can affect the TSF.
            </af-overview>
            <af-levelling-criteria>

                This family contains only one component.
            </af-levelling-criteria>
            <af-application-notes>

                It is recognised that the application of these requirements
                will vary depending on aspects such as whether the TOE is
                delivered in an operational state, or whether it has to be
                installed at the TOE owner's site, etc.

                The first process covered by the preparative procedures is
                the consumer's secure acceptance of the received TOE in
                accordance with the developer's delivery procedures. If the
                developer has not defined delivery procedures, security of
                the acceptance has to be ensured otherwise.

                Installation of the TOE includes transforming its
                operational environment into a state that conforms to the
                security objectives for the operational environment provided
                in the ST.

                It might also be the case that no installation is necessary,
                for example a smart card. In this case it may be
                inappropriate to require and analyse installation
                procedures.

                The requirements in this assurance family are presented
                separately from those in the <xref show="title" id="agd_ope"/> family, due to the infrequent, possibly
                one-time use of the preparative procedures.
            </af-application-notes>
            <a-component name="Preparative procedures" id="agd_pre.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the procedures and steps for the secure preparation of the
                    TOE have been documented and result in a secure
                    configuration.
                </msa-objectives>
                <msa-application-notes>

                    The preparative procedures refer to all acceptance and
                    installation procedures, that are necessary to progress
                    the TOE to the secure configuration as described in the
                    ST.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the TOE including its preparative procedures;
                        </item>
                        <item>
                            the description of developer's delivery procedures, if
                            applicable;
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="agd_pre.1.1d">
                    The developer shall provide the TOE including its
                    preparative procedures.
                </ae-developer>
                <ae-content id="agd_pre.1.1c"> The preparative procedures
                    shall describe all the steps necessary for secure acceptance
                    of the delivered TOE in accordance with the developer's
                    delivery procedures.
                </ae-content>
                <ae-content id="agd_pre.1.2c"> The preparative procedures
                    shall describe all the steps necessary for secure
                    installation of the TOE and for the secure preparation of
                    the operational environment in accordance with the security
                    objectives for the operational environment as described in
                    the ST.
                </ae-content>
                <ae-evaluator id="agd_pre.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.

                    <m-workunit id="agd_pre.1-1">
                        <ae-dc-element id="agd_pre.1.1c"/>

                        The evaluator shall examine the provided acceptance
                        procedures to determine that they describe the steps
                        necessary for secure acceptance of the TOE in accordance
                        with the developer's delivery procedures.
                        If it is not anticipated by the developer's delivery
                        procedures that acceptance procedures will or can be
                        applied, this work unit is not applicable, and is
                        therefore considered to be satisfied.

                        The acceptance procedures should include as a minimum,
                        that the user has to check that all parts of the TOE as
                        indicated in the ST have been delivered in the correct
                        version.

                        The acceptance procedures should reflect the steps the
                        user has to perform in order to accept the delivered TOE
                        that are implied by the developer's delivery
                        procedures.

                        The acceptance procedures should provide detailed
                        information about the following, if applicable:
                        <list type="enumerated">
                            <item>
                                making sure that the delivered TOE is the complete
                                evaluated instance;
                            </item>
                            <item>
                                detecting modification/masquerading of the delivered
                                TOE.
                            </item>
                        </list>
                    </m-workunit>

                    <m-workunit id="agd_pre.1-2">
                        <ae-dc-element id="agd_pre.1.2c"/>

                        The evaluator shall examine the provided installation
                        procedures to determine that they describe the steps
                        necessary for secure installation of the TOE and the
                        secure preparation of the operational environment in
                        accordance with the security objectives in the
                        ST.

                        If it is not anticipated that installation procedures
                        will or can be applied (e.g. because the TOE may already
                        be delivered in an operational state), this work unit is
                        not applicable, and is therefore considered to be
                        satisfied.

                        The installation procedures should provide detailed
                        information about the following, if applicable:
                        <list type="enumerated">
                            <item>
                                minimum system requirements for secure installation;
                            </item>
                            <item>
                                requirements for the operational environment in
                                accordance with the security objectives provided by
                                the ST;
                            </item><item>
                            the steps the user has to perform in order to get to an
                            operational TOE being commensurate with its evaluated
                            configuration.  Such a description shall include - for each step
                            - a clear scheme for the decision on the next step depended on
                            success, failure or problems at the current step;
                        </item>
                            <item>
                                changing the installation specific security
                                characteristics of entities under the control of the
                                TSF (for example parameters, settings, passwords);
                            </item>
                            <item>
                                handling exceptions and problems.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="agd_pre.1.2e">
                    The evaluator shall apply the preparative procedures to
                    confirm that the TOE can be prepared securely for operation.
                    <m-workunit id="agd_pre.1-3">

                        The evaluator shall perform all user procedures
                        necessary to prepare the TOE to determine that the TOE
                        and its operational environment can be prepared securely
                        using only the supplied preparative procedures.
                        Preparation requires the evaluator to advance the
                        TOE from a deliverable state to the state in which it is
                        operational, including acceptance and installation of
                        the TOE, and enforcing the SFRs consistent with the
                        security objectives for the TOE specified in the
                        ST.

                        The evaluator should follow only the developer's
                        procedures and may perform the activities that customers
                        are usually expected to perform to accept and install
                        the TOE, using the supplied preparative procedures only.
                        Any difficulties encountered during such an exercise may
                        be indicative of incomplete, unclear or unreasonable guidance.

                        This work unit may be performed in conjunction with the
                        evaluation activities under <xref id="ate_ind" show="link"/>.

                        If it is known that the TOE will be used as a dependent
                        component for a composed TOE evaluation, then the
                        evaluator should ensure that the operational environment
                        is satisfied by the base component used in the composed
                        TOE.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
    </a-class>
    <a-class name="Life-cycle support" id="alc">
        <ac-introduction>

            Life-cycle support is an aspect of establishing discipline and
            control in the processes of refinement of the TOE during its
            development and maintenance. Confidence in the correspondence
            between the TOE security requirements and the TOE is greater
            if security analysis and the production of the evidence are
            done on a regular basis as an integral part of the development
            and maintenance activities.

            In the product life-cycle it is distinguished whether the TOE
            is under the responsibility of the developer or the user
            rather than whether it is located in the development or user
            environment. The point of transition is the moment where the
            TOE is handed over to the user. This is also the point of
            transition from the <xref show="id" id="alc"/> to the <xref show="id" id="agd"/> class.

            The <xref show="id" id="alc"/> class consists of seven
            families. <xref show="title" id="alc_lcd"/> is the high-level
            description of the TOE life-cycle; <xref show="title" id="alc_cmc"/> a more detailed description of the management
            of the configuration items. <xref show="title" id="alc_cms"/>
            requires a minimum set of configuration items to be managed in
            the defined way.  <xref show="title" id="alc_dvs"/> is
            concerned with the developer's physical, procedural,
            personnel, and other security measures; <xref show="title" id="alc_tat"/> with the development tools and implementation
            standards used by the developer; <xref show="title" id="alc_flr"/> with the handling of security flaws. <xref show="title" id="alc_del"/> defines the procedures used for
            the delivery of the TOE to the consumer. Delivery processes
            occurring during the development of the TOE are denoted rather
            as transportations, and are handled in the context of
            integration and acceptance procedures in other families of
            this class.

            Throughout this class, development and related terms
            (developer, develop) are meant in the more general sense to
            comprise development <italic>and production</italic>, whereas
            production specifically means the process of transforming the
            implementation representation into the final TOE.
        </ac-introduction>
        <ac-overview>

            Assurance class <xref show="title" id="alc"/> defines
            requirements for assurance through the adoption of a well
            defined life-cycle model for all the steps of the TOE
            development, including flaw remediation procedures and
            policies, correct use of tools and techniques and the security
            measures used to protect the development environment.

            Configuration management (CM) helps to ensure that the
            integrity of the TOE is preserved, by preventing unauthorised
            modifications, additions, or deletions to the TOE, thus
            providing assurance that the TOE and documentation used for
            evaluation are the ones prepared for distribution.

            The delivery procedures define requirements for the measures,
            procedures, and standards concerned with secure delivery of
            the TOE, ensuring that the security protection offered by the
            TOE is not compromised during the transfer to the user.
        </ac-overview>
        <ma-introduction>

            The purpose of the life-cycle support activity is to determine
            the adequacy of the security procedures that the developer
            uses during the development and maintenance of the TOE. These
            procedures include the life-cycle model used by the developer,
            the configuration management, the security measures used
            throughout TOE development, the tools used by the developer
            throughout the life-cycle of the TOE, the handling of security
            flaws, and the delivery activity.

            Poorly controlled development and maintenance of the TOE can
            result in vulnerabilities in the implementation. Conformance
            to a defined life-cycle model can help to improve controls in
            this area. A measurable life-cycle model used for the TOE can
            remove ambiguity in assessing the development progress of the
            TOE.

            The purpose of the configuration management activity is to
            assist the consumer in identifying the evaluated TOE, to
            ensure that configuration items are uniquely identified, and
            the adequacy of the procedures that are used by the developer
            to control and track changes that are made to the TOE. This
            includes details on what changes are tracked, how potential
            changes are incorporated, and the degree to which automation
            is used to reduce the scope for error.

            Developer security procedures are intended to protect the TOE
            and its associated design information from interference or
            disclosure. Interference in the development process may allow
            the deliberate introduction of vulnerabilities. Disclosure of
            design information may allow vulnerabilities to be more easily
            exploited. The adequacy of the procedures will depend on the
            nature of the TOE and the development process.

            The use of well-defined development tools and the application
            of implementation standards by the developer and by third
            parties involved in the development process help to ensure
            that vulnerabilities are not inadvertently introduced during
            refinement.

            The flaw remediation activity is intended to track security
            flaws, to identify corrective actions, and to distribute the
            corrective action information to TOE users.

            The purpose of the delivery activity is to judge the adequacy
            of the documentation of the procedures used to ensure that the
            TOE is delivered to the consumer without modification.
        </ma-introduction>
        <a-family name="CM capabilities" id="alc_cmc">
            <af-objectives>

                Configuration management (CM) is one means for increasing
                assurance that the TOE meets the SFRs. CM establishes this
                by requiring discipline and control in the processes of
                refinement and modification of the TOE and the related
                information. CM systems are put in place to ensure the
                integrity of the portions of the TOE that they control, by
                providing a method of tracking any changes, and by ensuring
                that all changes are authorised.

                The objective of this family is to require the developer's
                CM system to have certain capabilities. These are meant to
                reduce the likelihood that accidental or unauthorised
                modifications of the configuration items will occur. The CM
                system should ensure the integrity of the TOE from the early
                design stages through all subsequent maintenance
                efforts.

                The objective of introducing automated CM tools is to
                increase the effectiveness of the CM system. While both
                automated and manual CM systems can be bypassed, ignored, or
                proven insufficient to prevent unauthorised modification,
                automated systems are less susceptible to human error or
                negligence.

                The objectives of this family include the following:
                <list type="enumerated">
                    <item>
                        ensuring that the TOE is correct and complete before it
                        is sent to the consumer;
                    </item>
                    <item>
                        ensuring that no configuration items are missed during
                        evaluation;
                    </item>
                    <item>
                        preventing unauthorised modification, addition, or
                        deletion of TOE configuration items.
                    </item>
                </list>
            </af-objectives>
            <af-overview>

                Configuration management capabilities define the
                characteristics of the configuration management
                system.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                the CM system capabilities, the scope of the CM
                documentation and the evidence provided by the
                developer.
            </af-levelling-criteria>
            <af-application-notes>

                While it is desired that CM be applied from the early design
                stages and continue into the future, this family requires
                that CM be in place and in use prior to the end of the
                evaluation.

                In the case where the TOE is a subset of a product, the
                requirements of this family apply only to the TOE
                configuration items, not to the product as a whole.

                For developers that have separate CM systems for different
                life-cycle phases (for example development, production
                and/or the final product), it is required to document all of
                them. For evaluation purposes, the separate CM systems
                should be regarded as parts of an overall CM system which is
                addressed in the criteria.

                Similarly, if parts of the TOE are produced by different
                developers or at different sites, the CM systems being in
                use at the different places should be regarded as parts of
                an overall CM system which is addressed in the criteria.  In
                this situation, integration aspects have also to be taken
                into account.

                Several elements of this family refer to configuration
                items. These elements identify CM requirements to be imposed
                on all items identified in the configuration list, but leave
                the contents of the list to the discretion of the
                developer. <xref show="title" id="alc_cms"/> can be used to
                narrow this discretion by identifying specific items that
                must be included in the configuration list, and hence
                covered by CM.

                <xref show="title" id="alc_cmc.2.3c"/> introduces a
                requirement that the CM system uniquely identify all
                configuration items. This also requires that modifications
                to configuration items result in a new, unique identifier
                being assigned to the configuration item.

                <xref show="title" id="alc_cmc.3.8c"/> introduces the
                requirement that the evidence shall demonstrate that the CM
                system operates in accordance with the CM plan. Examples of
                such evidence might be documentation such as screen
                snapshots or audit trail output from the CM system, or a
                detailed demonstration of the CM system by the
                developer. The evaluator is responsible for determining that
                this evidence is sufficient to show that the CM system
                operates in accordance with the CM plan.

                <xref show="title" id="alc_cmc.4.5c"/> introduces a
                requirement that the CM system provide an automated means to
                support the production of the TOE. This requires that the CM
                system provide an automated means to assist in determining
                that the correct configuration items are used in generating
                the TOE.

                <xref show="title" id="alc_cmc.5.10c"/> introduces a
                requirement that the CM system provide an automated means to
                ascertain the changes between the TOE and its preceding
                version. If no previous version of the TOE exists, the
                developer still needs to provide an automated means to
                ascertain the changes between the TOE and a future version
                of the TOE.
            </af-application-notes>
            <a-component name="Labelling of the TOE" id="alc_cmc.1">
                <aco-dependsoncomponent acomponent="alc_cms.1"/>
                <aco-objectives>

                    A unique reference is required to ensure that there is no
                    ambiguity in terms of which instance of the TOE is being
                    evaluated. Labelling the TOE with its reference ensures
                    that users of the TOE can be aware of which instance of
                    the TOE they are using.
                </aco-objectives>
                <msa-objectives>

                    The objectives of this sub-activity are to determine
                    whether the developer has clearly identified the
                    TOE.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the TOE suitable for testing.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cmc.1.1d">
                    The developer shall provide the TOE and a reference for the
                    TOE.
                </ae-developer>
                <ae-content id="alc_cmc.1.1c">
                    The TOE shall be labelled with its unique reference.
                </ae-content>
                <ae-evaluator id="alc_cmc.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.1.1c"/>

                        The evaluator shall check that the TOE provided for
                        evaluation is labelled with its reference.

                        The evaluator should ensure that the TOE contains the
                        unique reference which is stated in the ST. This could
                        be achieved through labelled packaging or media, or by a
                        label displayed by the operational TOE. This is to
                        ensure that it would be possible for consumers to
                        identify the TOE (e.g. at the point of purchase or
                        use).

                        The TOE may provide a method by which it can be easily
                        identified. For example, a software TOE may display its
                        name and version number during the start up routine, or
                        in response to a command line entry. A hardware or
                        firmware TOE may be identified by a part number
                        physically stamped on the TOE.

                        Alternatively, the unique reference provided for the TOE
                        may be the combination of the unique reference of each
                        component from which the TOE is comprised (e.g. in the
                        case of a composed TOE).
                    </m-workunit>
                    <m-workunit>

                        The evaluator shall check that the TOE references used
                        are consistent.

                        If the TOE is labelled more than once then the labels
                        have to be consistent. For example, it should be
                        possible to relate any labelled guidance documentation
                        supplied as part of the TOE to the evaluated operational
                        TOE. This ensures that consumers can be confident that
                        they have purchased the evaluated version of the TOE,
                        that they have installed this version, and that they
                        have the correct version of the guidance to operate the
                        TOE in accordance with its ST.

                        The evaluator also verifies that the TOE reference is
                        consistent with the ST.

                        If this work unit is applied to a composed TOE, the
                        following will apply. The composed IT TOE will not be
                        labelled with its unique (composite) reference, but only
                        the individual components will be labelled with their
                        appropriate TOE reference.  It would require further
                        development for the IT TOE to be labelled, i.e. during
                        start-up and/or operation, with the composite reference.
                        If the composed TOE is delivered as the constituent
                        component TOEs, then the TOE items delivered will not
                        contain the composite reference.  However, the composed
                        TOE ST will include the unique reference for the
                        composed TOE and will identify the components comprising
                        the composed TOE through which the consumers will be
                        able to determine whether they have the appropriate
                        items.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Use of a CM system" id="alc_cmc.2">
                <aco-hierarchical acomponent="alc_cmc.1"/>
                <aco-dependsoncomponent acomponent="alc_cms.1"/>
                <aco-objectives>

                    A unique reference is required to ensure that there is no
                    ambiguity in terms of which instance of the TOE is being
                    evaluated. Labelling the TOE with its reference ensures
                    that users of the TOE can be aware of which instance of
                    the TOE they are using.

                    Unique identification of the configuration items leads to
                    a clearer understanding of the composition of the TOE,
                    which in turn helps to determine those items which are
                    subject to the evaluation requirements for the TOE.

                    The use of a CM system increases assurance that the
                    configuration items are maintained in a controlled
                    manner.
                </aco-objectives>
                <msa-objectives>

                    The objectives of this sub-activity are to determine
                    whether the developer uses a CM system that uniquely
                    identifies all configuration items.
                </msa-objectives>
                <msa-application-notes>

                    This component contains an implicit evaluator action to
                    determine that the CM system is being used. As the
                    requirements here are limited to identification of the TOE
                    and provision of a configuration list, this action is
                    already covered by, and limited to, the existing work
                    units. At <xref show="title" id="alc_cmc.3"/> the
                    requirements are expanded beyond these two items, and more
                    explicit evidence of operation is required.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the TOE suitable for testing;
                        </item>
                        <item>
                            the configuration management documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cmc.2.1d">
                    The developer shall provide the TOE and a reference for the
                    TOE.
                </ae-developer>
                <ae-developer id="alc_cmc.2.2d">
                    The developer shall provide the CM documentation.
                </ae-developer>
                <ae-developer id="alc_cmc.2.3d">
                    The developer shall use a CM system.
                </ae-developer>
                <ae-content id="alc_cmc.2.1c">
                    The TOE shall be labelled with its unique reference.
                </ae-content>
                <ae-content id="alc_cmc.2.2c">
                    The CM documentation shall describe the method used to
                    uniquely identify the configuration items.
                </ae-content>
                <ae-content id="alc_cmc.2.3c">
                    The CM system shall uniquely identify all configuration
                    items.
                </ae-content>
                <ae-evaluator id="alc_cmc.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.2.1c"/>

                        The evaluator shall check that the TOE provided for
                        evaluation is labelled with its reference.

                        The evaluator should ensure that the TOE contains the
                        unique reference which is stated in the ST. This could
                        be achieved through labelled packaging or media, or by a
                        label displayed by the operational TOE. This is to
                        ensure that it would be possible for consumers to
                        identify the TOE (e.g. at the point of purchase or
                        use).

                        The TOE may provide a method by which it can be easily
                        identified. For example, a software TOE may display its
                        name and version number during the start up routine, or
                        in response to a command line entry. A hardware or
                        firmware TOE may be identified by a part number
                        physically stamped on the TOE.

                        Alternatively, the unique reference provided for the TOE
                        may be the combination of the unique reference of each
                        component from which the TOE is comprised (e.g. in the
                        case of a composed TOE).
                    </m-workunit>
                    <m-workunit>

                        The evaluator shall check that the TOE references used
                        are consistent.

                        If the TOE is labelled more than once then the labels
                        have to be consistent. For example, it should be
                        possible to relate any labelled guidance documentation
                        supplied as part of the TOE to the evaluated operational
                        TOE. This ensures that consumers can be confident that
                        they have purchased the evaluated version of the TOE,
                        that they have installed this version, and that they
                        have the correct version of the guidance to operate the
                        TOE in accordance with its ST.

                        The evaluator also verifies that the TOE reference is
                        consistent with the ST.

                        If this work unit is applied to a composed TOE, the
                        following will apply. The composed IT TOE will not be
                        labelled with its unique (composite) reference, but only
                        the individual components will be labelled with their
                        appropriate TOE reference.  It would require further
                        development for the IT TOE to be labelled, i.e. during
                        start-up and/or operation, with the composite reference.
                        If the composed TOE is delivered as the constituent
                        component TOEs, then the TOE items delivered will not
                        contain the composite reference.  However, the composed
                        TOE ST will include the unique reference for the
                        composed TOE and will identify the components comprising
                        the composed TOE through which the consumers will be
                        able to determine whether they have the appropriate
                        items.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.2.2c"/>

                        The evaluator shall examine the method of identifying
                        configuration items to determine that it describes how
                        configuration items are uniquely identified.

                        Procedures should describe how the status of each
                        configuration item can be tracked throughout the
                        life-cycle of the TOE. The procedures may be detailed in
                        the CM plan or throughout the CM documentation. The
                        information included should describe:
                        <list type="enumerated">
                            <item>
                                the method how each configuration item is uniquely
                                identified, such that it is possible to track
                                versions of the same configuration item;</item>
                            <item>
                                the method how configuration items are assigned
                                unique identifiers and how they are entered into the
                                CM system;</item>
                            <item>
                                the method to be used to identify superseded
                                versions of a configuration item.</item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.2.3c"/>

                        The evaluator shall examine the configuration items to
                        determine that they are identified in a way that is
                        consistent with the CM documentation.
                        Assurance that the CM system uniquely identifies
                        all configuration items is gained by examining the
                        identifiers for the configuration items. For both
                        configuration items that comprise the TOE, and drafts of
                        configuration items that are submitted by the developer
                        as evaluation evidence, the evaluator confirms that each
                        configuration item possesses a unique identifier in a
                        manner consistent with the unique identification method
                        that is described in the CM documentation.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Authorisation controls" id="alc_cmc.3">
                <aco-hierarchical acomponent="alc_cmc.2"/>
                <aco-dependsoncomponent acomponent="alc_cms.1"/>
                <aco-dependsoncomponent acomponent="alc_dvs.1"/><aco-dependsoncomponent acomponent="alc_lcd.1"/>
                <aco-objectives>

                    A unique reference is required to ensure that there is no
                    ambiguity in terms of which instance of the TOE is being
                    evaluated. Labelling the TOE with its reference ensures
                    that users of the TOE can be aware of which instance of
                    the TOE they are using.

                    Unique identification of the configuration items leads to
                    a clearer understanding of the composition of the TOE,
                    which in turn helps to determine those items which are
                    subject to the evaluation requirements for the TOE.

                    The use of a CM system increases assurance that the
                    configuration items are maintained in a controlled
                    manner.

                    Providing controls to ensure that unauthorised
                    modifications are not made to the TOE (``CM access
                    control''), and ensuring proper functionality and use of
                    the CM system, helps to maintain the integrity of the
                    TOE.
                </aco-objectives>
                <msa-objectives>

                    The objectives of this sub-activity are to determine
                    whether the developer uses a CM system that uniquely
                    identifies all configuration items, and whether the
                    ability to modify these items is properly
                    controlled.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the TOE suitable for testing;
                        </item>
                        <item>
                            the configuration management documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cmc.3.1d">
                    The developer shall provide the TOE and a reference for the
                    TOE.
                </ae-developer>
                <ae-developer id="alc_cmc.3.2d">
                    The developer shall provide the CM documentation.
                </ae-developer>
                <ae-developer id="alc_cmc.3.3d">
                    The developer shall use a CM system.
                </ae-developer>
                <ae-content id="alc_cmc.3.1c">
                    The TOE shall be labelled with its unique reference.
                </ae-content>
                <ae-content id="alc_cmc.3.2c">
                    The CM documentation shall describe the method used to
                    uniquely identify the configuration items.
                </ae-content>
                <ae-content id="alc_cmc.3.3c">
                    The CM system shall uniquely identify all configuration
                    items.
                </ae-content>
                <ae-content id="alc_cmc.3.4c">
                    The CM system shall provide measures such that only
                    authorised changes are made to the configuration items.
                </ae-content>
                <ae-content id="alc_cmc.3.5c">
                    The CM documentation shall include a CM plan.
                </ae-content>
                <ae-content id="alc_cmc.3.6c">
                    The CM plan shall describe how the CM system is used for the
                    development of the TOE.
                </ae-content>
                <ae-content id="alc_cmc.3.7c">
                    The evidence shall demonstrate that all configuration items
                    are being maintained under the CM system.
                </ae-content>
                <ae-content id="alc_cmc.3.8c">
                    The evidence shall demonstrate that the CM system is being
                    operated in accordance with the CM plan.
                </ae-content>
                <ae-evaluator id="alc_cmc.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.3.1c"/>

                        The evaluator shall check that the TOE provided for
                        evaluation is labelled with its reference.

                        The evaluator should ensure that the TOE contains the
                        unique reference which is stated in the ST. This could
                        be achieved through labelled packaging or media, or by a
                        label displayed by the operational TOE. This is to
                        ensure that it would be possible for consumers to
                        identify the TOE (e.g. at the point of purchase or
                        use).

                        The TOE may provide a method by which it can be easily
                        identified. For example, a software TOE may display its
                        name and version number during the start up routine, or
                        in response to a command line entry. A hardware or
                        firmware TOE may be identified by a part number
                        physically stamped on the TOE.

                        Alternatively, the unique reference provided for the TOE
                        may be the combination of the unique reference of each
                        component from which the TOE is comprised (e.g. in the
                        case of a composed TOE).
                    </m-workunit>
                    <m-workunit>

                        The evaluator shall check that the TOE references used
                        are consistent.

                        If the TOE is labelled more than once then the labels
                        have to be consistent. For example, it should be
                        possible to relate any labelled guidance documentation
                        supplied as part of the TOE to the evaluated operational
                        TOE. This ensures that consumers can be confident that
                        they have purchased the evaluated version of the TOE,
                        that they have installed this version, and that they
                        have the correct version of the guidance to operate the
                        TOE in accordance with its ST.

                        The evaluator also verifies that the TOE reference is
                        consistent with the ST.

                        If this work unit is applied to a composed TOE, the
                        following will apply. The composed IT TOE will not be
                        labelled with its unique (composite) reference, but only
                        the individual components will be labelled with their
                        appropriate TOE reference.  It would require further
                        development for the IT TOE to be labelled, i.e. during
                        start-up and/or operation, with the composite reference.
                        If the composed TOE is delivered as the constituent
                        component TOEs, then the TOE items delivered will not
                        contain the composite reference.  However, the composed
                        TOE ST will include the unique reference for the
                        composed TOE and will identify the components comprising
                        the composed TOE through which the consumers will be
                        able to determine whether they have the appropriate
                        items.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.3.2c"/>

                        The evaluator shall examine the method of identifying
                        configuration items to determine that it describes how
                        configuration items are uniquely identified.

                        Procedures should describe how the status of each
                        configuration item can be tracked throughout the
                        life-cycle of the TOE. The procedures may be detailed in
                        the CM plan or throughout the CM documentation. The
                        information included should describe:
                        <list type="enumerated">
                            <item>
                                the method how each configuration item is uniquely
                                identified, such that it is possible to track
                                versions of the same configuration item;</item>
                            <item>
                                the method how configuration items are assigned
                                unique identifiers and how they are entered into the
                                CM system;</item>
                            <item>
                                the method to be used to identify superseded
                                versions of a configuration item.</item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.3.3c"/>

                        The evaluator shall examine the configuration items to
                        determine that they are identified in a way that is
                        consistent with the CM documentation.

                        Assurance that the CM system uniquely identifies all
                        configuration items is gained by examining the
                        identifiers for the configuration items. For both
                        configuration items that comprise the TOE, and drafts of
                        configuration items that are submitted by the developer
                        as evaluation evidence, the evaluator confirms that each
                        configuration item possesses a unique identifier in a
                        manner consistent with the unique identification method
                        that is described in the CM documentation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.3.4c"/>

                        The evaluator shall examine the CM access control
                        measures described in the CM plan to determine that they
                        are effective in preventing unauthorised access to the
                        configuration items.

                        The evaluator may use a number of methods to determine
                        that the CM access control measures are effective. For
                        example, the evaluator may exercise the access control
                        measures to ensure that the procedures could not be
                        bypassed. The evaluator may use the outputs generated by
                        the CM system procedures required by <xref show="title" id="alc_cmc.3.8c"/>. The evaluator may also witness a
                        demonstration of the CM system to ensure that the access
                        control measures employed are operating
                        effectively.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.3.5c"/>

                        The evaluator shall check that the CM documentation
                        provided includes a CM plan.
                        The CM plan needs not to be a connected document, but it is
                        recommended that there is a single document that describes where
                        the various parts of the CM plan can be found. If the CM plan is
                        no single document, the list in the following work unit gives
                        hints regarding which context is expected.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.3.6c"/>

                        The evaluator shall examine the CM plan to determine
                        that it describes how the CM system is used for the
                        development of the TOE.

                        The descriptions contained in a CM plan include, if
                        applicable:
                        <list type="enumerated">
                            <item>
                                all activities performed in the TOE development that
                                are subject to configuration management procedures
                                (e.g. creation, modification or deletion of a
                                configuration item, data-backup, archiving);
                            </item>
                            <item>
                                which means (e.g. CM tools, forms) have to be made
                                available;
                            </item>
                            <item>
                                the usage of the CM tools: the necessary details for
                                a user of the CM system to be able to operate the CM
                                tools correctly in order to maintain the integrity
                                of the TOE;
                            </item>
                            <item>
                                which other objects (development components, tools,
                                assessment environments, etc) are taken under CM
                                control;
                            </item>
                            <item>
                                the roles and responsibilities of individuals
                                required to perform operations on individual
                                configuration items (different roles may be
                                identified for different types of configuration
                                items (e.g. design documentation or source code));
                            </item>
                            <item>
                                how CM instances (e.g. change control boards,
                                interface control working groups) are introduced and
                                staffed;
                            </item>
                            <item>
                                the description of the change management;
                            </item>
                            <item>
                                the procedures that are used to ensure that only
                                authorised individuals can make changes to
                                configuration items;
                            </item>
                            <item>
                                the procedures that are used to ensure that
                                concurrency problems do not occur as a result of
                                simultaneous changes to configuration items;
                            </item>
                            <item>
                                the evidence that is generated as a result of
                                application of the procedures. For example, for a
                                change to a configuration item, the CM system might
                                record a description of the change, accountability
                                for the change, identification of all configuration
                                items affected, status (e.g. pending or completed),
                                and date and time of the change. This might be
                                recorded in an audit trail of changes made or change
                                control records;
                            </item>
                            <item>
                                the approach to version control and unique
                                referencing of TOE versions (e.g. covering the
                                release of patches in operating systems, and the
                                subsequent detection of their application).
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit id="alc_cmc.3-8">
                        <ae-dc-element id="alc_cmc.3.7c"/>

                        The evaluator shall check that the configuration items
                        identified in the configuration list are being
                        maintained by the CM system.

                        The CM system employed by the developer should maintain the
                        integrity of the TOE. The evaluator should check that for each
                        type of configuration item (e.g. design documents or source code
                        modules) contained in the configuration list there are examples
                        of the evidence generated by the procedures described in the CM
                        plan. In this case, the approach to sampling will depend upon
                        the level of granularity used in the CM system to control CM
                        items. Where, for example, 10,000 source code modules are
                        identified in the configuration list, a different sampling
                        strategy needs to be applied compared to the case in which there
                        are only 5, or even 1. The emphasis of this activity should be
                        on ensuring that the CM system is being operated correctly,
                        rather than on the detection of any minor error.

                        For guidance on sampling see <xref show="title" id="eval-guidance-sampling"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.3.8c"/>

                        The evaluator shall check the CM documentation to
                        ascertain that it includes the CM system records
                        identified by the CM plan.

                        The output produced by the CM system should provide the
                        evidence that the evaluator needs to be confident that
                        the CM plan is being applied, and also that all
                        configuration items are being maintained by the CM
                        system as required by <xref show="title" id="alc_cmc.3.7c"/>. Example output could include change
                        control forms, or configuration item access approval
                        forms.
                    </m-workunit>
                    <m-workunit id="alc_cmc.3-10">
                        <ae-dc-element id="alc_cmc.3.8c"/>

                        The evaluator shall examine the evidence to determine
                        that the CM system is being operated in accordance with
                        the CM plan.

                        The evaluator should select and examine a sample of
                        evidence covering each type of CM-relevant operation
                        that has been performed on a configuration item
                        (e.g. creation, modification, deletion, reversion to an
                        earlier version) to confirm that all operations of the
                        CM system have been carried out in line with documented
                        procedures. The evaluator confirms that the evidence
                        includes all the information identified for that
                        operation in the CM plan. Examination of the evidence
                        may require access to a CM tool that is used. The
                        evaluator may choose to sample the evidence.

                        For guidance on sampling see <xref show="title" id="eval-guidance-sampling"/>.

                        Further confidence in the correct operation of the CM system and
                        the effective maintenance of configuration items may be
                        established by means of interviews with selected development
                        staff. In conducting such interviews, the evaluator aims
                        to gain a deeper understanding of how the CM system is used in
                        practise as well as to confirm that the CM procedures are being
                        applied as described in the CM documentation. Note that such
                        interviews should complement rather than replace the examination
                        of documentary evidence, and may not be necessary if the
                        documentary evidence alone satisfies the requirement. However,
                        given the wide scope of the CM plan it is possible that some
                        aspects (e.g. roles and responsibilities) may not be clear from
                        the CM plan and records alone.  This is one case where
                        clarification may be necessary through interviews.

                        It is expected that the evaluator will visit the
                        development site in support of this activity.

                        For guidance on site visits see <xref show="title" id="eval-guidance-site-visits"/>.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Production support, acceptance procedures and           automation" id="alc_cmc.4">
                <aco-hierarchical acomponent="alc_cmc.3"/>
                <aco-dependsoncomponent acomponent="alc_cms.1"/>
                <aco-dependsoncomponent acomponent="alc_dvs.1"/>
                <aco-dependsoncomponent acomponent="alc_lcd.1"/>
                <aco-objectives>

                    A unique reference is required to ensure that there is no
                    ambiguity in terms of which instance of the TOE is being
                    evaluated. Labelling the TOE with its reference ensures
                    that users of the TOE can be aware of which instance of
                    the TOE they are using.

                    Unique identification of the configuration items leads to
                    a clearer understanding of the composition of the TOE,
                    which in turn helps to determine those items which are
                    subject to the evaluation requirements for the TOE.

                    The use of a CM system increases assurance that the
                    configuration items are maintained in a controlled
                    manner.

                    Providing controls to ensure that unauthorised
                    modifications are not made to the TOE (``CM access
                    control''), and ensuring proper functionality and use of
                    the CM system, helps to maintain the integrity of the
                    TOE.

                    The purpose of the acceptance procedures is to ensure that
                    the parts of the TOE are of adequate quality and to
                    confirm that any creation or modification of configuration
                    items is authorised. Acceptance procedures are an
                    essential element in integration processes and in the
                    life-cycle management of the TOE.

                    In development environments where the configuration items
                    are complex, it is difficult to control changes without
                    the support of automated tools. In particular, these
                    automated tools need to be able to support the numerous
                    changes that occur during development and ensure that
                    those changes are authorised. It is an objective of this
                    component to ensure that the configuration items are
                    controlled through automated means. If the TOE is
                    developed by multiple developers, i.e. integration has to
                    take place, the use of automatic tools is adequate.

                    Production support procedures help to ensure that the
                    generation of the TOE from a managed set of configuration
                    items is correctly performed in an authorised manner,
                    particularly in the case when different developers are
                    involved and integration processes have to be carried
                    out.
                </aco-objectives>
                <msa-objectives>

                    The objectives of this sub-activity are to determine
                    whether the developer has clearly identified the TOE and
                    its associated configuration items, and whether the
                    ability to modify these items is properly controlled by
                    automated tools, thus making the CM system less
                    susceptible to human error or negligence.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the TOE suitable for testing;
                        </item>
                        <item>
                            the configuration management documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cmc.4.1d">
                    The developer shall provide the TOE and a reference for the
                    TOE.
                </ae-developer>
                <ae-developer id="alc_cmc.4.2d">
                    The developer shall provide the CM documentation.
                </ae-developer>
                <ae-developer id="alc_cmc.4.3d">
                    The developer shall use a CM system.
                </ae-developer>
                <ae-content id="alc_cmc.4.1c">
                    The TOE shall be labelled with its unique reference.
                </ae-content>
                <ae-content id="alc_cmc.4.2c">
                    The CM documentation shall describe the method used to
                    uniquely identify the configuration items.
                </ae-content>
                <ae-content id="alc_cmc.4.3c">
                    The CM system shall uniquely identify all configuration
                    items.
                </ae-content>
                <ae-content id="alc_cmc.4.4c">
                    The CM system shall provide automated measures such that
                    only authorised changes are made to the configuration items.
                </ae-content>
                <ae-content id="alc_cmc.4.5c">
                    The CM system shall support the production of the TOE by
                    automated means.
                </ae-content>
                <ae-content id="alc_cmc.4.6c">
                    The CM documentation shall include a CM plan.
                </ae-content>
                <ae-content id="alc_cmc.4.7c">
                    The CM plan shall describe how the CM system is used for the
                    development of the TOE.
                </ae-content>
                <ae-content id="alc_cmc.4.8c">
                    The CM plan shall describe the procedures used to accept
                    modified or newly created configuration items as part of the
                    TOE.
                </ae-content>
                <ae-content id="alc_cmc.4.9c">
                    The evidence shall demonstrate that all configuration items
                    are being maintained under the CM system.
                </ae-content>
                <ae-content id="alc_cmc.4.10c">
                    The evidence shall demonstrate that the CM system is being
                    operated in accordance with the CM plan.
                </ae-content>
                <ae-evaluator id="alc_cmc.4.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.4.1c"/>

                        The evaluator shall check that the TOE provided for
                        evaluation is labelled with its reference.

                        The evaluator should ensure that the TOE contains the
                        unique reference which is stated in the ST. This could
                        be achieved through labelled packaging or media, or by a
                        label displayed by the operational TOE. This is to
                        ensure that it would be possible for consumers to
                        identify the TOE (e.g. at the point of purchase or
                        use).

                        The TOE may provide a method by which it can be easily
                        identified. For example, a software TOE may display its
                        name and version number during the start up routine, or
                        in response to a command line entry. A hardware or
                        firmware TOE may be identified by a part number
                        physically stamped on the TOE.

                        Alternatively, the unique reference provided for the TOE
                        may be the combination of the unique reference of each
                        component from which the TOE is comprised (e.g. in the
                        case of a composed TOE).
                    </m-workunit>
                    <m-workunit>

                        The evaluator shall check that the TOE references used
                        are consistent.

                        If the TOE is labelled more than once then the labels
                        have to be consistent. For example, it should be
                        possible to relate any labelled guidance documentation
                        supplied as part of the TOE to the evaluated operational
                        TOE. This ensures that consumers can be confident that
                        they have purchased the evaluated version of the TOE,
                        that they have installed this version, and that they
                        have the correct version of the guidance to operate the
                        TOE in accordance with its ST.

                        The evaluator also verifies that the TOE reference is
                        consistent with the ST.

                        If this work unit is applied to a composed TOE, the
                        following will apply. The composed TOE will not be
                        labelled with its unique (composite) reference, but only
                        the individual components will be labelled with their
                        appropriate TOE reference.  It would require further
                        development for the composed TOE to be labelled, i.e. during
                        start-up and/or operation, with the composite reference.
                        If the composed TOE is delivered as the constituent
                        component TOEs, then the TOE items delivered will not
                        contain the composite reference.  However, the composed
                        TOE ST will include the unique reference for the
                        composed TOE and will identify the components comprising
                        the composed TOE through which the consumers will be
                        able to determine whether they have the appropriate items.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.4.2c"/>

                        The evaluator shall examine the method of identifying
                        configuration items to determine that it describes how
                        configuration items are uniquely identified.

                        Procedures should describe how the status of each
                        configuration item can be tracked throughout the
                        life-cycle of the TOE. The procedures may be detailed in
                        the CM plan or throughout the CM documentation. The
                        information included should describe:
                        <list type="enumerated">
                            <item>
                                the method how each configuration item is uniquely
                                identified, such that it is possible to track
                                versions of the same configuration item;</item>
                            <item>
                                the method how configuration items are assigned
                                unique identifiers and how they are entered into the
                                CM system;</item>
                            <item>
                                the method to be used to identify superseded
                                versions of a configuration item.</item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.4.3c"/>

                        The evaluator shall examine the configuration items to
                        determine that they are identified in a way that is
                        consistent with the CM documentation.

                        Assurance that the CM system uniquely identifies all
                        configuration items is gained by examining the
                        identifiers for the configuration items. For configuration
                        items identified under <xref show="id" id="alc_cms"/>,
                        the evaluator confirms that each configuration item possesses
                        a unique identifier in a manner consistent with the unique
                        identification method that is described in the CM documentation.
                    </m-workunit>
                    <m-workunit id="alc_cmc.4-5">
                        <ae-dc-element id="alc_cmc.4.4c"/>

                        The evaluator shall examine the CM access control
                        measures described in the CM plan (cf. <xref show="title" id="alc_cmc.4.6c"/>) to determine that they
                        are automated and effective in preventing unauthorised
                        access to the configuration items.

                        The evaluator may use a number of methods to determine
                        that the CM access control measures are effective. For
                        example, the evaluator may exercise the access control
                        measures to ensure that the procedures could not be
                        bypassed. The evaluator may use the outputs generated by
                        the CM system procedures required by <xref show="title" id="alc_cmc.4.10c"/>. The evaluator may also witness a
                        demonstration of the CM system to ensure that the access
                        control measures employed are operating
                        effectively.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.4.5c"/>

                        The evaluator shall check the CM plan (cf. <xref show="title" id="alc_cmc.4.6c"/>) for automated
                        procedures for supporting the production of the
                        TOE.

                        The term ``production'' applies to those processes
                        adopted by the developer to progress the TOE from the
                        implementation representation to a state acceptable for
                        delivery to the end customer.

                        The evaluator verifies the existence of automated
                        production support procedures within the CM plan.

                        The following are examples for automated means
                        supporting the production of the TOE:
                        <list type="itemized">
                            <item>
                                a ``make'' tool (as provided with many software
                                development tools) in the case of a software TOE;
                            </item>
                            <item>
                                a tool ensuring automatically (for example by means
                                of bar codes) that only parts are combined which
                                indeed belong together in the case of a hardware
                                TOE.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.4.5c"/>

                        The evaluator shall examine the TOE production support
                        procedures to determine that they are effective in
                        ensuring that a TOE is generated that reflects its
                        implementation representation.

                        The production support procedures should describe which
                        tools have to be used to produce the final TOE from the
                        implementation representation in a clearly defined
                        way. The conventions, directives, or other necessary
                        constructs are described under <xref show="id" id="alc_tat"/>.

                        The evaluator determines that by following the
                        production support procedures the correct configuration
                        items would be used to generate the TOE. For example, in
                        a software TOE this may include checking that the
                        automated production procedures ensure that all source
                        files and related libraries are included in the compiled
                        object code. Moreover, the procedures should ensure that
                        compiler options and comparable other options are
                        defined uniquely. For a hardware TOE, this work unit may
                        include checking that the automatic production
                        procedures ensure that the belonging parts are built
                        together and no parts are missing.

                        The customer can then be confident that the version of
                        the TOE delivered for installation is derived from the
                        implementation representation in an unambiguous way and
                        implements the SFRs as described in the ST.

                        The evaluator should bear in mind that the CM system
                        need not necessarily possess the capability to produce
                        the TOE, but should provide support for the process that
                        will help reduce the probability of human error.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.4.6c"/>

                        The evaluator shall check that the CM documentation
                        provided includes a CM plan.
                        The CM plan does not need to be contained within a single
                        document, but it is recommended that there is a separate
                        document that describes where the various parts of the CM plan
                        can be found. If the CM plan is provided by a set of documents,
                        the list in the following work unit gives guidance regarding the
                        required content.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.4.7c"/>

                        The evaluator shall examine the CM plan to determine
                        that it describes how the CM system is used for the
                        development of the TOE.

                        The descriptions contained in a CM plan include, if
                        applicable:
                        <list type="enumerated">
                            <item>
                                all activities performed in the TOE development that
                                are subject to configuration management procedures
                                (e.g. creation, modification or deletion of a
                                configuration item, data-backup, archiving);
                            </item>
                            <item>
                                which means (e.g. CM tools, forms) have to be made
                                available;
                            </item>
                            <item>
                                the usage of the CM tools: the necessary details for
                                a user of the CM system to be able to operate the CM
                                tools correctly in order to maintain the integrity
                                of the TOE;
                            </item>
                            <item>
                                the production support procedures;
                            </item>
                            <item>
                                which other objects (development components, tools,
                                assessment environments, etc) are taken under CM
                                control;
                            </item>
                            <item>
                                the roles and responsibilities of individuals
                                required to perform operations on individual
                                configuration items (different roles may be
                                identified for different types of configuration
                                items (e.g. design documentation or source code));
                            </item>
                            <item>
                                how CM instances (e.g. change control boards,
                                interface control working groups) are introduced and
                                staffed;
                            </item>
                            <item>
                                the description of the change management;
                            </item>
                            <item>
                                the procedures that are used to ensure that only
                                authorised individuals can make changes to
                                configuration items;
                            </item>
                            <item>
                                the procedures that are used to ensure that
                                concurrency problems do not occur as a result of
                                simultaneous changes to configuration items;
                            </item>
                            <item>
                                the evidence that is generated as a result of
                                application of the procedures. For example, for a
                                change to a configuration item, the CM system might
                                record a description of the change, accountability
                                for the change, identification of all configuration
                                items affected, status (e.g. pending or completed),
                                and date and time of the change. This might be
                                recorded in an audit trail of changes made or change
                                control records;
                            </item>
                            <item>
                                the approach to version control and unique
                                referencing of TOE versions (e.g. covering the
                                release of patches in operating systems, and the
                                subsequent detection of their application).
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.4.8c"/>

                        The evaluator shall examine the CM plan to determine
                        that it describes the procedures used to accept modified
                        or newly created configuration items as parts of the
                        TOE.

                        The descriptions of the acceptance procedures in the CM
                        plan should include the developer roles or individuals
                        responsible for the acceptance and the criteria to be
                        used for acceptance. They should take into account all
                        acceptance situations that may occur, in particular:
                        <list type="enumerated">
                            <item>
                                accepting an item into the CM system for the first
                                time, in particular inclusion of software, firmware
                                and hardware components from other manufacturers
                                into the TOE (``integration'');
                            </item>
                            <item>
                                moving configuration items to the next life-cycle
                                phase at each stage of the construction of the TOE
                                (e.g. module, subsystem, system);
                            </item>
                            <item>
                                subsequent to transports between different
                                development sites.
                            </item>
                        </list>

                        If this work unit is applied to a dependent component
                        that is going to be integrated in a composed TOE, the CM
                        plan should consider the control of base components
                        obtained by the dependent TOE developer.

                        When obtaining the components the evaluators are to
                        verify the following:
                        <list type="enumerated">
                            <item>
                                Transfer of each base component from the base
                                component developer to the integrator (dependent TOE
                                developer) was performed in accordance with the base
                                component TOE's secure delivery procedures, as
                                reported in the base component TOE certification
                                report.
                            </item>
                            <item>
                                The component received has the same identifiers as
                                those stated in the ST and Certification Report for
                                the component TOE.
                            </item>
                            <item>
                                All additional material required by a developer for
                                composition (integration) is provided.  This is to
                                include the necessary extract of the component TOE's
                                functional specification.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit id="alc_cmc.4-11">
                        <ae-dc-element id="alc_cmc.4.9c"/>

                        The evaluator shall check that the configuration items
                        identified in the configuration list are being
                        maintained by the CM system.

                        The CM system employed by the developer should maintain the
                        integrity of the TOE. The evaluator should check that for each
                        type of configuration item (e.g. design documents or source code
                        modules) contained in the configuration list there are examples
                        of the evidence generated by the procedures described in the CM
                        plan. In this case, the approach to sampling will depend upon
                        the level of granularity used in the CM system to control CM
                        items. Where, for example, 10,000 source code modules are
                        identified in the configuration list, a different sampling
                        strategy needs to be applied compared to the case in which there
                        are only 5, or even 1. The emphasis of this activity should be
                        on ensuring that the CM system is being operated correctly,
                        rather than on the detection of any minor error.

                        For guidance on sampling see <xref show="title" id="eval-guidance-sampling"/>.
                    </m-workunit>
                    <m-workunit id="alc_cmc.4-12">
                        <ae-dc-element id="alc_cmc.4.10c"/>

                        The evaluator shall check the CM documentation to
                        ascertain that it includes the CM system records
                        identified by the CM plan.

                        The output produced by the CM system should provide the
                        evidence that the evaluator needs to be confident that
                        the CM plan is being applied, and also that all
                        configuration items are being maintained by the CM
                        system as required by <xref show="title" id="alc_cmc.4.9c"/>. Example output could include change
                        control forms, or configuration item access approval
                        forms.
                    </m-workunit>
                    <m-workunit id="alc_cmc.4-13">
                        <ae-dc-element id="alc_cmc.4.10c"/>

                        The evaluator shall examine the evidence to determine
                        that the CM system is being operated in accordance with
                        the CM plan.

                        The evaluator should select and examine a sample of
                        evidence covering each type of CM-relevant operation
                        that has been performed on a configuration item
                        (e.g. creation, modification, deletion, reversion to an
                        earlier version) to confirm that all operations of the
                        CM system have been carried out in line with documented
                        procedures. The evaluator confirms that the evidence
                        includes all the information identified for that
                        operation in the CM plan. Examination of the evidence
                        may require access to a CM tool that is used. The
                        evaluator may choose to sample the evidence.

                        For guidance on sampling see <xref show="title" id="eval-guidance-sampling"/>.

                        Further confidence in the correct operation of the CM system and
                        the effective maintenance of configuration items may be
                        established by means of interviews with selected development
                        staff. In conducting such interviews, the evaluator aims
                        to gain a deeper understanding of how the CM system is used in
                        practise as well as to confirm that the CM procedures are being
                        applied as described in the CM documentation. Note that such
                        interviews should complement rather than replace the examination
                        of documentary evidence, and may not be necessary if the
                        documentary evidence alone satisfies the requirement. However,
                        given the wide scope of the CM plan it is possible that some
                        aspects (e.g. roles and responsibilities) may not be clear from
                        the CM plan and records alone.  This is one case where
                        clarification may be necessary through interviews.

                        It is expected that the evaluator will visit the
                        development site in support of this activity.

                        For guidance on site visits see <xref show="title" id="eval-guidance-site-visits"/>.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Advanced support" id="alc_cmc.5">
                <aco-hierarchical acomponent="alc_cmc.4"/>
                <aco-dependsoncomponent acomponent="alc_cms.1"/>
                <aco-dependsoncomponent acomponent="alc_dvs.2"/>
                <aco-dependsoncomponent acomponent="alc_lcd.1"/>
                <aco-objectives>

                    A unique reference is required to ensure that there is no
                    ambiguity in terms of which instance of the TOE is being
                    evaluated. Labelling the TOE with its reference ensures
                    that users of the TOE can be aware of which instance of
                    the TOE they are using.

                    Unique identification of the configuration items leads to
                    a clearer understanding of the composition of the TOE,
                    which in turn helps to determine those items which are
                    subject to the evaluation requirements for the TOE.

                    The use of a CM system increases assurance that the
                    configuration items are maintained in a controlled
                    manner.

                    Providing controls to ensure that unauthorised
                    modifications are not made to the TOE (``CM access
                    control''), and ensuring proper functionality and use of
                    the CM system, helps to maintain the integrity of the
                    TOE.

                    The purpose of the acceptance procedures is to ensure that
                    the parts of the TOE are of adequate quality and to
                    confirm that any creation or modification of configuration
                    items is authorised. Acceptance procedures are an
                    essential element in integration processes and in the
                    life-cycle management of the TOE.

                    In development environments where the configuration items
                    are complex, it is difficult to control changes without
                    the support of automated tools. In particular, these
                    automated tools need to be able to support the numerous
                    changes that occur during development and ensure that
                    those changes are authorised. It is an objective of this
                    component to ensure that the configuration items are
                    controlled through automated means. If the TOE is
                    developed by multiple developers, i.e. integration has to
                    take place, the use of automatic tools is adequate.

                    Production support procedures help to ensure that the
                    generation of the TOE from a managed set of configuration
                    items is correctly performed in an authorised manner,
                    particularly in the case when different developers are
                    involved and integration processes have to be carried
                    out.

                    Requiring that the CM system be able to identify the
                    version of the implementation representation from which
                    the TOE is generated helps to ensure that the integrity of
                    this material is preserved by the appropriate technical,
                    physical and procedural safeguards.

                    Providing an automated means of ascertaining changes
                    between versions of the TOE and identifying which
                    configuration items are affected by modifications to other
                    configuration items assists in determining the impact of
                    the changes between successive versions of the TOE. This
                    in turn can provide valuable information in determining
                    whether changes to the TOE result in all configuration
                    items being consistent with one another.
                </aco-objectives>
                <msa-objectives>

                    The objectives of this sub-activity are to determine
                    whether the developer has clearly identified the TOE and
                    its associated configuration items, and whether the
                    ability to modify these items is properly controlled by
                    automated tools, thus making the CM system less
                    susceptible to human error or negligence.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the TOE suitable for testing;
                        </item>
                        <item>
                            the configuration management documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cmc.5.1d">
                    The developer shall provide the TOE and a reference for the
                    TOE.
                </ae-developer>
                <ae-developer id="alc_cmc.5.2d">
                    The developer shall provide the CM documentation.
                </ae-developer>
                <ae-developer id="alc_cmc.5.3d">
                    The developer shall use a CM system.
                </ae-developer>
                <ae-content id="alc_cmc.5.1c">
                    The TOE shall be labelled with its unique reference.
                </ae-content>
                <ae-content id="alc_cmc.5.2c">
                    The CM documentation shall describe the method used to
                    uniquely identify the configuration items.
                </ae-content>
                <ae-content id="alc_cmc.5.3c">
                    The CM documentation shall justify that the acceptance
                    procedures provide for an adequate and appropriate review of
                    changes to all configuration items.
                </ae-content>
                <ae-content id="alc_cmc.5.4c">
                    The CM system shall uniquely identify all configuration
                    items.
                </ae-content>
                <ae-content id="alc_cmc.5.5c">
                    The CM system shall provide automated measures such that
                    only authorised changes are made to the configuration items.
                </ae-content>
                <ae-content id="alc_cmc.5.6c">
                    The CM system shall support the production of the TOE by
                    automated means.
                </ae-content>
                <ae-content id="alc_cmc.5.7c">
                    The CM system shall ensure that the person responsible for
                    accepting a configuration item into CM is not the person who
                    developed it.
                </ae-content>
                <ae-content id="alc_cmc.5.8c">
                    The CM system shall identify the configuration items that
                    comprise the TSF.
                </ae-content>
                <ae-content id="alc_cmc.5.9c">
                    The CM system shall support the audit of all changes to the
                    TOE by automated means, including the originator, date, and
                    time in the audit trail.
                </ae-content>
                <ae-content id="alc_cmc.5.10c">
                    The CM system shall provide an automated means to identify
                    all other configuration items that are affected by the
                    change of a given configuration item.
                </ae-content>
                <ae-content id="alc_cmc.5.11c">
                    The CM system shall be able to identify the version of the
                    implementation representation from which the TOE is
                    generated.
                </ae-content>
                <ae-content id="alc_cmc.5.12c">
                    The CM documentation shall include a CM plan.
                </ae-content>
                <ae-content id="alc_cmc.5.13c">
                    The CM plan shall describe how the CM system is used for the
                    development of the TOE.
                </ae-content>
                <ae-content id="alc_cmc.5.14c">
                    The CM plan shall describe the procedures used to accept
                    modified or newly created configuration items as part of the
                    TOE.
                </ae-content>
                <ae-content id="alc_cmc.5.15c">
                    The evidence shall demonstrate that all configuration items
                    are being maintained under the CM system.
                </ae-content>
                <ae-content id="alc_cmc.5.16c">
                    The evidence shall demonstrate that the CM system is being
                    operated in accordance with the CM plan.
                </ae-content>
                <ae-evaluator id="alc_cmc.5.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.1c"/>

                        The evaluator shall check that the TOE provided for
                        evaluation is labelled with its reference.

                        The evaluator should ensure that the TOE contains the
                        unique reference which is stated in the ST. This could
                        be achieved through labelled packaging or media, or by a
                        label displayed by the operational TOE. This is to
                        ensure that it would be possible for consumers to
                        identify the TOE (e.g. at the point of purchase or
                        use).

                        The TOE may provide a method by which it can be easily
                        identified. For example, a software TOE may display its
                        name and version number during the start up routine, or
                        in response to a command line entry. A hardware or
                        firmware TOE may be identified by a part number
                        physically stamped on the TOE.

                        Alternatively, the unique reference provided for the TOE
                        may be the combination of the unique reference of each
                        component from which the TOE is comprised (e.g. in the
                        case of a composed TOE).
                    </m-workunit>
                    <m-workunit>

                        The evaluator shall check that the TOE references used
                        are consistent.

                        If the TOE is labelled more than once then the labels
                        have to be consistent. For example, it should be
                        possible to relate any labelled guidance documentation
                        supplied as part of the TOE to the evaluated operational
                        TOE. This ensures that consumers can be confident that
                        they have purchased the evaluated version of the TOE,
                        that they have installed this version, and that they
                        have the correct version of the guidance to operate the
                        TOE in accordance with its ST.

                        The evaluator also verifies that the TOE reference is
                        consistent with the ST.

                        If this work unit is applied to a composed TOE, the
                        following will apply. The composed IT TOE will not be
                        labelled with its unique (composite) reference, but only
                        the individual components will be labelled with their
                        appropriate TOE reference.  It would require further
                        development for the IT TOE to be labelled, i.e. during
                        start-up and/or operation, with the composite reference.
                        If the composed TOE is delivered as the constituent
                        component TOEs, then the TOE items delivered will not
                        contain the composite reference.  However, the composed
                        TOE ST will include the unique reference for the
                        composed TOE and will identify the components comprising
                        the composed TOE through which the consumers will be
                        able to determine whether they have the appropriate
                        items.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.2c"/>

                        The evaluator shall examine the method of identifying
                        configuration items to determine that it describes how
                        configuration items are uniquely identified.

                        Procedures should describe how the status of each
                        configuration item can be tracked throughout the
                        life-cycle of the TOE. The procedures may be detailed in
                        the CM plan or throughout the CM documentation. The
                        information included should describe:
                        <list type="enumerated">
                            <item>
                                the method how each configuration item is uniquely
                                identified, such that it is possible to track
                                versions of the same configuration item;</item>
                            <item>
                                the method how configuration items are assigned
                                unique identifiers and how they are entered into the
                                CM system;</item>
                            <item>
                                the method to be used to identify superseded
                                versions of a configuration item.</item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.3c"/>

                        The evaluator shall examine the CM documentation to
                        determine that it justifies that the acceptance
                        procedures provide for an adequate and appropriate
                        review of changes to all configuration items.

                        The CM documentation should make it sufficiently clear
                        that by following the acceptance procedures only parts
                        of adequate quality are incorporated into the
                        TOE.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.4c"/>

                        The evaluator shall examine the configuration items to
                        determine that they are identified in a way that is
                        consistent with the CM documentation.

                        Assurance that the CM system uniquely identifies all
                        configuration items is gained by examining the
                        identifiers for the configuration items. For both
                        configuration items that comprise the TOE, and drafts of
                        configuration items that are submitted by the developer
                        as evaluation evidence, the evaluator confirms that each
                        configuration item possesses a unique identifier in a
                        manner consistent with the unique identification method
                        that is described in the CM documentation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.5c"/>

                        The evaluator shall examine the CM access control
                        measures described in the CM plan (cf. <xref show="title" id="alc_cmc.5.12c"/>) to determine that
                        they are automated and effective in preventing
                        unauthorised access to the configuration items.

                        The evaluator may use a number of methods to determine
                        that the CM access control measures are effective. For
                        example, the evaluator may exercise the access control
                        measures to ensure that the procedures could not be
                        bypassed. The evaluator may use the outputs generated by
                        the CM system procedures required by <xref show="title" id="alc_cmc.5.16c"/>. The evaluator may also witness a
                        demonstration of the CM system to ensure that the access
                        control measures employed are operating
                        effectively.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.6c"/>

                        The evaluator shall check the CM plan (cf. <xref show="title" id="alc_cmc.5.12c"/>) for automated
                        procedures for supporting the production of the
                        TOE.

                        The term ``production'' applies to those processes
                        adopted by the developer to progress the TOE from the
                        implementation representation to a state acceptable for
                        delivery to the end customer.

                        The evaluator verifies the existence of automated
                        production support procedures within the CM plan.

                        The following are examples for automated means
                        supporting the production of the TOE:
                        <list type="itemized">
                            <item>
                                a ``make'' tool (as provided with many software
                                development tools) in the case of a software TOE;
                            </item>
                            <item>
                                a tool ensuring automatically (for example by means
                                of bar codes) that only parts are combined which
                                indeed belong together in the case of a hardware
                                TOE.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.6c"/>

                        The evaluator shall examine the TOE production support
                        procedures to determine that they are effective in
                        ensuring that a TOE is generated that reflects its
                        implementation representation.

                        The production support procedures should describe which
                        tools have to be used to produce the final TOE from the
                        implementation representation in a clearly defined
                        way. The conventions, directives, or other necessary
                        constructs are described under <xref show="id" id="alc_tat"/>.

                        The evaluator determines that by following the
                        production support procedures the correct configuration
                        items would be used to generate the TOE. For example, in
                        a software TOE this may include checking that the
                        automated production procedures ensure that all source
                        files and related libraries are included in the compiled
                        object code. Moreover, the procedures should ensure that
                        compiler options and comparable other options are
                        defined uniquely. For a hardware TOE, this work unit may
                        include checking that the automatic production
                        procedures ensure that the belonging parts are built
                        together and no parts are missing.

                        The customer can then be confident that the version of
                        the TOE delivered for installation is derived from the
                        implementation representation in an unambiguous way and
                        implements the SFRs as described in the ST.

                        The evaluator should bear in mind that the CM system
                        need not necessarily possess the capability to produce
                        the TOE, but should provide support for the process that
                        will help reduce the probability of human error.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.7c"/>

                        The evaluator shall examine the CM system to determine
                        that it ensures that the person responsible for
                        accepting a configuration item is not the person who
                        developed it.

                        The acceptance procedures describe who is responsible
                        for accepting a configuration item. From these
                        descriptions, the evaluator should be able to determine
                        that the person who developed a configuration item is in
                        no case responsible for its acceptance.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.8c"/>

                        The evaluator shall examine the CM system to determine
                        that it identifies the configuration items that comprise
                        the TSF.

                        The CM documentation should describe how the CM system
                        identifies the configuration items that comprise the
                        TSF. The evaluator should select a sample of
                        configuration items covering each type of items,
                        particularly containing TSF and non-TSF items, and check
                        that they are correctly classified by the CM
                        system.

                        For guidance on sampling see <xref show="title" id="eval-guidance-sampling"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.9c"/>

                        The evaluator shall examine the CM system to determine
                        that it supports the audit of all changes to the TOE by
                        automated means, including the originator, date, and
                        time in the audit trail.

                        The evaluator should inspect a sample of audit trails
                        and check, if they contain the minimum
                        information.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.10c"/>

                        The evaluator shall examine the CM system to determine
                        that it provides an automated means to identify all
                        other configuration items that are affected by the
                        change of a given configuration item.

                        The CM documentation should describe how the CM system
                        identifies all other configuration items that are
                        affected by the change of a given configuration
                        item. The evaluator should select a sample of
                        configuration items, covering all types of items, and
                        exercise the automated means to determine that it
                        identifies all items that are affected by the change of
                        the selected item.

                        For guidance on sampling see <xref show="title" id="eval-guidance-sampling"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.11c"/>

                        The evaluator shall examine the CM system to determine
                        that it is able to identify the version of the
                        implementation representation from which the TOE is
                        generated.

                        The CM documentation should describe how the CM system
                        identifies the version of the implementation
                        representation from which the TOE is generated. The
                        evaluator should select a sample of the parts used to
                        produce the TOE and should apply the CM system to verify
                        that it identifies the corresponding implementation
                        representation in the correct version.

                        For guidance on sampling see <xref show="title" id="eval-guidance-sampling"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.12c"/>

                        The evaluator shall check that the CM documentation provided
                        includes a CM plan.
                        The CM plan needs not to be a connected document, but it is
                        recommended that there is a single document that describes where
                        the various parts of the CM plan can be found. If the CM plan is
                        no single document, the list in the following work unit gives
                        hints regarding which context is expected.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.13c"/>

                        The evaluator shall examine the CM plan to determine
                        that it describes how the CM system is used for the
                        development of the TOE.

                        The descriptions contained in a CM plan include, if
                        applicable:
                        <list type="enumerated">
                            <item>
                                all activities performed in the TOE development that
                                are subject to configuration management procedures
                                (e.g. creation, modification or deletion of a
                                configuration item, data-backup, archiving);
                            </item>
                            <item>
                                which means (e.g. CM tools, forms) have to be made
                                available;
                            </item>
                            <item>
                                the usage of the CM tools: the necessary details for
                                a user of the CM system to be able to operate the CM
                                tools correctly in order to maintain the integrity
                                of the TOE;
                            </item>
                            <item>
                                the production support procedures;
                            </item>
                            <item>
                                which other objects (development components, tools,
                                assessment environments, etc) are taken under CM
                                control;
                            </item>
                            <item>
                                the roles and responsibilities of individuals
                                required to perform operations on individual
                                configuration items (different roles may be
                                identified for different types of configuration
                                items (e.g. design documentation or source code));
                            </item>
                            <item>
                                how CM instances (e.g. change control boards,
                                interface control working groups) are introduced and
                                staffed;
                            </item>
                            <item>
                                the description of the change management;
                            </item>
                            <item>
                                the procedures that are used to ensure that only
                                authorised individuals can make changes to
                                configuration items;
                            </item>
                            <item>
                                the procedures that are used to ensure that
                                concurrency problems do not occur as a result of
                                simultaneous changes to configuration items;
                            </item>
                            <item>
                                the evidence that is generated as a result of
                                application of the procedures. For example, for a
                                change to a configuration item, the CM system might
                                record a description of the change, accountability
                                for the change, identification of all configuration
                                items affected, status (e.g. pending or completed),
                                and date and time of the change. This might be
                                recorded in an audit trail of changes made or change
                                control records;
                            </item>
                            <item>
                                the approach to version control and unique
                                referencing of TOE versions (e.g. covering the
                                release of patches in operating systems, and the
                                subsequent detection of their application).
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.14c"/>

                        The evaluator shall examine the CM plan to determine
                        that it describes the procedures used to accept modified
                        or newly created configuration items as parts of the
                        TOE.

                        The descriptions of the acceptance procedures in the CM
                        plan should include the developer roles or individuals
                        responsible for the acceptance and the criteria to be
                        used for acceptance. They should take into account all
                        acceptance situations that may occur, in particular:
                        <list type="enumerated">
                            <item>
                                accepting an item into the CM system for the first
                                time, in particular inclusion of software, firmware
                                and hardware components from other manufacturers
                                into the TOE (``integration'');
                            </item>
                            <item>
                                moving configuration items to the next life-cycle
                                phase at each stage of the construction of the TOE
                                (e.g. module, subsystem, system);
                            </item>
                            <item>
                                subsequent to transports between different
                                development sites.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cmc.5.15c"/>

                        The evaluator shall check that the configuration items
                        identified in the configuration list are being
                        maintained by the CM system.

                        The CM system employed by the developer should maintain the
                        integrity of the TOE. The evaluator should check that for each
                        type of configuration item (e.g. design documents or source code
                        modules) contained in the configuration list there are examples
                        of the evidence generated by the procedures described in the CM
                        plan. In this case, the approach to sampling will depend upon
                        the level of granularity used in the CM system to control CM
                        items. Where, for example, 10,000 source code modules are
                        identified in the configuration list, a different sampling
                        strategy needs to be applied compared to the case in which there
                        are only 5, or even 1. The emphasis of this activity should be
                        on ensuring that the CM system is being operated correctly,
                        rather than on the detection of any minor error.

                        For guidance on sampling see <xref show="title" id="eval-guidance-sampling"/>.
                    </m-workunit>
                    <m-workunit id="alc_cmc.5-18">
                        <ae-dc-element id="alc_cmc.5.16c"/>

                        The evaluator shall check the CM documentation to
                        ascertain that it includes the CM system records
                        identified by the CM plan.

                        The output produced by the CM system should provide the
                        evidence that the evaluator needs to be confident that
                        the CM plan is being applied, and also that all
                        configuration items are being maintained by the CM
                        system as required by <xref show="title" id="alc_cmc.5.15c"/>. Example output could include
                        change control forms, or configuration item access
                        approval forms.
                    </m-workunit>
                    <m-workunit id="alc_cmc.5-19">
                        <ae-dc-element id="alc_cmc.5.16c"/>

                        The evaluator shall examine the evidence to determine
                        that the CM system is being operated in accordance with
                        the CM plan.

                        The evaluator should select and examine a sample of
                        evidence covering each type of CM-relevant operation
                        that has been performed on a configuration item
                        (e.g. creation, modification, deletion, reversion to an
                        earlier version) to confirm that all operations of the
                        CM system have been carried out in line with documented
                        procedures. The evaluator confirms that the evidence
                        includes all the information identified for that
                        operation in the CM plan. Examination of the evidence
                        may require access to a CM tool that is used. The
                        evaluator may choose to sample the evidence.

                        For guidance on sampling see <xref show="title" id="eval-guidance-sampling"/>.

                        Further confidence in the correct operation of the CM system and
                        the effective maintenance of configuration items may be
                        established by means of interviews with selected development
                        staff. In conducting such interviews, the evaluator aims
                        to gain a deeper understanding of how the CM system is used in
                        practise as well as to confirm that the CM procedures are being
                        applied as described in the CM documentation. Note that such
                        interviews should complement rather than replace the examination
                        of documentary evidence, and may not be necessary if the
                        documentary evidence alone satisfies the requirement. However,
                        given the wide scope of the CM plan it is possible that some
                        aspects (e.g. roles and responsibilities) may not be clear from
                        the CM plan and records alone.  This is one case where
                        clarification may be necessary through interviews.

                        It is expected that the evaluator will visit the
                        development site in support of this activity.

                        For guidance on site visits see <xref show="title" id="eval-guidance-site-visits"/>.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="alc_cmc.5.2e">
                    The evaluator shall determine that the application of the
                    production support procedures results in a TOE as provided
                    by the developer for testing activities.
                    <m-workunit>

                        The evaluator shall examine the production support
                        procedures to determine that by following these
                        procedures a TOE would be produced like that one
                        provided by the developer for testing activities.

                        If the TOE is a small software TOE and production
                        consists of compiling and linking, the evaluator might
                        confirm the adequacy of the production support
                        procedures by reapplying them himself.

                        If the production process of the TOE is more complicated
                        (as for example in the case of a smart card), but has
                        already started, the evaluator should inspect the
                        application of the production support procedures during
                        a visit of the development site. He might compare a copy
                        of the TOE produced in his presence with the samples
                        used for his testing activities.

                        For guidance on site visits see <xref show="title" id="eval-guidance-site-visits"/>.

                        Otherwise the evaluator's determination should be based
                        on the documentary evidence provided by the
                        developer.

                        This work unit may be performed in conjunction with the
                        evaluation activities under <xref id="adv_imp" show="link"/>.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="CM scope" id="alc_cms">
            <af-objectives>

                The objective of this family is to identify items to be
                included as configuration items and hence placed under the
                CM requirements of <xref show="title" id="alc_cmc"/>.
                Applying configuration management to these additional items
                provides additional assurance that the integrity of TOE is
                maintained.
            </af-objectives>
            <af-overview>

                Configuration management scope indicates the TOE items that
                need to be controlled by the configuration management
                system.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                which of the following are required to be included as
                configuration items: the TOE and the evaluation evidence
                required by the SARs; the parts of the TOE; the
                implementation representation; security flaws; and
                development tools and related information.
            </af-levelling-criteria>
            <af-application-notes>

                While <xref show="title" id="alc_cms"/> mandates a list of
                configuration items and that each item on this list be under
                CM, <xref show="title" id="alc_cmc"/> leaves the contents of
                the configuration list to the discretion of the
                developer. <xref show="title" id="alc_cms"/> narrows this
                discretion by identifying items that must be included in the
                configuration list, and hence come under the CM requirements
                of <xref show="title" id="alc_cmc"/>.
            </af-application-notes>
            <a-component name="TOE CM coverage" id="alc_cms.1">
                <aco-objectives>

                    A CM system can control changes only to those items that
                    have been placed under CM (i.e., the configuration items
                    identified in the configuration list). Placing the TOE
                    itself and the evaluation evidence required by the other
                    SARs in the ST under CM provides assurance that they have
                    been modified in a controlled manner with proper
                    authorisations.
                </aco-objectives>
                <aco-application-notes>

                    <xref show="title" id="alc_cms.1.1c"/> introduces the
                    requirement that the TOE itself and the evaluation
                    evidence required by the other SARs in the ST be included
                    in the configuration list and hence be subject to the CM
                    requirements of <xref show="title" id="alc_cmc"/>.
                </aco-application-notes>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer performs configuration management on the TOE
                    and the evaluation evidence. These configuration items are
                    controlled in accordance with <xref show="title" id="alc_cmc"/>.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the configuration list.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cms.1.1d">
                    The developer shall provide a configuration list for the
                    TOE.
                </ae-developer>
                <ae-content id="alc_cms.1.1c">
                    The configuration list shall include the following: the TOE
                    itself; and the evaluation evidence required by the SARs.
                </ae-content>
                <ae-content id="alc_cms.1.2c">
                    The configuration list shall uniquely identify the
                    configuration items.
                </ae-content>
                <ae-evaluator id="alc_cms.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cms.1.1c"/>

                        The evaluator shall check that the configuration list
                        includes the following set of items:
                        <list type="enumerated">
                            <item>
                                the TOE itself;
                            </item>
                            <item>
                                the evaluation evidence required by the SARs in the
                                ST.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cms.1.2c"/>

                        The evaluator shall examine the configuration list to
                        determine that it uniquely identifies each configuration
                        item.

                        The configuration list contains sufficient information
                        to uniquely identify which version of each item has been
                        used (typically a version number). Use of this list will
                        enable the evaluator to check that the correct
                        configuration items, and the correct version of each
                        item, have been used during the evaluation.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Parts of the TOE CM coverage" id="alc_cms.2">
                <aco-hierarchical acomponent="alc_cms.1"/>
                <aco-objectives>

                    A CM system can control changes only to those items that
                    have been placed under CM (i.e., the configuration items
                    identified in the configuration list). Placing the TOE
                    itself, the parts that comprise the TOE, and the
                    evaluation evidence required by the other SARs under CM
                    provides assurance that they have been modified in a
                    controlled manner with proper authorisations.
                </aco-objectives>
                <aco-application-notes>

                    <xref show="title" id="alc_cms.2.1c"/> introduces the
                    requirement that the parts that comprise the TOE (all
                    parts that are delivered to the consumer, for example
                    hardware parts or executable files) be included in the
                    configuration list and hence be subject to the CM
                    requirements of <xref show="title" id="alc_cmc"/>.

                    <xref show="title" id="alc_cms.2.3c"/> introduces the
                    requirement that the configuration list indicate the
                    developer of each TSF relevant configuration
                    item. ``Developer'' here does not refer to a person, but
                    to the organisation responsible for the development of the
                    item.
                </aco-application-notes>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the configuration list includes the TOE, the parts that
                    comprise the TOE, and the evaluation evidence. These configuration items are
                    controlled in accordance with <xref show="title" id="alc_cmc"/>.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the configuration list.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cms.2.1d">
                    The developer shall provide a configuration list for the
                    TOE.
                </ae-developer>
                <ae-content id="alc_cms.2.1c">
                    The configuration list shall include the following: the TOE
                    itself; the evaluation evidence required by the SARs; and
                    the parts that comprise the TOE.
                </ae-content>
                <ae-content id="alc_cms.2.2c">
                    The configuration list shall uniquely identify the
                    configuration items.
                </ae-content>
                <ae-content id="alc_cms.2.3c">
                    For each TSF relevant configuration item, the configuration
                    list shall indicate the developer of the item.
                </ae-content>
                <ae-evaluator id="alc_cms.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cms.2.1c"/>

                        The evaluator shall check that the configuration list
                        includes the following set of items:
                        <list type="enumerated"><item>
                            the TOE itself;
                        </item><item>
                            the parts that comprise the TOE;
                        </item><item>
                            the evaluation evidence required by the SARs.
                        </item></list>

                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cms.2.2c"/>

                        The evaluator shall examine the configuration list to
                        determine that it uniquely identifies each configuration
                        item.

                        The configuration list contains sufficient information
                        to uniquely identify which version of each item has been
                        used (typically a version number). Use of this list will
                        enable the evaluator to check that the correct
                        configuration items, and the correct version of each
                        item, have been used during the evaluation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cms.2.3c"/>

                        The evaluator shall check that the configuration list
                        indicates the developer of each TSF relevant
                        configuration item.

                        If only one developer is involved in the development of
                        the TOE, this work unit is not applicable, and is
                        therefore considered to be satisfied.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Implementation representation CM coverage" id="alc_cms.3">
                <aco-hierarchical acomponent="alc_cms.2"/>
                <aco-objectives>

                    A CM system can control changes only to those items that
                    have been placed under CM (i.e., the configuration items
                    identified in the configuration list). Placing the TOE
                    itself, the parts that comprise the TOE, the TOE
                    implementation representation and the evaluation evidence
                    required by the other SARs under CM provides assurance
                    that they have been modified in a controlled manner with
                    proper authorisations.
                </aco-objectives>
                <aco-application-notes>

                    <xref show="title" id="alc_cms.3.1c"/> introduces the
                    requirement that the TOE implementation representation be
                    included in the list of configuration items and hence be
                    subject to the CM requirements of <xref show="title" id="alc_cmc"/>.
                </aco-application-notes>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the configuration list includes the TOE, the parts that
                    comprise the TOE, the TOE implementation representation,
                    and the evaluation evidence. These configuration items are
                    controlled in accordance with <xref show="title" id="alc_cmc"/>.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the configuration list.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cms.3.1d">
                    The developer shall provide a configuration list for the
                    TOE.
                </ae-developer>
                <ae-content id="alc_cms.3.1c">
                    The configuration list shall include the following: the TOE
                    itself; the evaluation evidence required by the SARs; the
                    parts that comprise the TOE; and the implementation
                    representation.
                </ae-content>
                <ae-content id="alc_cms.3.2c">
                    The configuration list shall uniquely identify the
                    configuration items.
                </ae-content>
                <ae-content id="alc_cms.3.3c">
                    For each TSF relevant configuration item, the configuration
                    list shall indicate the developer of the item.
                </ae-content>
                <ae-evaluator id="alc_cms.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cms.3.1c"/>

                        The evaluator shall check that the configuration list
                        includes the following set of items:
                        <list type="enumerated">
                            <item>
                                the TOE itself;
                            </item>
                            <item>
                                the parts that comprise the TOE;
                            </item>
                            <item>
                                the TOE implementation representation;
                            </item>
                            <item>
                                the evaluation evidence required by the SARs in the
                                ST.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cms.3.2c"/>

                        The evaluator shall examine the configuration list to
                        determine that it uniquely identifies each configuration
                        item.

                        The configuration list contains sufficient information
                        to uniquely identify which version of each item has been
                        used (typically a version number). Use of this list will
                        enable the evaluator to check that the correct
                        configuration items, and the correct version of each
                        item, have been used during the evaluation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cms.3.3c"/>

                        The evaluator shall check that the configuration list
                        indicates the developer of each TSF relevant
                        configuration item.

                        If only one developer is involved in the development of
                        the TOE, this work unit is not applicable, and is
                        therefore considered to be satisfied.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Problem tracking CM coverage" id="alc_cms.4">
                <aco-hierarchical acomponent="alc_cms.3"/>
                <aco-objectives>

                    A CM system can control changes only to those items that
                    have been placed under CM (i.e., the configuration items
                    identified in the configuration list). Placing the TOE
                    itself, the parts that comprise the TOE, the TOE
                    implementation representation and the evaluation evidence
                    required by the other SARs under CM provides assurance
                    that they have been modified in a controlled manner with
                    proper authorisations.

                    Placing security flaws under CM ensures that security flaw
                    reports are not lost or forgotten, and allows a developer
                    to track security flaws to their resolution.
                </aco-objectives>
                <aco-application-notes>

                    <xref show="title" id="alc_cms.4.1c"/> introduces the
                    requirement that security flaws be included in the
                    configuration list and hence be subject to the CM
                    requirements of <xref show="title" id="alc_cmc"/>. This
                    requires that information regarding previous security
                    flaws and their resolution be maintained, as well as
                    details regarding current security flaws.
                </aco-application-notes>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the configuration list includes the TOE, the parts that
                    comprise the TOE, the TOE implementation representation,
                    security flaws, and the evaluation evidence. These configuration items are
                    controlled in accordance with <xref show="title" id="alc_cmc"/>.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the configuration list.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cms.4.1d">
                    The developer shall provide a configuration list for the
                    TOE.
                </ae-developer>
                <ae-content id="alc_cms.4.1c">
                    The configuration list shall include the following: the TOE
                    itself; the evaluation evidence required by the SARs; the
                    parts that comprise the TOE; the implementation
                    representation; and security flaw reports and resolution
                    status.
                </ae-content>
                <ae-content id="alc_cms.4.2c">
                    The configuration list shall uniquely identify the
                    configuration items.
                </ae-content>
                <ae-content id="alc_cms.4.3c">
                    For each TSF relevant configuration item, the configuration
                    list shall indicate the developer of the item.
                </ae-content>
                <ae-evaluator id="alc_cms.4.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cms.4.1c"/>

                        The evaluator shall check that the configuration list
                        includes the following set of items:
                        <list type="enumerated">
                            <item>
                                the TOE itself;
                            </item>
                            <item>
                                the parts that comprise the TOE;
                            </item>
                            <item>
                                the TOE implementation representation;
                            </item>
                            <item>
                                the evaluation evidence required by the SARs in the
                                ST;
                            </item>
                            <item>
                                the documentation used to record details of reported
                                security flaws associated with the implementation
                                (e.g., problem status reports derived from a
                                developer's problem database).
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cms.4.2c"/>

                        The evaluator shall examine the configuration list to
                        determine that it uniquely identifies each configuration
                        item.

                        The configuration list contains sufficient information
                        to uniquely identify which version of each item has been
                        used (typically a version number). Use of this list will
                        enable the evaluator to check that the correct
                        configuration items, and the correct version of each
                        item, have been used during the evaluation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cms.4.3c"/>

                        The evaluator shall check that the configuration list
                        indicates the developer of each TSF relevant
                        configuration item.

                        If only one developer is involved in the development of
                        the TOE, this work unit is not applicable, and is
                        therefore considered to be satisfied.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Development tools CM coverage" id="alc_cms.5">
                <aco-hierarchical acomponent="alc_cms.4"/>
                <aco-objectives>

                    A CM system can control changes only to those items that
                    have been placed under CM (i.e., the configuration items
                    identified in the configuration list). Placing the TOE
                    itself, the parts that comprise the TOE, the TOE
                    implementation representation and the evaluation evidence
                    required by the other SARs under CM provides assurance
                    that they have been modified in a controlled manner with
                    proper authorisations.

                    Placing security flaws under CM ensures that security flaw
                    reports are not lost or forgotten, and allows a developer
                    to track security flaws to their resolution.

                    Development tools play an important role in ensuring the
                    production of a quality version of the TOE. Therefore, it
                    is important to control modifications to these
                    tools.
                </aco-objectives>
                <aco-application-notes>

                    <xref show="title" id="alc_cms.5.1c"/> introduces the
                    requirement that development tools and other related
                    information be included in the list of configuration items
                    and hence be subject to the CM requirements of <xref show="title" id="alc_cmc"/>. Examples of development tools
                    are programming languages and compilers. Information
                    pertaining to TOE generation items (such as compiler
                    options, generation options, and build options) is an
                    example of information relating to development
                    tools.
                </aco-application-notes>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the configuration list includes the TOE, the parts that
                    comprise the TOE, the TOE implementation representation,
                    security flaws, development tools and related information,
                    and the evaluation evidence. These configuration items are
                    controlled in accordance with <xref show="title" id="alc_cmc"/>.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the configuration list.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_cms.5.1d">
                    The developer shall provide a configuration list for the
                    TOE.
                </ae-developer>
                <ae-content id="alc_cms.5.1c">
                    The configuration list shall include the following: the TOE
                    itself; the evaluation evidence required by the SARs; the
                    parts that comprise the TOE; the implementation
                    representation; security flaw reports and resolution status;
                    and development tools and related information.
                </ae-content>
                <ae-content id="alc_cms.5.2c">
                    The configuration list shall uniquely identify the
                    configuration items.
                </ae-content>
                <ae-content id="alc_cms.5.3c">
                    For each TSF relevant configuration item, the configuration
                    list shall indicate the developer of the item.
                </ae-content>
                <ae-evaluator id="alc_cms.5.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_cms.5.1c"/>

                        The evaluator shall check that the configuration list
                        includes the following set of items:
                        <list type="enumerated">
                            <item>
                                the TOE itself;
                            </item>
                            <item>
                                the parts that comprise the TOE;
                            </item>
                            <item>
                                the TOE implementation representation;
                            </item>
                            <item>
                                the evaluation evidence required by the SARs in the
                                ST;
                            </item>
                            <item>
                                the documentation used to record details of reported
                                security flaws associated with the implementation
                                (e.g., problem status reports derived from a
                                developer's problem database);
                            </item>
                            <item>
                                all tools (incl. test software, if applicable)
                                involved in the development and production of the
                                TOE including the names, versions, configurations
                                and roles of each development tool, and related
                                documentation.
                            </item>
                        </list>
                        For a software TOE, ``development tools'' are usually
                        programming languages and compiler and ``related documentation''
                        comprises compiler and linker options. For a hardware TOE,
                        ``development tools'' might be hardware design languages,
                        simulation and synthesis tools, compilers, and ``related
                        documentation'' might comprise compiler options again.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cms.5.2c"/>

                        The evaluator shall examine the configuration list to
                        determine that it uniquely identifies each configuration
                        item.

                        The configuration list contains sufficient information
                        to uniquely identify which version of each item has been
                        used (typically a version number). Use of this list will
                        enable the evaluator to check that the correct
                        configuration items, and the correct version of each
                        item, have been used during the evaluation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_cms.5.3c"/>

                        The evaluator shall check that the configuration list
                        indicates the developer of each TSF relevant
                        configuration item.

                        If only one developer is involved in the development of
                        the TOE, this work unit is not applicable, and is
                        therefore considered to be satisfied.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Delivery" id="alc_del">
            <af-objectives>

                The concern of this family is the secure transfer of the
                finished TOE from the development environment into the
                responsibility of the user.

                The requirements for delivery call for system control and
                distribution facilities and procedures that detail the
                measures necessary to provide assurance that the security of
                the TOE is maintained during distribution of the TOE to the
                user. For a valid distribution of the TOE, the procedures
                used for the distribution of the TOE address the objectives
                identified in the PP/ST relating to the security of the TOE
                during delivery.
            </af-objectives>
            <af-overview>

                Delivery covers the procedures used to maintain security
                during transfer of the TOE to the user, both on initial
                delivery and as part of subsequent modification. It includes
                special procedures or operations required to demonstrate the
                authenticity of the delivered TOE. Such procedures and
                measures are the basis for ensuring that the security
                protection offered by the TOE is not compromised during
                transfer. While compliance with the delivery requirements
                cannot always be determined when a TOE is evaluated, it is
                possible to evaluate the procedures that a developer has
                developed to distribute the TOE to users.
            </af-overview>
            <af-levelling-criteria>

                This family contains only one component. An increasing level
                of protection is established by requiring commensurability
                of the delivery procedures with the assumed attack potential
                in the family <xref show="title" id="ava_van"/>.
            </af-levelling-criteria>
            <af-application-notes>

                Transportations from subcontractors to the developer or
                between different development sites are not considered here,
                but in the family <xref show="title" id="alc_dvs"/>.

                The end of the delivery phase is marked by the transfer of
                the TOE into the responsibility of the user. This does not
                necessarily coincide with the arrival of the TOE at the
                user's location.

                The delivery procedures should consider, if applicable,
                issues such as:
                <list type="enumerated">
                    <item>
                        ensuring that the TOE received by the consumer
                        corresponds precisely to the evaluated version of the
                        TOE;
                    </item>
                    <item>
                        avoiding or detecting any tampering with the actual
                        version of the TOE;
                    </item>
                    <item>
                        preventing submission of a false version of the TOE;
                    </item>
                    <item>
                        avoiding unwanted knowledge of distribution of the TOE
                        to the consumer: there might be cases where potential
                        attackers should not know when and how it is delivered;
                    </item>
                    <item>
                        avoiding or detecting the TOE being intercepted during
                        delivery; and
                    </item>
                    <item>
                        avoiding the TOE being delayed or stopped during
                        distribution.
                    </item>
                </list>

                The delivery procedures should include the recipient's
                actions implied by these issues. The consistent description
                of these implied actions is examined in the <xref show="title" id="agd_pre"/> family, if present.
            </af-application-notes>
            <a-component name="Delivery procedures" id="alc_del.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the delivery documentation describes all procedures used
                    to maintain security of the TOE when distributing the TOE
                    to the user.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the delivery documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_del.1.1d">
                    The developer shall document and provide procedures for delivery of the
                    TOE or parts of it to the consumer.
                </ae-developer>
                <ae-developer id="alc_del.1.2d">
                    The developer shall use the delivery procedures.
                    <m-workunit id="alc_del.1-2">

                        The evaluator shall examine aspects of the delivery
                        process to determine that the delivery procedures are
                        used.

                        The approach taken by the evaluator to check the
                        application of delivery procedures will depend on the
                        nature of the TOE, and the delivery process itself. In
                        addition to examination of the procedures themselves,
                        the evaluator seeks some assurance that they are applied
                        in practise. Some possible approaches are:
                        <list type="enumerated">
                            <item>
                                a visit to the distribution site(s) where practical
                                application of the procedures may be observed;
                            </item>
                            <item>
                                examination of the TOE at some stage during
                                delivery, or after the user has received it
                                (e.g. checking for tamper proof seals);
                            </item>
                            <item>
                                observing that the process is applied in practise
                                when the evaluator obtains the TOE through regular
                                channels;
                            </item>
                            <item>
                                questioning end users as to how the TOE was
                                delivered.
                            </item>
                        </list>

                        For guidance on site visits see <xref show="title" id="eval-guidance-site-visits"/>.

                        It may be the case of a newly developed TOE that the
                        delivery procedures have yet to be exercised. In these
                        cases, the evaluator has to be satisfied that
                        appropriate procedures and facilities are in place for
                        future deliveries and that all personnel involved are
                        aware of their responsibilities. The evaluator may
                        request a ``dry run'' of a delivery if this is
                        practical. If the developer has produced other similar
                        products, then an examination of procedures in their use
                        may be useful in providing assurance.
                    </m-workunit>
                </ae-developer>
                <ae-content id="alc_del.1.1c">
                    The delivery documentation shall describe all procedures
                    that are necessary to maintain security when distributing
                    versions of the TOE to the consumer.
                </ae-content>
                <ae-evaluator id="alc_del.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="alc_del.1-1">
                        <ae-dc-element id="alc_del.1.1c"/>

                        The evaluator shall examine the delivery documentation
                        to determine that it describes all procedures that are
                        necessary to maintain security when distributing
                        versions of the TOE or parts of it to the
                        consumer.

                        The delivery documentation describes proper procedures
                        to maintain security of the TOE during transfer of the
                        TOE or its component parts and to determine the
                        identification of the TOE.

                        The delivery documentation should cover the entire TOE,
                        but may contain different procedures for different parts
                        of the TOE. The evaluation should consider the totality
                        of procedures.

                        The delivery procedures should be applicable across all
                        phases of delivery from the production environment to
                        the installation environment (e.g. packaging, storage
                        and distribution). Standard commercial practise for
                        packaging and delivery may be acceptable. This includes
                        shrink wrapped packaging, a security tape or a sealed
                        envelope. For the distribution, physical (e.g. public
                        mail or a private distribution service) or electronic
                        (e.g. electronic mail or downloading off the Internet)
                        procedures may be used.

                        Cryptographic checksums or a software signature may be
                        used by the developer to ensure that tampering or
                        masquerading can be detected. Tamper proof seals
                        additionally indicate if the confidentiality has been
                        broken. For software TOEs, confidentiality might be
                        assured by using encryption. If availability is of
                        concern, a secure transportation might be
                        required.

                        Interpretation of the term ``necessary to maintain
                        security'' will need to consider:
                        <list type="itemized">
                            <item>
                                The nature of the TOE (e.g. whether it is software
                                or hardware).
                            </item>
                            <item>
                                The overall security level stated for the TOE by the
                                chosen level of the Vulnerability Assessment. If the
                                TOE is required to be resistant against attackers of
                                a certain potential in its intended environment,
                                this should also apply to the delivery of the
                                TOE. The evaluator should determine that a balanced
                                approach has been taken, such that delivery does not
                                present a weak point in an otherwise secure
                                development process.
                            </item>
                            <item>
                                The security objectives provided by the ST. The emphasis in the
                                delivery documentation is likely to be on measures related to
                                integrity, as integrity of the TOE is always important. However,
                                confidentiality and availability of the delivery will be of
                                concern in the delivery of some TOEs; procedures relating to
                                these aspects of the secure delivery should also be discussed in
                                the procedures.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Development security" id="alc_dvs">
            <af-objectives>

                Development security is concerned with physical, procedural,
                personnel, and other security measures that may be used in
                the development environment to protect the TOE and its
                parts. It includes the physical security of the development
                location and any procedures used to select development
                staff.
            </af-objectives>
            <af-overview>

                Development security covers the physical, procedural,
                personnel, and other security measures used in the
                development environment. It includes physical security of
                the development location(s) and controls on the selection
                and hiring of development staff.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                whether justification of the sufficiency of the security
                measures is required.
            </af-levelling-criteria>
            <af-application-notes>

                This family deals with measures to remove or reduce threats
                existing at the developer's site.

                The evaluator should visit the site(s) in order to assess
                evidence for development security. This may include sites of
                subcontractors involved in the TOE development and
                production. Any decision not to visit shall be agreed with
                the evaluation authority.

                Although development security deals with the maintenance of
                the TOE and hence with aspects becoming relevant after the
                completion of the evaluation, the <xref show="title" id="alc_dvs"/> requirements specify only that the
                development security measures be in place at the time of
                evaluation. Furthermore, <xref show="title" id="alc_dvs"/>
                does not contain any requirements related to the sponsor's
                intention to apply the development security measures in the
                future, after completion of the evaluation.

                It is recognised that confidentiality may not always be an
                issue for the protection of the TOE in its development
                environment. The use of the word ``necessary'' allows for
                the selection of appropriate safeguards.
            </af-application-notes>
            <a-component name="Identification of security measures" id="alc_dvs.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer's security controls on the development
                    environment are adequate to provide the confidentiality
                    and integrity of the TOE design and implementation that is
                    necessary to ensure that secure operation of the TOE is
                    not compromised.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the development security documentation.
                        </item>
                    </list>

                    In addition, the evaluator may need to examine other
                    deliverables to determine that the security controls are
                    well-defined and followed. Specifically, the evaluator may
                    need to examine the developer's configuration management
                    documentation (the input for the <xref show="title" id="alc_cmc.4"/> ``Production support and acceptance
                    procedures'' and the <xref show="title" id="alc_cms.4"/>
                    ``Problem tracking CM coverage''). Evidence that the
                    procedures are being applied is also required.
                </msa-input>
                <ae-developer id="alc_dvs.1.1d">
                    The developer shall produce and provide development security
                    documentation.
                </ae-developer>
                <ae-content id="alc_dvs.1.1c">
                    The development security documentation shall describe all
                    the physical, procedural, personnel, and other security
                    measures that are necessary to protect the confidentiality
                    and integrity of the TOE design and implementation in its
                    development environment.
                </ae-content>
                <ae-evaluator id="alc_dvs.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="alc_dvs.1-1">
                        <ae-dc-element id="alc_dvs.1.1c"/>

                        The evaluator shall examine the development security
                        documentation to determine that it details all security
                        measures used in the development environment that are
                        necessary to protect the confidentiality and integrity
                        of the TOE design and implementation.

                        The evaluator determines what is necessary by first referring to
                        the ST for any information that may assist in the determination
                        of necessary protection.

                        If no explicit information is available from the ST the
                        evaluator will need to make a determination of the
                        necessary measures. In cases where the developer's
                        measures are considered less than what is necessary, a
                        clear justification should be provided for the
                        assessment, based on a potential exploitable
                        vulnerability.

                        The following types of security measures are considered
                        by the evaluator when examining the documentation:
                        <list type="enumerated">
                            <item>
                                physical, for example physical access controls used
                                to prevent unauthorised access to the TOE
                                development environment (during normal working hours
                                and at other times);
                            </item>
                            <item>
                                procedural, for example covering:
                                <list type="itemized">
                                    <item>
                                        granting of access to the development
                                        environment or to specific parts of the
                                        environment such as development machines
                                    </item>
                                    <item>
                                        revocation of access rights when a person leaves
                                        the development team
                                    </item>
                                    <item>
                                        transfer of protected material within and out of
                                        the development environment and between
                                        different development sites in accordance with
                                        defined acceptance procedures
                                    </item>
                                    <item>
                                        admitting and escorting visitors to the
                                        development environment
                                    </item>
                                    <item>
                                        roles and responsibilities in ensuring the
                                        continued application of security measures, and
                                        the detection of security breaches.
                                    </item>
                                </list>
                            </item>
                            <item>
                                personnel, for example any controls or checks made
                                to establish the trustworthiness of new development
                                staff;
                            </item>
                            <item>
                                other security measures, for example the logical
                                protections on any development machines.
                            </item>
                        </list>

                        The development security documentation should identify
                        the locations at which development occurs, and describe
                        the aspects of development performed, along with the
                        security measures applied at each location and for
                        transports between different locations. For example,
                        development could occur at multiple facilities within a
                        single building, multiple buildings at the same site, or
                        at multiple sites. Transports of parts of the TOE or the
                        unfinished TOE between different development sites are
                        to be covered by <xref show="title" id="alc_dvs"/>,
                        whereas the transport of the finished TOE to the
                        consumer is dealt with in <xref show="title" id="alc_del"/>.

                        Development includes the production of the TOE.
                    </m-workunit>
                    <m-workunit id="alc_dvs.1-2">
                        <ae-dc-element id="alc_dvs.1.1c"/>

                        The evaluator shall examine the development
                        confidentiality and integrity policies in order to
                        determine the sufficiency of the security measures
                        employed.

                        The evaluator should examine whether the following is included
                        in the policies:
                        <list type="enumerated"><item>
                            what information relating to the TOE development needs to be
                            kept confidential, and which members of the development
                            staff are allowed to access such material;
                        </item><item>
                            what material must be protected from unauthorised
                            modification in order to preserve the integrity of
                            the TOE, and which members of the development staff
                            are allowed to modify such material.
                        </item></list>

                        The evaluator should determine that these policies are
                        described in the development security documentation,
                        that the security measures employed are consistent with
                        the policies, and that they are complete.

                        It should be noted that configuration management
                        procedures will help protect the integrity of the TOE
                        and the evaluator should avoid overlap with the
                        work-units conducted for the <xref show="title" id="alc_cmc"/>. For example, the CM documentation may
                        describe the security procedures necessary for
                        controlling the roles or individuals who should have
                        access to the development environment and who may modify
                        the TOE.

                        Whereas the <xref show="title" id="alc_cmc"/>
                        requirements are fixed, those for the <xref show="title" id="alc_dvs"/>,
                        mandating only necessary measures, are dependent on the nature of the TOE,
                        and on information that may be provided in the ST. The evaluators would
                        then determine that such a policy had been applied under this sub-activity.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="alc_dvs.1.2e">
                    The evaluator shall confirm that the security measures are
                    being applied.
                    <m-workunit id="alc_dvs.1-3">

                        The evaluator shall examine the development security
                        documentation and associated evidence to determine that
                        the security measures are being applied.

                        This work unit requires the evaluator to determine that
                        the security measures described in the development
                        security documentation are being followed, such that the
                        integrity of the TOE and the confidentiality of
                        associated documentation is being adequately
                        protected. For example, this could be determined by
                        examination of the documentary evidence
                        provided. Documentary evidence should be supplemented by
                        visiting the development environment. A visit to the
                        development environment will allow the evaluator to:
                        <list type="enumerated">
                            <item>
                                observe the application of security measures
                                (e.g. physical measures);
                            </item>
                            <item>
                                examine documentary evidence of application of
                                procedures;
                            </item>
                            <item>
                                interview development staff to check awareness of
                                the development security policies and procedures,
                                and their responsibilities.
                            </item>
                        </list>

                        A development site visit is a useful means of gaining
                        confidence in the measures being used. Any decision not
                        to make such a visit should be determined in
                        consultation with the evaluation authority.

                        For guidance on site visits see <xref show="title" id="eval-guidance-site-visits"/>.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Sufficiency of security measures" id="alc_dvs.2">
                <aco-hierarchical acomponent="alc_dvs.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer's security controls on the development
                    environment are adequate to provide the confidentiality
                    and integrity of the TOE design and implementation that is
                    necessary to ensure that secure operation of the TOE is
                    not compromised. Additionally, sufficiency of the measures
                    as applied is intended be justified.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the development security documentation.
                        </item>
                    </list>

                    In addition, the evaluator may need to examine other
                    deliverables to determine that the security controls are
                    well-defined and followed. Specifically, the evaluator may
                    need to examine the developer's configuration management
                    documentation (the input for the <xref show="title" id="alc_cmc.4"/> ``Production support and acceptance
                    procedures'' and the <xref show="title" id="alc_cms.4"/>
                    ``Problem tracking CM coverage''). Evidence that the
                    procedures are being applied is also required.
                </msa-input>
                <ae-developer id="alc_dvs.2.1d">
                    The developer shall produce and provide development security
                    documentation.
                </ae-developer>
                <ae-content id="alc_dvs.2.1c">
                    The development security documentation shall describe all
                    the physical, procedural, personnel, and other security
                    measures that are necessary to protect the confidentiality
                    and integrity of the TOE design and implementation in its
                    development environment.
                </ae-content>
                <ae-content id="alc_dvs.2.2c">
                    The development security documentation shall justify that
                    the security measures provide the necessary level of
                    protection to maintain the confidentiality and integrity of
                    the TOE.
                </ae-content>
                <ae-evaluator id="alc_dvs.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="alc_dvs.2-1">
                        <ae-dc-element id="alc_dvs.2.1c"/>

                        The evaluator shall examine the development security
                        documentation to determine that it details all security
                        measures used in the development environment that are
                        necessary to protect the confidentiality and integrity
                        of the TOE design and implementation.

                        The evaluator determines what is necessary by first referring to
                        the ST for any information that may assist in the determination
                        of necessary protection.

                        If no explicit information is available from the ST the
                        evaluator will need to make a determination of the
                        necessary measures. In cases where the developer's
                        measures are considered less than what is necessary, a
                        clear justification should be provided for the
                        assessment, based on a potential exploitable
                        vulnerability.

                        The following types of security measures are considered
                        by the evaluator when examining the documentation:
                        <list type="enumerated">
                            <item>
                                physical, for example physical access controls used
                                to prevent unauthorised access to the TOE
                                development environment (during normal working hours
                                and at other times);
                            </item>
                            <item>
                                procedural, for example covering:
                                <list type="itemized">
                                    <item>
                                        granting of access to the development
                                        environment or to specific parts of the
                                        environment such as development machines
                                    </item>
                                    <item>
                                        revocation of access rights when a person leaves
                                        the development team
                                    </item>
                                    <item>
                                        transfer of protected material out of the
                                        development environment and between different
                                        development sites in accordance with defined
                                        acceptance procedures
                                    </item>
                                    <item>
                                        admitting and escorting visitors to the
                                        development environment
                                    </item>
                                    <item>
                                        roles and responsibilities in ensuring the
                                        continued application of security measures, and
                                        the detection of security breaches.
                                    </item>
                                </list>
                            </item>
                            <item>
                                personnel, for example any controls or checks made
                                to establish the trustworthiness of new development
                                staff;
                            </item>
                            <item>
                                other security measures, for example the logical
                                protections on any development machines.
                            </item>
                        </list>

                        The development security documentation should identify
                        the locations at which development occurs, and describe
                        the aspects of development performed, along with the
                        security measures applied at each location and for
                        transports between different locations. For example,
                        development could occur at multiple facilities within a
                        single building, multiple buildings at the same site, or
                        at multiple sites. Transports of parts of the TOE or the
                        unfinished TOE between different development sites are
                        to be covered by the <xref show="title" id="alc_dvs"/>,
                        whereas the transport of the finished TOE to the
                        consumer is dealt with in the <xref show="title" id="alc_del"/>.

                        Development includes the production of the TOE.
                    </m-workunit>
                    <m-workunit id="alc_dvs.2-2">
                        <ae-dc-element id="alc_dvs.2.2c"/>

                        The evaluator shall examine the development security
                        documentation to determine that an appropriate
                        justification is given why the security measures provide
                        the necessary level of protection to maintain the
                        confidentiality and integrity of the TOE.

                        Since attacks on the TOE or its related information are
                        assumed in different design and production stages,
                        measures and procedures need to have an appropriate
                        level necessary to prevent those attacks or to make them
                        more difficult.

                        Since this level depends on the overall attack potential
                        claimed for the TOE (cf. the <xref show="title" id="ava_van"/> component chosen), the development
                        security documentation should justify the necessary
                        level of protection to maintain the confidentiality and
                        integrity of the TOE. This level has to be achieved by
                        the security measures applied.

                        The concept of protection measures should be consistent,
                        and the justification should include an analysis of how
                        the measures are mutually supportive. All aspects of
                        development and production on all the different sites
                        with all roles involved up to delivery of the TOE should
                        be analysed.

                        Justification may include an analysis of potential
                        vulnerabilities taking the applied security measures
                        into account.

                        There may be a convincing argument showing that e.g.
                        <list type="itemized">
                            <item>
                                The technical measures and mechanisms of the
                                developer's infrastructure are sufficient for
                                keeping the appropriate security level
                                (e.g. cryptographic mechanisms as well as physical
                                protection mechanisms, properties of the CM system
                                (cf. <xref show="title" id="alc_cmc.4-5"/>));</item>
                            <item>
                                The system containing the implementation
                                representation of the TOE (including concerning
                                guidance documents) provides effective protection
                                against logical attacks e.g. by ``Trojan'' code or
                                viruses. It might be adequate, if the implementation
                                representation is kept on an isolated system where
                                only the software necessary to maintain it is
                                installed and where no additional software is
                                installed afterwards.</item>
                            <item>
                                Data brought into this system need to be carefully considered to
                                prevent the installation of hidden functionality onto the
                                system. The effectiveness of these measures need to be tested,
                                e.g. by independently trying to get access to the machine,
                                install some additional executable (program, macro etc.) or get
                                some information out of the machine using logical
                                attacks.</item>
                            <item>
                                The appropriate organisational (procedural and
                                personal) measures are unconditionally
                                enforced.</item></list>
                    </m-workunit>
                    <m-workunit id="alc_dvs.2-3">
                        <ae-dc-element id="alc_dvs.2.2c"/>

                        The evaluator shall examine the development
                        confidentiality and integrity policies in order to
                        determine the sufficiency of the security measures
                        employed.

                        The evaluator should examine whether the following is included
                        in the policies:
                        <list type="enumerated"><item>
                            what information relating to the TOE development needs to be
                            kept confidential, and which members of the development
                            staff are allowed to access such material;
                        </item><item>
                            what material must be protected from unauthorised
                            modification in order to preserve the integrity of
                            the TOE, and which members of the development staff
                            are allowed to modify such material.
                        </item></list>

                        The evaluator should determine that these policies are
                        described in the development security documentation,
                        that the security measures employed are consistent with
                        the policies, and that they are complete.

                        It should be noted that configuration management
                        procedures will help protect the integrity of the TOE
                        and the evaluator should avoid overlap with the
                        work-units conducted for the <xref show="title" id="alc_cmc"/>. For example, the CM documentation may
                        describe the security procedures necessary for
                        controlling the roles or individuals who should have
                        access to the development environment and who may modify
                        the TOE.

                        Whereas the <xref show="title" id="alc_cmc"/>
                        requirements are fixed, those for the <xref show="title" id="alc_dvs"/>, mandating only necessary measures, are
                        dependent on the nature of the TOE, and on information
                        that may be provided in the ST. For example, the ST may
                        identify a security objective for the development
                        environment that requires the TOE to be developed by
                        staff that has security clearance. The evaluators would
                        then determine that such a policy had been applied under
                        this sub-activity.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="alc_dvs.2.2e">
                    The evaluator shall confirm that the security measures are
                    being applied.
                    <m-workunit id="alc_dvs.2-4">

                        The evaluator shall examine the development security
                        documentation and associated evidence to determine that
                        the security measures are being applied.

                        This work unit requires the evaluator to determine that
                        the security measures described in the development
                        security documentation are being followed, such that the
                        integrity of the TOE and the confidentiality of
                        associated documentation is being adequately
                        protected. For example, this could be determined by
                        examination of the documentary evidence
                        provided. Documentary evidence should be supplemented by
                        visiting the development environment. A visit to the
                        development environment will allow the evaluator to:
                        <list type="enumerated">
                            <item>
                                observe the application of security measures
                                (e.g. physical measures);
                            </item>
                            <item>
                                examine documentary evidence of application of
                                procedures;
                            </item>
                            <item>
                                interview development staff to check awareness of
                                the development security policies and procedures,
                                and their responsibilities.
                            </item>
                        </list>

                        A development site visit is a useful means of gaining
                        confidence in the measures being used. Any decision not
                        to make such a visit should be determined in
                        consultation with the evaluation authority.

                        For guidance on site visits see <xref show="title" id="eval-guidance-site-visits"/>.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Flaw remediation" id="alc_flr">
            <af-objectives>

                Flaw remediation requires that discovered security flaws be
                tracked and corrected by the developer. Although future
                compliance with flaw remediation procedures cannot be
                determined at the time of the TOE evaluation, it is possible
                to evaluate the policies and procedures that a developer has
                in place to track and correct flaws, and to distribute the
                flaw information and corrections.
            </af-objectives>
            <af-overview>

                Flaw remediation ensures that flaws discovered by the TOE
                consumers will be tracked and corrected while the TOE is
                supported by the developer. While future compliance with the
                flaw remediation requirements cannot be determined when a
                TOE is evaluated, it is possible to evaluate the procedures
                and policies that a developer has in place to track and
                repair flaws, and to distribute the repairs to
                consumers.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                the increasing extent in scope of the flaw remediation
                procedures and the rigour of the flaw remediation
                policies.
            </af-levelling-criteria>
            <af-application-notes>

                This family provides assurance that the TOE will be
                maintained and supported in the future, requiring the TOE
                developer to track and correct flaws in the
                TOE. Additionally, requirements are included for the
                distribution of flaw corrections. However, this family does
                not impose evaluation requirements beyond the current
                evaluation.

                The TOE user is considered to be the focal point in the user
                organisation that is responsible for receiving and
                implementing fixes to security flaws. This is not
                necessarily an individual user, but may be an organisational
                representative who is responsible for the handling of
                security flaws. The use of the term TOE user recognises that
                different organisations have different procedures for
                handling flaw reporting, which may be done either by an
                individual user, or by a central administrative body.

                The flaw remediation procedures should describe the methods
                for dealing with all types of flaws encountered. These flaws
                may be reported by the developer, by users of the TOE, or by
                other parties with familiarity with the TOE. Some flaws may
                not be reparable immediately. There may be some occasions
                where a flaw cannot be fixed and other (e.g. procedural)
                measures must be taken. The documentation provided should
                cover the procedures for providing the operational sites
                with fixes, and providing information on flaws where fixes
                are delayed (and what to do in the interim) or when fixes
                are not possible.

                Changes applied to a TOE after its release render it
                unevaluated; although some information from the original
                evaluation may still apply. The phrase ``release of the
                TOE'' used in this family therefore refers to a version of a
                product that is a release of a certified TOE, to which
                changes have been applied.
            </af-application-notes>
            <a-component name="Basic flaw remediation" id="alc_flr.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has established flaw remediation procedures
                    that describe the tracking of security flaws, the
                    identification of corrective actions, and the distribution
                    of corrective action information to TOE users.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the flaw remediation procedures documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_flr.1.1d">
                    The developer shall document and provide flaw remediation procedures
                    addressed to TOE developers.
                </ae-developer>
                <ae-content id="alc_flr.1.1c">
                    The flaw remediation procedures documentation shall describe
                    the procedures used to track all reported security flaws in
                    each release of the TOE.
                </ae-content>
                <ae-content id="alc_flr.1.2c">
                    The flaw remediation procedures shall require that a
                    description of the nature and effect of each security flaw
                    be provided, as well as the status of finding a correction
                    to that flaw.
                </ae-content>
                <ae-content id="alc_flr.1.3c">
                    The flaw remediation procedures shall require that
                    corrective actions be identified for each of the security
                    flaws.
                </ae-content>
                <ae-content id="alc_flr.1.4c">
                    The flaw remediation procedures documentation shall describe
                    the methods used to provide flaw information, corrections
                    and guidance on corrective actions to TOE users.
                </ae-content>
                <ae-evaluator id="alc_flr.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="alc_flr.1-1">
                        <ae-dc-element id="alc_flr.1.1c"/>

                        The evaluator shall examine the flaw remediation
                        procedures documentation to determine that it describes
                        the procedures used to track all reported security flaws
                        in each release of the TOE.

                        The procedures describe the actions that are taken by
                        the developer from the time each suspected security flaw
                        is reported to the time that it is resolved. This
                        includes the flaw's entire time frame, from initial
                        detection through ascertaining that the flaw is a
                        security flaw, to resolution of the security
                        flaw.

                        If a flaw is discovered not to be security-relevant,
                        there is no need (for the purposes of the <xref show="title" id="alc_flr"/> requirements) for the flaw
                        remediation procedures to track it further; only that
                        there be an explanation of why the flaw is not
                        security-relevant.

                        While these requirements do not mandate that there be a
                        publicised means for TOE users to report security flaws,
                        they do mandate that all security flaws that are
                        reported be tracked. That is, a reported security flaw
                        cannot be ignored simply because it comes from outside
                        the developer's organisation.
                    </m-workunit>
                    <m-workunit id="alc_flr.1-2">
                        <ae-dc-element id="alc_flr.1.2c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would produce a description of each security
                        flaw in terms of its nature and effects.

                        The procedures identify the actions that are taken by
                        the developer to describe the nature and effects of each
                        security flaw in sufficient detail to be able to
                        reproduce it. The description of the nature of a
                        security flaw addresses whether it is an error in the
                        documentation, a flaw in the design of the TSF, a flaw
                        in the implementation of the TSF, etc. The description
                        of the security flaw's effects identifies the portions
                        of the TSF that are affected and how those portions are
                        affected. For example, a security flaw in the
                        implementation might be found that affects the
                        identification and authentication enforced by the TSF by
                        permitting authentication with the password
                        ``BACK DOOR''.
                    </m-workunit>
                    <m-workunit id="alc_flr.1-3">
                        <ae-dc-element id="alc_flr.1.2c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would identify the status of finding a
                        correction to each security flaw.

                        The flaw remediation procedures identify the different
                        stages of security flaws. This differentiation includes
                        at least: suspected security flaws that have been
                        reported, suspected security flaws that have been
                        confirmed to be security flaws, and security flaws whose
                        solutions have been implemented. It is permissible that
                        additional stages (e.g. flaws that have been reported
                        but not yet investigated, flaws that are under
                        investigation, security flaws for which a solution has
                        been found but not yet implemented) be included.
                    </m-workunit>
                    <m-workunit id="alc_flr.1-4">
                        <ae-dc-element id="alc_flr.1.3c"/>

                        The evaluator shall check the flaw remediation
                        procedures to determine that the application of these
                        procedures would identify the corrective action for each
                        security flaw.

                        <italic>Corrective action</italic> may consist of a
                        repair to the hardware, firmware, or software portions
                        of the TOE, a modification of TOE guidance, or
                        both. Corrective action that constitutes modifications
                        to TOE guidance (e.g. details of procedural measures to
                        be taken to obviate the security flaw) includes both
                        those measures serving as only an interim solution
                        (until the repair is issued) as well as those serving as
                        a permanent solution (where it is determined that the
                        procedural measure is the best solution).

                        If the source of the security flaw is a documentation
                        error, the corrective action consists of an update of
                        the affected TOE guidance. If the corrective action is a
                        procedural measure, this measure will include an update
                        made to the affected TOE guidance to reflect these
                        corrective procedures.
                    </m-workunit>
                    <m-workunit id="alc_flr.1-5">
                        <ae-dc-element id="alc_flr.1.4c"/>

                        The evaluator shall examine the flaw remediation
                        procedures documentation to determine that it describes
                        a means of providing the TOE users with the necessary
                        information on each security flaw.

                        The <italic>necessary information</italic> about each
                        security flaw consists of its description (not
                        necessarily at the same level of detail as that provided
                        as part of work unit <xref show="title" id="alc_flr.1-2"/>), the prescribed corrective action,
                        and any associated guidance on implementing the
                        correction.

                        TOE users may be provided with such information,
                        correction, and documentation updates in any of several
                        ways, such as their posting to a website, their being
                        sent to TOE users, or arrangements made for the
                        developer to install the correction. In cases where the
                        means of providing this information requires action to
                        be initiated by the TOE user, the evaluator examines any
                        TOE guidance to ensure that it contains instructions for
                        retrieving the information.

                        The only metric for assessing the adequacy of the method
                        used for providing the information, corrections and
                        guidance is that there be a reasonable expectation that
                        TOE users can obtain or receive it. For example,
                        consider the method of dissemination where the requisite
                        data is posted to a website for one month, and the TOE
                        users know that this will happen and when this will
                        happen. This may not be especially reasonable or
                        effective (as, say, a permanent posting to the website),
                        yet it is feasible that the TOE user could obtain the
                        necessary information. On the other hand, if the
                        information were posted to the website for only one
                        hour, yet TOE users had no way of knowing this or when
                        it would be posted, it is infeasible that they would
                        ever get the necessary information.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Flaw reporting procedures" id="alc_flr.2">
                <aco-hierarchical acomponent="alc_flr.1"/>
                <aco-objectives>

                    In order for the developer to be able to act appropriately
                    upon security flaw reports from TOE users, and to know to
                    whom to send corrective fixes, TOE users need to
                    understand how to submit security flaw reports to the
                    developer. Flaw remediation guidance from the developer to
                    the TOE user ensures that TOE users are aware of this
                    important information.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has established flaw remediation procedures
                    that describe the tracking of security flaws, the
                    identification of corrective actions, and the distribution
                    of corrective action information to TOE
                    users. Additionally, this sub-activity determines whether
                    the developer's procedures provide for the corrections of
                    security flaws, for the receipt of flaw reports from TOE
                    users, and for assurance that the corrections introduce no
                    new security flaws.

                    In order for the developer to be able to act appropriately
                    upon security flaw reports from TOE users, TOE users need
                    to understand how to submit security flaw reports to the
                    developer, and developers need to know how to receive
                    these reports. Flaw remediation guidance addressed to the
                    TOE user ensures that TOE users are aware of how to
                    communicate with the developer; flaw remediation
                    procedures describe the developer's role is such
                    communication
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the flaw remediation procedures documentation;
                        </item>
                        <item>
                            flaw remediation guidance documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_flr.2.1d">
                    The developer shall document and provide flaw remediation procedures
                    addressed to TOE developers.
                </ae-developer>
                <ae-developer id="alc_flr.2.2d">
                    The developer shall establish a procedure for accepting and
                    acting upon all reports of security flaws and requests for
                    corrections to those flaws.
                </ae-developer>
                <ae-developer id="alc_flr.2.3d">
                    The developer shall provide flaw remediation guidance
                    addressed to TOE users.
                </ae-developer>
                <ae-content id="alc_flr.2.1c">
                    The flaw remediation procedures documentation shall describe
                    the procedures used to track all reported security flaws in
                    each release of the TOE.
                </ae-content>
                <ae-content id="alc_flr.2.2c">
                    The flaw remediation procedures shall require that a
                    description of the nature and effect of each security flaw
                    be provided, as well as the status of finding a correction
                    to that flaw.
                </ae-content>
                <ae-content id="alc_flr.2.3c">
                    The flaw remediation procedures shall require that
                    corrective actions be identified for each of the security
                    flaws.
                </ae-content>
                <ae-content id="alc_flr.2.4c">
                    The flaw remediation procedures documentation shall describe
                    the methods used to provide flaw information, corrections
                    and guidance on corrective actions to TOE users.
                </ae-content>
                <ae-content id="alc_flr.2.5c">
                    The flaw remediation procedures shall describe a means by
                    which the developer receives from TOE users reports and
                    enquiries of suspected security flaws in the TOE.
                </ae-content>
                <ae-content id="alc_flr.2.6c">
                    The procedures for processing reported security flaws shall
                    ensure that any reported flaws are remediated and the
                    remediation procedures issued to TOE users.
                </ae-content>
                <ae-content id="alc_flr.2.7c">
                    The procedures for processing reported security flaws shall
                    provide safeguards that any corrections to these security
                    flaws do not introduce any new flaws.
                </ae-content>
                <ae-content id="alc_flr.2.8c">
                    The flaw remediation guidance shall describe a means by
                    which TOE users report to the developer any suspected
                    security flaws in the TOE.
                </ae-content>
                <ae-evaluator id="alc_flr.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="alc_flr.2-1">
                        <ae-dc-element id="alc_flr.2.1c"/>

                        The evaluator shall examine the flaw remediation
                        procedures documentation to determine that it describes
                        the procedures used to track all reported security flaws
                        in each release of the TOE.

                        The procedures describe the actions that are taken by
                        the developer from the time each suspected security flaw
                        is reported to the time that it is resolved. This
                        includes the flaw's entire time frame, from initial
                        detection through ascertaining that the flaw is a
                        security flaw, to resolution of the security
                        flaw.

                        If a flaw is discovered not to be security-relevant,
                        there is no need (for the purposes of the <xref show="title" id="alc_flr"/> requirements) for the flaw
                        remediation procedures to track it further; only that
                        there be an explanation of why the flaw is not
                        security-relevant.
                    </m-workunit>
                    <m-workunit id="alc_flr.2-2">
                        <ae-dc-element id="alc_flr.2.2c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would produce a description of each security
                        flaw in terms of its nature and effects.

                        The procedures identify the actions that are taken by
                        the developer to describe the nature and effects of each
                        security flaw in sufficient detail to be able to
                        reproduce it. The description of the nature of a
                        security flaw addresses whether it is an error in the
                        documentation, a flaw in the design of the TSF, a flaw
                        in the implementation of the TSF, etc. The description
                        of the security flaw's effects identifies the portions
                        of the TSF that are affected and how those portions are
                        affected. For example, a security flaw in the
                        implementation might be found that affects the
                        identification and authentication enforced by the TSF by
                        permitting authentication with the password
                        ``BACKDOOR''.
                    </m-workunit>
                    <m-workunit id="alc_flr.2-3">
                        <ae-dc-element id="alc_flr.2.2c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would identify the status of finding a
                        correction to each security flaw.

                        The flaw remediation procedures identify the different
                        stages of security flaws. This differentiation includes
                        at least: suspected security flaws that have been
                        reported, suspected security flaws that have been
                        confirmed to be security flaws, and security flaws whose
                        solutions have been implemented. It is permissible that
                        additional stages (e.g. flaws that have been reported
                        but not yet investigated, flaws that are under
                        investigation, security flaws for which a solution has
                        been found but not yet implemented) be included.
                    </m-workunit>
                    <m-workunit id="alc_flr.2-4">
                        <ae-dc-element id="alc_flr.2.3c"/>

                        The evaluator shall check the flaw remediation
                        procedures to determine that the application of these
                        procedures would identify the corrective action for each
                        security flaw.

                        <italic>Corrective action</italic> may consist of a
                        repair to the hardware, firmware, or software portions
                        of the TOE, a modification of TOE guidance, or
                        both. Corrective action that constitutes modifications
                        to TOE guidance (e.g. details of procedural measures to
                        be taken to obviate the security flaw) includes both
                        those measures serving as only an interim solution
                        (until the repair is issued) as well as those serving as
                        a permanent solution (where it is determined that the
                        procedural measure is the best solution).

                        If the source of the security flaw is a documentation
                        error, the corrective action consists of an update of
                        the affected TOE guidance. If the corrective action is a
                        procedural measure, this measure will include an update
                        made to the affected TOE guidance to reflect these
                        corrective procedures.
                    </m-workunit>
                    <m-workunit id="alc_flr.2-5">
                        <ae-dc-element id="alc_flr.2.4c"/>

                        The evaluator shall examine the flaw remediation
                        procedures documentation to determine that it describes
                        a means of providing the TOE users with the necessary
                        information on each security flaw.

                        <italic>The necessary information</italic> about each
                        security flaw consists of its description (not
                        necessarily at the same level of detail as that provided
                        as part of work unit <xref show="title" id="alc_flr.2-2"/>), the prescribed corrective action,
                        and any associated guidance on implementing the
                        correction.

                        TOE users may be provided with such information,
                        correction, and documentation updates in any of several
                        ways, such as their posting to a website, their being
                        sent to TOE users, or arrangements made for the
                        developer to install the correction. In cases where the
                        means of providing this information requires action to
                        be initiated by the TOE user, the evaluator examines any
                        TOE guidance to ensure that it contains instructions for
                        retrieving the information.

                        The only metric for assessing the adequacy of the method
                        used for providing the information, corrections and
                        guidance is that there be a reasonable expectation that
                        TOE users can obtain or receive it. For example,
                        consider the method of dissemination where the requisite
                        data is posted to a website for one month, and the TOE
                        users know that this will happen and when this will
                        happen. This may not be especially reasonable or
                        effective (as, say, a permanent posting to the website),
                        yet it is feasible that the TOE user could obtain the
                        necessary information. On the other hand, if the
                        information were posted to the website for only one
                        hour, yet TOE users had no way of knowing this or when
                        it would be posted, it is infeasible that they would
                        ever get the necessary information.
                    </m-workunit>
                    <m-workunit id="alc_flr.2-6">
                        <ae-dc-element id="alc_flr.2.5c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that they describe procedures
                        for the developer to accept reports of security flaws or
                        requests for corrections to such flaws.

                        The procedures ensure that TOE users have a means by
                        which they can communicate with the TOE developer. By
                        having a means of contact with the developer, the user
                        can report security flaws, enquire about the status of
                        security flaws, or request corrections to flaws. This
                        means of contact may be part of a more general contact
                        facility for reporting non-security related
                        problems.

                        The use of these procedures is not restricted to TOE
                        users; however, only the TOE users are actively supplied
                        with the details of these procedures. Others who might
                        have access to or familiarity with the TOE can use the
                        same procedures to submit reports to the developer, who
                        is then expected to process them. Any means of
                        submitting reports to the developer, other than those
                        identified by the developer, are beyond the scope of
                        this work unit; reports generated by other means need
                        not be addressed.
                    </m-workunit>
                    <m-workunit id="alc_flr.2-7">
                        <ae-dc-element id="alc_flr.2.6c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would help to ensure every reported flaw is
                        corrected.

                        The flaw remediation procedures cover not only those
                        security flaws discovered and reported by developer
                        personnel, but also those reported by TOE users. The
                        procedures are sufficiently detailed so that they
                        describe how it is ensured that each reported security
                        flaw is corrected. The procedures contain reasonable
                        steps that show progress leading to the eventual,
                        inevitable resolution.

                        The procedures describe the process that is taken from
                        the point at which the suspected security flaw is
                        determined to be a security flaw to the point at which
                        it is resolved.
                    </m-workunit>
                    <m-workunit id="alc_flr.2-8">
                        <ae-dc-element id="alc_flr.2.6c"/>
                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would help to ensure that the TOE users are
                        issued remediation procedures for each security
                        flaw.

                        The procedures describe the process that is taken from
                        the point at which a security flaw is resolved to the
                        point at which the remediation procedures are
                        provided. The procedures for delivering corrective
                        actions should be consistent with the security
                        objectives; they need not necessarily be identical to
                        the procedures used for delivering the TOE, as
                        documented to meet <xref show="id" id="alc_del"/>, if
                        included in the assurance requirements. For example, if
                        the hardware portion of a TOE were originally delivered
                        by bonded courier, updates to hardware resulting from
                        flaw remediation would likewise be expected to be
                        distributed by bonded courier. Updates unrelated to flaw
                        remediation would follow the procedures set forth in the
                        documentation meeting the <xref show="title" id="alc_del"/> requirements.
                    </m-workunit>
                    <m-workunit id="alc_flr.2-9">
                        <ae-dc-element id="alc_flr.2.7c"/>
                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would result in safeguards that the potential
                        correction contains no adverse effects.

                        Through analysis, testing, or a combination of the two,
                        the developer may reduce the likelihood that adverse
                        effects will be introduced when a security flaw is
                        corrected. The evaluator assesses whether the procedures
                        provide detail in how the necessary mix of analysis and
                        testing actions is to be determined for a given
                        correction.

                        The evaluator also determines that, for instances where
                        the source of the security flaw is a documentation
                        problem, the procedures include the means of
                        safeguarding against the introduction of contradictions
                        with other documentation.
                    </m-workunit>
                    <m-workunit id="alc_flr.2-10">
                        <ae-dc-element id="alc_flr.2.8c"/>

                        The evaluator shall examine the flaw remediation
                        guidance to determine that the application of these
                        procedures would result in a means for the TOE user to
                        provide reports of suspected security flaws or requests
                        for corrections to such flaws.

                        The guidance ensures that TOE users have a means by
                        which they can communicate with the TOE developer. By
                        having a means of contact with the developer, the user
                        can report security flaws, enquire about the status of
                        security flaws, or request corrections to flaws.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Systematic flaw remediation" id="alc_flr.3">
                <aco-hierarchical acomponent="alc_flr.2"/>
                <aco-objectives>

                    In order for the developer to be able to act appropriately
                    upon security flaw reports from TOE users, and to know to
                    whom to send corrective fixes, TOE users need to
                    understand how to submit security flaw reports to the
                    developer, and how to register themselves with the
                    developer so that they may receive these corrective
                    fixes. Flaw remediation guidance from the developer to the
                    TOE user ensures that TOE users are aware of this
                    important information.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has established flaw remediation procedures
                    that describe the tracking of security flaws, the
                    identification of corrective actions, and the distribution
                    of corrective action information to TOE
                    users. Additionally, this sub-activity determines whether
                    the developer's procedures provide for the corrections of
                    security flaws, for the receipt of flaw reports from TOE
                    users, for assurance that the corrections introduce no new
                    security flaws, for the establishment of a point of
                    contact for each TOE user, and for the timely issue of
                    corrective actions to TOE users.

                    In order for the developer to be able to act appropriately
                    upon security flaw reports from TOE users, TOE users need
                    to understand how to submit security flaw reports to the
                    developer, and developers need to know how to receive
                    these reports. Flaw remediation guidance addressed to the
                    TOE user ensures that TOE users are aware of how to
                    communicate with the developer; flaw remediation
                    procedures describe the developer's role is such
                    communication.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the flaw remediation procedures documentation;
                        </item>
                        <item>
                            flaw remediation guidance documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_flr.3.1d">
                    The developer shall document and provide flaw remediation procedures
                    addressed to TOE developers.
                </ae-developer>
                <ae-developer id="alc_flr.3.2d">
                    The developer shall establish a procedure for accepting and
                    acting upon all reports of security flaws and requests for
                    corrections to those flaws.
                </ae-developer>
                <ae-developer id="alc_flr.3.3d">
                    The developer shall provide flaw remediation guidance
                    addressed to TOE users.
                </ae-developer>
                <ae-content id="alc_flr.3.1c">
                    The flaw remediation procedures documentation shall describe
                    the procedures used to track all reported security flaws in
                    each release of the TOE.
                </ae-content>
                <ae-content id="alc_flr.3.2c">
                    The flaw remediation procedures shall require that a
                    description of the nature and effect of each security flaw
                    be provided, as well as the status of finding a correction
                    to that flaw.
                </ae-content>
                <ae-content id="alc_flr.3.3c">
                    The flaw remediation procedures shall require that
                    corrective actions be identified for each of the security
                    flaws.
                </ae-content>
                <ae-content id="alc_flr.3.4c">
                    The flaw remediation procedures documentation shall describe
                    the methods used to provide flaw information, corrections
                    and guidance on corrective actions to TOE users.
                </ae-content>
                <ae-content id="alc_flr.3.5c">
                    The flaw remediation procedures shall describe a means by
                    which the developer receives from TOE users reports and
                    enquiries of suspected security flaws in the TOE.
                </ae-content>
                <ae-content id="alc_flr.3.6c">
                    The flaw remediation procedures shall include a procedure
                    requiring timely response and the automatic distribution of
                    security flaw reports and the associated corrections to
                    registered users who might be affected by the security flaw.
                </ae-content>
                <ae-content id="alc_flr.3.7c">
                    The procedures for processing reported security flaws shall
                    ensure that any reported flaws are remediated and the
                    remediation procedures issued to TOE users.
                </ae-content>
                <ae-content id="alc_flr.3.8c">
                    The procedures for processing reported security flaws shall
                    provide safeguards that any corrections to these security
                    flaws do not introduce any new flaws.
                </ae-content>
                <ae-content id="alc_flr.3.9c">
                    The flaw remediation guidance shall describe a means by
                    which TOE users report to the developer any suspected
                    security flaws in the TOE.
                </ae-content>
                <ae-content id="alc_flr.3.10c">
                    The flaw remediation guidance shall describe a means by
                    which TOE users may register with the developer, to be
                    eligible to receive security flaw reports and corrections.
                </ae-content>
                <ae-content id="alc_flr.3.11c">
                    The flaw remediation guidance shall identify the specific
                    points of contact for all reports and enquiries about
                    security issues involving the TOE.
                </ae-content>
                <ae-evaluator id="alc_flr.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="alc_flr.3-1">
                        <ae-dc-element id="alc_flr.3.1c"/>

                        The evaluator shall examine the flaw remediation
                        procedures documentation to determine that it describes
                        the procedures used to track all reported security flaws
                        in each release of the TOE.

                        The procedures describe the actions that are taken by
                        the developer from the time each suspected security flaw
                        is reported to the time that it is resolved. This
                        includes the flaw's entire time frame, from initial
                        detection through ascertaining that the flaw is a
                        security flaw, to resolution of the security
                        flaw.

                        If a flaw is discovered not to be security-relevant,
                        there is no need (for the purposes of the <xref show="title" id="alc_flr"/> requirements) for the flaw
                        remediation procedures to track it further; only that
                        there be an explanation of why the flaw is not
                        security-relevant.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-2">
                        <ae-dc-element id="alc_flr.3.2c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would produce a description of each security
                        flaw in terms of its nature and effects.

                        The procedures identify the actions that are taken by
                        the developer to describe the nature and effects of each
                        security flaw in sufficient detail to be able to
                        reproduce it. The description of the nature of a
                        security flaw addresses whether it is an error in the
                        documentation, a flaw in the design of the TSF, a flaw
                        in the implementation of the TSF, etc. The description
                        of the security flaw's effects identifies the portions
                        of the TSF that are affected and how those portions are
                        affected. For example, a security flaw in the
                        implementation might be found that affects the
                        identification and authentication enforced by the TSF by
                        permitting authentication with the password
                        ``BACKDOOR''.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-3">
                        <ae-dc-element id="alc_flr.3.2c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would identify the status of finding a
                        correction to each security flaw.

                        The flaw remediation procedures identify the different
                        stages of security flaws. This differentiation includes
                        at least: suspected security flaws that have been
                        reported, suspected security flaws that have been
                        confirmed to be security flaws, and security flaws whose
                        solutions have been implemented. It is permissible that
                        additional stages (e.g. flaws that have been reported
                        but not yet investigated, flaws that are under
                        investigation, security flaws for which a solution has
                        been found but not yet implemented) be included.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-4">
                        <ae-dc-element id="alc_flr.3.3c"/>

                        The evaluator shall check the flaw remediation
                        procedures to determine that the application of these
                        procedures would identify the corrective action for each
                        security flaw.

                        <italic>Corrective action</italic> may consist of a
                        repair to the hardware, firmware, or software portions
                        of the TOE, a modification of TOE guidance, or
                        both. Corrective action that constitutes modifications
                        to TOE guidance (e.g. details of procedural measures to
                        be taken to obviate the security flaw) includes both
                        those measures serving as only an interim solution
                        (until the repair is issued) as well as those serving as
                        a permanent solution (where it is determined that the
                        procedural measure is the best solution).

                        If the source of the security flaw is a documentation
                        error, the corrective action consists of an update of
                        the affected TOE guidance. If the corrective action is a
                        procedural measure, this measure will include an update
                        made to the affected TOE guidance to reflect these
                        corrective procedures.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-5">
                        <ae-dc-element id="alc_flr.3.4c"/>

                        The evaluator shall examine the flaw remediation
                        procedures documentation to determine that it describes
                        a means of providing the TOE users with the necessary
                        information on each security flaw.

                        <italic>The necessary information</italic> about each
                        security flaw consists of its description (not
                        necessarily at the same level of detail as that provided
                        as part of work unit <xref show="title" id="alc_flr.3-2"/>), the prescribed corrective action,
                        and any associated guidance on implementing the
                        correction.

                        TOE users may be provided with such information,
                        correction, and documentation updates in any of several
                        ways, such as their posting to a website, their being
                        sent to TOE users, or arrangements made for the
                        developer to install the correction. In cases where the
                        means of providing this information requires action to
                        be initiated by the TOE user, the evaluator examines any
                        TOE guidance to ensure that it contains instructions for
                        retrieving the information.

                        The only metric for assessing the adequacy of the method
                        used for providing the information, corrections and
                        guidance is that there be a reasonable expectation that
                        TOE users can obtain or receive it. For example,
                        consider the method of dissemination where the requisite
                        data is posted to a website for one month, and the TOE
                        users know that this will happen and when this will
                        happen. This may not be especially reasonable or
                        effective (as, say, a permanent posting to the website),
                        yet it is feasible that the TOE user could obtain the
                        necessary information. On the other hand, if the
                        information were posted to the website for only one
                        hour, yet TOE users had no way of knowing this or when
                        it would be posted, it is infeasible that they would
                        ever get the necessary information.

                        For TOE users who register with the developer (see work
                        unit <xref show="title" id="alc_flr.3-12"/>), the
                        passive availability of this information is not
                        sufficient. Developers must actively send the
                        information (or a notification of its availability) to
                        registered TOE users.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-6">
                        <ae-dc-element id="alc_flr.3.5c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would result in a means for the developer to
                        receive from TOE user reports of suspected security
                        flaws or requests for corrections to such flaws.

                        The procedures ensure that TOE users have a means by
                        which they can communicate with the TOE developer. By
                        having a means of contact with the developer, the user
                        can report security flaws, enquire about the status of
                        security flaws, or request corrections to flaws. This
                        means of contact may be part of a more general contact
                        facility for reporting non-security related
                        problems.

                        The use of these procedures is not restricted to TOE
                        users; however, only the TOE users are actively supplied
                        with the details of these procedures. Others who might
                        have access to or familiarity with the TOE can use the
                        same procedures to submit reports to the developer, who
                        is then expected to process them. Any means of
                        submitting reports to the developer, other than those
                        identified by the developer, are beyond the scope of
                        this work unit; reports generated by other means need
                        not be addressed.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-7">
                        <ae-dc-element id="alc_flr.3.6c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would result in a timely means of providing
                        the registered TOE users who might be affected with
                        reports about, and associated corrections to, each
                        security flaw.

                        The issue of timeliness applies to the issuance of both
                        security flaw reports and the associated
                        corrections. However, these need not be issued at the
                        same time. It is recognised that flaw reports should be
                        generated and issued as soon as an interim solution is
                        found, even if that solution is as drastic as turn off
                        the TOE. Likewise, when a more permanent (and less
                        drastic) solution is found, it should be issued without
                        undue delay.

                        It is unnecessary to restrict the recipients of the
                        reports and associated corrections to only those TOE
                        users who might be affected by the security flaw; it is
                        permissible that all TOE users be given such reports and
                        corrections for all security flaws, provided such is
                        done in a timely manner.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-8">
                        <ae-dc-element id="alc_flr.3.6c"/>
                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would result in automatic distribution of the
                        reports and associated corrections to the registered TOE
                        users who might be affected.

                        <italic>Automatic distribution</italic> does not mean
                        that human interaction with the distribution method is
                        not permitted. In fact, the distribution method could
                        consist entirely of manual procedures, perhaps through a
                        closely monitored procedure with prescribed escalation
                        upon the lack of issue of reports or corrections.

                        It is unnecessary to restrict the recipients of the
                        reports and associated corrections to only those TOE
                        users who might be affected by the security flaw; it is
                        permissible that all TOE users be given such reports and
                        corrections for all security flaws, provided such is
                        done automatically.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-9">
                        <ae-dc-element id="alc_flr.3.7c"/>

                        The evaluator shall examine the flaw remediation procedures to
                        determine that the application of these procedures would help to
                        ensure that every reported flaw is corrected.

                        The flaw remediation procedures cover not only those
                        security flaws discovered and reported by developer
                        personnel, but also those reported by TOE users. The
                        procedures are sufficiently detailed so that they
                        describe how it is ensured that each reported security
                        flaw is remediated. The procedures contain reasonable
                        steps that show progress leading to the eventual,
                        inevitable resolution.

                        The procedures describe the process that is taken from
                        the point at which the suspected security flaw is
                        determined to be a security flaw to the point at which
                        it is resolved.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-10">
                        <ae-dc-element id="alc_flr.3.7c"/>

                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would help to ensure that the TOE users are
                        issued remediation procedures for each security
                        flaw.
                        The procedures describe the process that is taken
                        from the point at which a security flaw is resolved to
                        the point at which the remediation procedures are
                        provided. The procedures for delivering remediation
                        procedures should be consistent with the security
                        objectives; they need not necessarily be identical to
                        the procedures used for delivering the TOE, as
                        documented to meet <xref show="title" id="alc_del"/>, if
                        included in the assurance requirements. For example, if
                        the hardware portion of a TOE were originally delivered
                        by bonded courier, updates to hardware resulting from
                        flaw remediation would likewise be expected to be
                        distributed by bonded courier. Updates unrelated to flaw
                        remediation would follow the procedures set forth in the
                        documentation meeting the <xref show="title" id="alc_del"/> requirements.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-11">
                        <ae-dc-element id="alc_flr.3.8c"/>
                        The evaluator shall examine the flaw remediation
                        procedures to determine that the application of these
                        procedures would result in safeguards that the potential
                        correction contains no adverse effects.

                        Through analysis, testing, or a combination of the two,
                        the developer may reduce the likelihood that adverse
                        effects will be introduced when a security flaw is
                        corrected. The evaluator assesses whether the procedures
                        provide detail in how the necessary mix of analysis and
                        testing actions is to be determined for a given
                        correction.

                        The evaluator also determines that, for instances where
                        the source of the security flaw is a documentation
                        problem, the procedures include the means of
                        safeguarding against the introduction of contradictions
                        with other documentation.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-12">
                        <ae-dc-element id="alc_flr.3.9c"/>

                        The evaluator shall examine the flaw remediation
                        guidance to determine that the application of these
                        procedures would result in a means for the TOE user to
                        provide reports of suspected security flaws or requests
                        for corrections to such flaws.

                        The guidance ensures that TOE users have a means by
                        which they can communicate with the TOE developer. By
                        having a means of contact with the developer, the user
                        can report security flaws, enquire about the status of
                        security flaws, or request corrections to flaws.
                    </m-workunit>
                    <m-workunit id="alc_flr.3-13">
                        <ae-dc-element id="alc_flr.3.10c"/>

                        The evaluator shall examine the flaw remediation
                        guidance to determine that it describes a means of
                        enabling the TOE users to register with the
                        developer.

                        <italic>Enabling the TOE users to register with the
                            developer</italic> simply means having a way for each
                        TOE user to provide the developer with a point of
                        contact; this point of contact is to be used to
                        provide the TOE user with information related to
                        security flaws that might affect that TOE user, along
                        with any corrections to the security flaw. Registering
                        the TOE user may be accomplished as part of the
                        standard procedures that TOE users undergo to identify
                        themselves to the developer, for the purposes of
                        registering a software licence, or for obtaining
                        update and other useful information.

                        There need not be one registered TOE user per
                        installation of the TOE; it would be sufficient if there
                        were one registered TOE user for an organisation. For
                        example, a corporate TOE user might have a centralised
                        acquisition office for all of its sites. In this case,
                        the acquisition office would be a sufficient point of
                        contact for all of that TOE user's sites, so that all of
                        the TOE user's installations of the TOE have a
                        registered point of contact.

                        In either case, it must be possible to associate each
                        TOE that is delivered with an organisation in order to
                        ensure that there is a registered user for each TOE. For
                        organisations that have many different addresses, this
                        assures that there will be no user who is erroneously
                        presumed to be covered by a registered TOE user.
                        It should be noted that TOE users need not
                        register; they must only be provided with a means of
                        doing so. However, users who choose to register must be
                        directly sent the information (or a notification of its
                        availability).
                    </m-workunit>
                    <m-workunit id="alc_flr.3-14">
                        <ae-dc-element id="alc_flr.3.11c"/>
                        The evaluator shall examine the flaw remediation
                        guidance to determine that it identifies specific points
                        of contact for user reports and enquiries about security
                        issues involving the TOE.

                        The guidance includes a means whereby registered TOE
                        users can interact with the developer to report
                        discovered security flaws in the TOE or to make
                        enquiries regarding discovered security flaws in the
                        TOE.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Life-cycle definition" id="alc_lcd">
            <af-objectives>

                Poorly controlled development and maintenance of the TOE can
                result in a TOE that does not meet all of its
                SFRs. Therefore, it is important that a model for the
                development and maintenance of a TOE be established as early
                as possible in the TOE's life-cycle.

                Using a model for the development and maintenance of a TOE
                does not guarantee that the TOE meets all of its SFRs. It is
                possible that the model chosen will be insufficient or
                inadequate and therefore no benefits in the quality of the
                TOE can be observed. Using a life-cycle model that has been
                approved by a group of experts (e.g. academic experts,
                standards bodies) improves the chances that the development
                and maintenance models will contribute to the TOE meeting
                its SFRs. The use of a life-cycle model including some
                quantitative valuation adds further assurance in the overall
                quality of the TOE development process.
            </af-objectives>
            <af-overview>

                Life-cycle definition establishes that the engineering
                practises used by a developer to produce the TOE include the
                considerations and activities identified in the development
                process and operational support requirements. Confidence in
                the correspondence between the requirements and the TOE is
                greater when quality control and the production of evidence
                are done on a regular basis as an integral part of the
                development process and operational support activities. It
                is not the intent of this component to dictate any specific
                development process.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                increasing requirements for measurability of the life-cycle
                model, and for compliance with that model.
            </af-levelling-criteria>
            <af-application-notes>

                A life-cycle model encompasses the procedures, tools and
                techniques used to develop and maintain the TOE. Aspects of
                the process that may be covered by such a model include
                design methods, review procedures, project management
                controls, change control procedures, test methods and
                acceptance procedures. An effective life-cycle model will
                address these aspects of the development and maintenance
                process within an overall management structure that assigns
                responsibilities and monitors progress.

                There are different types of acceptance situations that are
                dealt with at different locations in the criteria:
                acceptance of parts delivered by subcontractors
                (``integration'') should be treated in this family <xref show="title" id="alc_lcd"/>, acceptance subsequent to
                internal transportations in <xref show="title" id="alc_dvs"/>, acceptance of parts into the CM system in
                <xref show="title" id="alc_cmc"/>, and acceptance of the
                delivered TOE by the consumer in <xref show="title" id="alc_del"/>. The first three types may overlap.

                Although life-cycle definition deals with the maintenance of
                the TOE and hence with aspects becoming relevant after the
                completion of the evaluation, its evaluation adds assurance
                through an analysis of the life-cycle information for the
                TOE provided at the time of the evaluation.

                A life-cycle model provides for the necessary control over
                the development and maintenance of the TOE, if the model
                enables sufficient minimisation of the danger that the TOE
                will not meet its security requirement.

                A measurable life-cycle model is a model using some
                quantitative valuation (arithmetic parameters and/or
                metrics) of the managed product in order to measure
                development properties of the product. Typical metrics are
                source code complexity metrics, defect density (errors per
                size of code) or mean time to failure. For the security
                evaluation all those metrics are of relevance, which are
                used to increase quality by decreasing the probability of
                faults and thereby in turn increasing assurance in the
                security of the TOE.

                One should take into account that there exist standardised
                life cycle models on the one hand (like the waterfall model)
                and standardised metrics on the other hand (like error
                density), which may be combined. The CC does not require the
                life cycle to follow exactly one standard defining both
                aspects.
            </af-application-notes>
            <a-component name="Developer defined life-cycle model" id="alc_lcd.1">
                <msa-objectives>
                    The objective of this sub-activity is to determine
                    whether the developer has used a documented model of the
                    TOE life-cycle.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the life-cycle definition documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_lcd.1.1d">
                    The developer shall establish a life-cycle model to be used
                    in the development and maintenance of the TOE.
                </ae-developer>
                <ae-developer id="alc_lcd.1.2d">
                    The developer shall provide life-cycle definition
                    documentation.
                </ae-developer>
                <ae-content id="alc_lcd.1.1c">
                    The life-cycle definition documentation shall describe the
                    model used to develop and maintain the TOE.
                </ae-content>
                <ae-content id="alc_lcd.1.2c">
                    The life-cycle model shall provide for the necessary control
                    over the development and maintenance of the TOE.
                </ae-content>
                <ae-evaluator id="alc_lcd.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_lcd.1.1c"/>

                        The evaluator shall examine the documented description
                        of the life-cycle model used to determine that it covers
                        the development and maintenance process.

                        The description of the life-cycle model should include:
                        <list type="enumerated">
                            <item>
                                information on the life-cycle phases of the TOE and
                                the boundaries between the subsequent phases;
                            </item>
                            <item>
                                information on the procedures, tools and techniques
                                used by the developer (e.g. for design, coding,
                                testing, bug-fixing);
                            </item>
                            <item>
                                overall management structure governing the
                                application of the procedures (e.g. an
                                identification and description of the individual
                                responsibilities for each of the procedures required
                                by the development and maintenance process covered
                                by the life-cycle model);
                            </item>
                            <item>
                                information on which parts of the TOE are delivered
                                by subcontractors, if subcontractors are involved.
                            </item>
                        </list>

                        <xref show="title" id="alc_lcd.1"/> does not require the
                        model used to conform to any standard life-cycle
                        model.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_lcd.1.2c"/>

                        The evaluator shall examine the life-cycle model to
                        determine that use of the procedures, tools and
                        techniques described by the life-cycle model will make
                        the necessary positive contribution to the development
                        and maintenance of the TOE.

                        The information provided in the life-cycle model gives
                        the evaluator assurance that the development and
                        maintenance procedures adopted would minimise the
                        likelihood of security flaws. For example, if the
                        life-cycle model described the review process, but did
                        not make provision for recording changes to components,
                        then the evaluator may be less confident that errors
                        will not be introduced into the TOE. The evaluator may
                        gain further assurance by comparing the description of
                        the model against an understanding of the development
                        process gleaned from performing other evaluator actions
                        relating to the TOE development (e.g. those covered
                        under the <xref show="title" id="alc_cmc"/>).
                        Identified deficiencies in the life-cycle model will be
                        of concern if they might reasonably be expected to give
                        rise to the introduction of flaws into the TOE, either
                        accidentally or deliberately.

                        The CC does not mandate any particular development
                        approach, and each should be judged on merit. For
                        example, spiral, rapid-prototyping and waterfall
                        approaches to design can all be used to produce a
                        quality TOE if applied in a controlled
                        environment.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Measurable life-cycle model" id="alc_lcd.2">
                <aco-hierarchical acomponent="alc_lcd.1"/>
                <msa-objectives>
                    The objective of this sub-activity is to determine
                    whether the developer has used a documented and measurable
                    model of the TOE life-cycle.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the life-cycle definition documentation;
                        </item>
                        <item>
                            information about the standard used;
                        </item>
                        <item>
                            the life-cycle output documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_lcd.2.1d" boldfrom="alc_lcd.1.1d">
                    The developer shall establish a life-cycle model to be used
                    in the development and maintenance of the TOE, that is based
                    on a measurable life-cycle model.
                </ae-developer>
                <ae-developer id="alc_lcd.2.2d">
                    The developer shall provide life-cycle definition
                    documentation.
                </ae-developer>
                <ae-developer id="alc_lcd.2.3d">
                    The developer shall measure the TOE development using the
                    measurable life-cycle model.
                </ae-developer>
                <ae-developer id="alc_lcd.2.4d">
                    The developer shall provide life-cycle output documentation.
                </ae-developer>
                <ae-content id="alc_lcd.2.1c" boldfrom="alc_lcd.1.1c">
                    The life-cycle definition documentation shall describe the
                    model used to develop and maintain the TOE, including the
                    details of its arithmetic parameters and/or metrics used to
                    measure the quality of the TOE and/or its development.
                </ae-content>
                <ae-content id="alc_lcd.2.2c">
                    The life-cycle model shall provide for the necessary control
                    over the development and maintenance of the TOE.
                </ae-content>
                <ae-content id="alc_lcd.2.3c">
                    The life-cycle output documentation shall provide the
                    results of the measurements of the TOE development using the
                    measurable life-cycle model.
                </ae-content>
                <ae-evaluator id="alc_lcd.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_lcd.2.1c"/>

                        The evaluator shall examine the documented description
                        of the life-cycle model used to determine that it covers
                        the development and maintenance process, including the
                        details of its arithmetic parameters and/or metrics used
                        to measure the TOE development.

                        The description of the life-cycle model includes:
                        <list type="enumerated"><item>
                            information on the life-cycle phases of the TOE and the
                            boundaries between the subsequent phases;
                        </item><item>
                            information on the procedures, tools and techniques used by
                            the developer (e.g. for design, coding, testing,
                            bug-fixing);
                        </item><item>
                            overall management structure governing the application of
                            the procedures (e.g. an identification and description of
                            the individual responsibilities for each of the procedures
                            required by the development and maintenance process covered
                            by the life-cycle model);
                        </item><item>
                            information on which parts of the TOE are delivered by
                            subcontractors, if subcontractors are involved;
                        </item><item>
                            information on the parameters/metrics that are used to
                            measure the TOE development. Metrics standards typically
                            include guides for measuring and producing reliable products
                            and cover the aspects reliability, quality, performance,
                            complexity and cost. For the evaluation all those metrics
                            are of relevance, which are used to increase quality by
                            decreasing the probability of faults and thereby in turn
                            increase assurance in the security of the TOE.
                        </item></list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_lcd.2.2c"/>

                        The evaluator shall examine the life-cycle model to
                        determine that use of the procedures, tools and
                        techniques described by the life-cycle model will make
                        the necessary positive contribution to the development
                        and maintenance of the TOE.

                        The information provided in the life-cycle model gives
                        the evaluator assurance that the development and
                        maintenance procedures adopted would minimise the
                        likelihood of security flaws. For example, if the
                        life-cycle model described the review process, but did
                        not make provision for recording changes to components,
                        then the evaluator may be less confident that errors
                        will not be introduced into the TOE. The evaluator may
                        gain further assurance by comparing the description of
                        the model against an understanding of the development
                        process gleaned from performing other evaluator actions
                        relating to the TOE development (e.g. those covered
                        under the <xref show="title" id="alc_cmc"/>).
                        Identified deficiencies in the life-cycle model will be
                        of concern if they might reasonably be expected to give
                        rise to the introduction of flaws into the TOE, either
                        accidentally or deliberately.

                        The CC does not mandate any particular development
                        approach, and each should be judged on merit. For
                        example, spiral, rapid-prototyping and waterfall
                        approaches to design can all be used to produce a
                        quality TOE if applied in a controlled
                        environment.

                        For the metrics/measurements used in the life-cycle
                        model, evidence has to be provided that shows how those
                        metrics/measurements usefully contribute to the
                        minimisation of the likelihood of flaws. This can be
                        viewed as the overall goal for measurement in an <xref show="id" id="alc"/> context. As a consequence the
                        metrics/measurements have to be selected based on their
                        capability to achieve that overall goal or contribute to
                        that.  In the first place a metric/measure is suitable
                        with respect to <xref show="id" id="alc"/> if a
                        correlation between the metric/measure and the number of
                        flaws can be stated with a certain degree of
                        reliability. But also a metric/measure useful for
                        management purposes as for planning and monitoring the
                        TOE development are helpful since badly managed projects
                        are endangered to produce bad quality and to introduce
                        flaws.

                        It may be possible to use metrics for quality
                        improvement, for which this use is not obvious. For
                        example a metric to estimate the expected cost of a
                        product development may help quality, if the developer
                        can show that this is used to provide an adequate budget
                        for development projects and that this helps to avoid
                        quality problems arising from resource shortages.

                        It is not required that every single step in the life
                        cycle of the TOE is measurable. However the evaluator
                        should see from the description of the measures and
                        procedures that the metrics are appropriate to control
                        the overall quality of the TOE and to minimise possible
                        security flaws by this.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_lcd.2.3c"/>

                        The evaluator shall examine the life-cycle output
                        documentation to determine that it provides the results
                        of the measurements of the TOE development using the
                        measurable life-cycle model.

                        The results of the measurements and the life-cycle
                        progress of the TOE should be in accordance with the
                        life-cycle model.

                        The output documentation not only includes numeric values of the
                        metrics but also documents actions taken as a result of the
                        measurements and in accordance with the model. For example there
                        may be a requirement that a certain design phase needs to be
                        repeated, if some error rates measured during testing are
                        outside of a defined threshold. In this case the documentation
                        should show that such action was taken, if indeed the thresholds
                        were not met.

                        If the evaluation is conducted in parallel with the
                        development of the TOE it may be possible that quality
                        measurements have not been used in the past. In this
                        case the evaluator should use the documentation of the
                        planned procedures in order to gain confidence that
                        corrective actions are defined if results of quality
                        measurements deviate from some threshold.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Tools and techniques" id="alc_tat">
            <af-objectives>

                Tools and techniques is an aspect of selecting tools that
                are used to develop, analyse and implement the TOE. It
                includes requirements to prevent ill-defined, inconsistent
                or incorrect development tools from being used to develop
                the TOE. This includes, but is not limited to, programming
                languages, documentation, implementation standards, and
                other parts of the TOE such as supporting runtime
                libraries.
            </af-objectives>
            <af-overview>

                Tools and techniques addresses the need to define the
                development tools being used to analyse and implement the
                TOE. It includes requirements concerning the development
                tools and implementation dependent options of those
                tools.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                increasing requirements on the description and scope of the
                implementation standards and the documentation of
                implementation-dependent options.
            </af-levelling-criteria>
            <af-application-notes>

                There is a requirement for well-defined development
                tools. These are tools that are clearly and completely
                described. For example, programming languages and computer
                aided design (CAD) systems that are based on a standard
                published by standards bodies are considered to be
                well-defined. Self-made tools would need further
                investigation to clarify whether they are
                well-defined.

                The requirement in <xref show="title" id="alc_tat.1.2c"/> is
                especially applicable to programming languages so as to
                ensure that all statements in the source code have an
                unambiguous meaning.

                In <xref show="id" id="alc_tat.2"/> and <xref show="id" id="alc_tat.3"/>, implementation guidelines may be accepted
                as an implementation standard if they have been approved by
                some group of experts (e.g. academic experts, standards
                bodies). Implementation standards are normally public, well
                accepted and common practise in a specific industry, but
                developer-specific implementation guidelines may also be
                accepted as a standard; the emphasis is on the
                expertise.
                Tools and techniques distinguishes between the
                implementation standards applied by the developer (<xref show="title" id="alc_tat.2.3d"/>) and the implementation
                standards for ``all parts of the TOE'' (<xref show="title" id="alc_tat.3.3d"/>) which include third party software,
                hardware, or firmware. The configuration list introduced in
                <xref show="title" id="alc_cms"/> requires that for each TSF
                relevant configuration item to indicate if it has been
                generated by the TOE developer or by third party
                developers.
            </af-application-notes>
            <a-component name="Well-defined development tools" id="alc_tat.1">
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has used well-defined development tools
                    (e.g. programming languages or computer-aided design (CAD)
                    systems) that yield consistent and predictable
                    results.
                </msa-objectives>
                <msa-application-notes>

                    This work may be performed in parallel with the evaluation
                    activities under <xref id="adv_imp" show="link"/>,
                    specifically with regard to determining the use of
                    features in the tools that will affect the object code
                    (e.g. compilation options).
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the development tool documentation;
                        </item>
                        <item>
                            the subset of the implementation representation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_tat.1.1d">
                    The developer shall provide the documentation identifying each development tool being
                    used for the TOE.
                </ae-developer>
                <ae-developer id="alc_tat.1.2d">
                    The developer shall document and provide the selected
                    implementation-dependent options of each development tool.
                </ae-developer>
                <ae-content id="alc_tat.1.1c">
                    Each development tool used for implementation shall be
                    well-defined.
                </ae-content>
                <ae-content id="alc_tat.1.2c">
                    The documentation of each development tool shall
                    unambiguously define the meaning of all statements as well
                    as all conventions and directives used in the
                    implementation.
                </ae-content>
                <ae-content id="alc_tat.1.3c">
                    The documentation of each development tool shall
                    unambiguously define the meaning of all
                    implementation-dependent options.
                </ae-content>
                <ae-evaluator id="alc_tat.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="alc_tat.1-1">
                        <ae-dc-element id="alc_tat.1.1c"/>

                        The evaluator shall examine the development tool
                        documentation provided to determine that each
                        development tools is well-defined.

                        For example, a well-defined language, compiler or CAD
                        system may be considered to be one that conforms to a
                        recognised standard, such as the ISO standards. A
                        well-defined language is one that has a clear and
                        complete description of its syntax, and a detailed
                        description of the semantics of each construct.
                    </m-workunit>
                    <m-workunit id="alc_tat.1-2">
                        <ae-dc-element id="alc_tat.1.2c"/>

                        The evaluator shall examine the documentation of each
                        development tool to determine that it unambiguously
                        defines the meaning of all statements as well as all
                        conventions and directives used in the
                        implementation.

                        The development tool documentation (e.g. programming
                        language specifications and user manuals) should cover
                        all statements used in the implementation representation
                        of the TOE, and for each such statement should provide a
                        clear and unambiguous definition of the purpose and
                        effect of that statement. This work may be performed in
                        parallel with the evaluator's examination of the
                        implementation representation performed during the <xref id="adv_imp" show="id"/> sub-activity. The key test the
                        evaluator should apply is whether or not the
                        documentation is sufficiently clear for the evaluator to
                        be able to understand the implementation
                        representation. The documentation should not assume (for
                        example) that the reader is an expert in the programming
                        language used.

                        Reference to the use of a documented standard is an
                        acceptable approach to meet this requirement, provided
                        that the standard is available to the evaluator. Any
                        differences from the standard should be
                        documented.

                        The critical test is whether the evaluator can
                        understand the TOE source code when performing source
                        code analysis covered in the <xref id="adv_imp" show="id"/> sub-activity.  However, the following
                        checklist can additionally be used in searching for
                        problem areas:
                        <list type="enumerated">
                            <item>
                                In the language definition, phrases such as ``the
                                effect of this construct is undefined'' and terms
                                such as ``implementation dependent'' or
                                ``erroneous'' may indicate ill-defined areas.
                            </item>
                            <item>
                                Aliasing (allowing the same piece of memory to be
                                referenced in different ways) is a common source of
                                ambiguity problems.
                            </item>
                            <item>
                                Exception handling (e.g. what happens after memory
                                exhaustion or stack overflow) is often poorly
                                defined.
                            </item>
                        </list>

                        Most languages in common use, however well designed,
                        will have some problematic constructs. If the
                        implementation language is mostly well defined, but some
                        problematic constructs exist, then an inconclusive
                        verdict should be assigned, pending examination of the
                        source code.

                        The evaluator should verify, during the examination of
                        source code, that any use of the problematic constructs
                        does not introduce vulnerabilities. The evaluator should
                        also ensure that constructs precluded by the documented
                        standard are not used.

                        The development tool documentation should define all
                        conventions and directives used in the
                        implementation.
                    </m-workunit>
                    <m-workunit id="alc_tat.1-3">
                        <ae-dc-element id="alc_tat.1.3c"/>

                        The evaluator shall examine the development tool
                        documentation to determine that it unambiguously defines
                        the meaning of all implementation-dependent
                        options.

                        The documentation of software development tools should
                        include definitions of implementation-dependent options
                        that may affect the meaning of the executable code, and
                        those that are different from the standard language as
                        documented. Where source code is provided to the
                        evaluator, information should also be provided on
                        compilation and linking options used.

                        The documentation for hardware design and development
                        tools should describe the use of all options that affect
                        the output from the tools (e.g. detailed hardware
                        specifications, or actual hardware).
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Compliance with implementation standards" id="alc_tat.2"> <aco-hierarchical acomponent="alc_tat.1"/>
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has used well-defined development tools
                    (e.g. programming languages or computer-aided design (CAD)
                    systems) that yield consistent and predictable results,
                    and whether implementation standards have been
                    applied.
                </msa-objectives>
                <msa-application-notes>

                    This work may be performed in parallel with the evaluation
                    activities under <xref show="id" id="adv_imp"/>,
                    specifically with regard to determining the use of
                    features in the tools that will affect the object code
                    (e.g. compilation options).
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the development tool documentation;
                        </item>
                        <item>
                            the implementation standards description;
                        </item>
                        <item>
                            the provided implementation representation of the TSF.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_tat.2.1d">
                    The developer shall provide the documentation identifying each development tool being
                    used for the TOE.
                </ae-developer>
                <ae-developer id="alc_tat.2.2d">
                    The developer shall document and provide the selected
                    implementation-dependent options of each development tool.
                </ae-developer>
                <ae-developer id="alc_tat.2.3d">
                    The developer shall describe and provide the implementation standards
                    that are being applied by the developer.
                </ae-developer>
                <ae-content id="alc_tat.2.1c">
                    Each development tool used for implementation shall be
                    well-defined.
                </ae-content>
                <ae-content id="alc_tat.2.2c">
                    The documentation of each development tool shall
                    unambiguously define the meaning of all statements as well
                    as all conventions and directives used in the
                    implementation.
                </ae-content>
                <ae-content id="alc_tat.2.3c">
                    The documentation of each development tool shall
                    unambiguously define the meaning of all
                    implementation-dependent options.
                </ae-content>
                <ae-evaluator id="alc_tat.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_tat.2.1c"/>

                        The evaluator shall examine the development tool
                        documentation provided to determine that each
                        development tool is well-defined.

                        For example, a well-defined language, compiler or CAD
                        system may be considered to be one that conforms to a
                        recognised standard, such as the ISO standards. A
                        well-defined language is one that has a clear and
                        complete description of its syntax, and a detailed
                        description of the semantics of each construct.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_tat.2.2c"/>

                        The evaluator shall examine the documentation of each
                        development tool to determine that it unambiguously
                        defines the meaning of all statements as well as all
                        conventions and directives used in the
                        implementation.

                        The development tool documentation (e.g. programming
                        language specifications and user manuals) should cover
                        all statements used in the implementation representation
                        of the TOE, and for each such statement should provide a
                        clear and unambiguous definition of the purpose and
                        effect of that statement. This work may be performed in
                        parallel with the evaluator's examination of the
                        implementation representation performed during the <xref show="id" id="adv_imp"/> sub-activity. The key test the
                        evaluator should apply is whether or not the
                        documentation is sufficiently clear for the evaluator to
                        be able to understand the implementation
                        representation. The documentation should not assume (for
                        example) that the reader is an expert in the programming
                        language used.

                        Reference to the use of a documented standard is an
                        acceptable approach to meet this requirement, provided
                        that the standard is available to the evaluator. Any
                        differences from the standard should be
                        documented.

                        The critical test is whether the evaluator can
                        understand the TOE source code when performing source
                        code analysis covered in the <xref show="id" id="adv_imp"/> sub-activity.  However, the following
                        checklist can additionally be used in searching for
                        problem areas:
                        <list type="enumerated">
                            <item>
                                In the language definition, phrases such as ``the
                                effect of this construct is undefined'' and terms
                                such as ``implementation dependent'' or
                                ``erroneous'' may indicate ill-defined areas.
                            </item>
                            <item>
                                Aliasing (allowing the same piece of memory to be
                                referenced in different ways) is a common source of
                                ambiguity problems.
                            </item>
                            <item>
                                Exception handling (e.g. what happens after memory
                                exhaustion or stack overflow) is often poorly
                                defined.
                            </item>
                        </list>

                        Most languages in common use, however well designed,
                        will have some problematic constructs. If the
                        implementation language is mostly well defined, but some
                        problematic constructs exist, then an inconclusive
                        verdict should be assigned, pending examination of the
                        source code.

                        The evaluator should verify, during the examination of
                        source code, that any use of the problematic constructs
                        does not introduce vulnerabilities. The evaluator should
                        also ensure that constructs precluded by the documented
                        standard are not used.

                        The development tool documentation should define all
                        conventions and directives used in the
                        implementation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_tat.2.3c"/>

                        The evaluator shall examine the development tool
                        documentation to determine that it unambiguously defines
                        the meaning of all implementation-dependent
                        options.

                        The documentation of software development tools should
                        include definitions of implementation-dependent options
                        that may affect the meaning of the executable code, and
                        those that are different from the standard language as
                        documented. Where source code is provided to the
                        evaluator, information should also be provided on
                        compilation and linking options used.

                        The documentation for hardware design and development
                        tools should describe the use of all options that affect
                        the output from the tools (e.g. detailed hardware
                        specifications, or actual hardware).
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="alc_tat.2.2e">
                    The evaluator shall confirm that the implementation
                    standards have been applied.
                    <m-workunit>

                        The evaluator shall examine aspects of the
                        implementation process to determine that documented
                        implementation standards have been applied.

                        This work unit requires the evaluator to analyse the
                        provided implementation representation of the TOE to
                        determine whether the documented implementation
                        standards have been applied.

                        The evaluator should verify that constructs excluded by
                        the documented standard are not used.

                        Additionally, the evaluator should verify the
                        developer's procedures which ensure the application of
                        the defined standards within the design and
                        implementation process of the TOE. Therefore,
                        documentary evidence should be supplemented by visiting
                        the development environment. A visit to the development
                        environment will allow the evaluator to:
                        <list type="enumerated">
                            <item>
                                observe the application of defined standards;</item>
                            <item>
                                examine documentary evidence of application of
                                procedures describing the use of defined
                                standards;</item>
                            <item>
                                interview development staff to check awareness of
                                the application of defined standards and
                                procedures.</item></list>

                        A development site visit is a useful means of gaining
                        confidence in the procedures being used. Any decision
                        not to make such a visit should be determined in
                        consultation with the evaluation authority.

                        The evaluator compares the provided implementation
                        representation with the description of the applied
                        implementation standards and verifies their use.
                        At this level it is not required that the complete
                        provided implementation representation of the TSF is
                        based on implementation standards, but only those parts
                        that are developed by the TOE developer himself. The
                        evaluator may consult the configuration list required by
                        the <xref show="title" id="alc_cms"/> to get the
                        information which parts are developed by the TOE
                        developer, and which by third party developers.

                        If the referenced implementation standards are not
                        applied for at least parts of the provided implementation representation,
                        the evaluator action related to this work unit is assigned a fail verdict.

                        Note that parts of the TOE which are not TSF relevant do
                        not need to be examined.

                        This work unit may be performed in conjunction with the
                        evaluation activities under <xref show="id" id="adv_imp"/>.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Compliance with implementation standards -         all parts" id="alc_tat.3"> <aco-hierarchical acomponent="alc_tat.2"/> <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer and his subcontractors have used
                    well-defined development tools (e.g. programming languages
                    or computer-aided design (CAD) systems) that yield
                    consistent and predictable results, and whether
                    implementation standards have been applied.
                </msa-objectives>
                <msa-application-notes>

                    This work may be performed in parallel with the evaluation
                    activities under <xref show="id" id="adv_imp"/>,
                    specifically with regard to determining the use of
                    features in the tools that will affect the object code
                    (e.g. compilation options).
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the development tool documentation;
                        </item>
                        <item>
                            the implementation standards description;
                        </item>
                        <item>
                            the provided implementation representation of the TSF.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="alc_tat.3.1d">
                    The developer shall provide the documentation identifying each development tool being
                    used for the TOE.
                </ae-developer>
                <ae-developer id="alc_tat.3.2d">
                    The developer shall document and provide the selected
                    implementation-dependent options of each development tool.
                </ae-developer>
                <ae-developer id="alc_tat.3.3d">
                    The developer shall describe and provide the implementation standards
                    that are being applied by the developer and by any
                    third-party providers for all parts of the TOE.
                </ae-developer>
                <ae-content id="alc_tat.3.1c">
                    Each development tool used for implementation shall be
                    well-defined.
                </ae-content>
                <ae-content id="alc_tat.3.2c">
                    The documentation of each development tool shall
                    unambiguously define the meaning of all statements as well
                    as all conventions and directives used in the
                    implementation.
                </ae-content>
                <ae-content id="alc_tat.3.3c">
                    The documentation of each development tool shall
                    unambiguously define the meaning of all
                    implementation-dependent options.
                </ae-content>
                <ae-evaluator id="alc_tat.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="alc_tat.3.1c"/>

                        The evaluator shall examine the development tool
                        documentation provided to determine that each
                        development tool is well-defined.

                        For example, a well-defined language, compiler or CAD
                        system may be considered to be one that conforms to a
                        recognised standard, such as the ISO standards. A
                        well-defined language is one that has a clear and
                        complete description of its syntax, and a detailed
                        description of the semantics of each construct.

                        At this level, the documentation of development tools
                        used by third party contributors to the TOE has to be
                        included in the evaluator's examination.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_tat.3.2c"/>

                        The evaluator shall examine the documentation of each
                        development tool to determine that it unambiguously
                        defines the meaning of all statements as well as all
                        conventions and directives used in the
                        implementation.

                        The development tool documentation (e.g. programming
                        language specifications and user manuals) should cover
                        all statements used in the implementation representation
                        of the TOE, and for each such statement should provide a
                        clear and unambiguous definition of the purpose and
                        effect of that statement. This work may be performed in
                        parallel with the evaluator's examination of the
                        implementation representation performed during the <xref show="id" id="adv_imp"/> sub-activity.  The key test the
                        evaluator should apply is whether or not the
                        documentation is sufficiently clear for the evaluator to
                        be able to understand the implementation
                        representation. The documentation should not assume (for
                        example) that the reader is an expert in the programming
                        language used.

                        Reference to the use of a documented standard is an
                        acceptable approach to meet this requirement, provided
                        that the standard is available to the evaluator. Any
                        differences from the standard should be
                        documented.

                        The critical test is whether the evaluator can
                        understand the TOE source code when performing source
                        code analysis covered in the <xref show="id" id="adv_imp"/> sub-activity.  However, the following
                        checklist can additionally be used in searching for
                        problem areas:
                        <list type="enumerated">
                            <item>
                                In the language definition, phrases such as ``the
                                effect of this construct is undefined'' and terms
                                such as ``implementation dependent'' or
                                ``erroneous'' may indicate ill-defined areas.
                            </item>
                            <item>
                                Aliasing (allowing the same piece of memory to be
                                referenced in different ways) is a common source of
                                ambiguity problems.
                            </item>
                            <item>
                                Exception handling (e.g. what happens after memory
                                exhaustion or stack overflow) is often poorly
                                defined.
                            </item>
                        </list>

                        Most languages in common use, however well designed,
                        will have some problematic constructs. If the
                        implementation language is mostly well defined, but some
                        problematic constructs exist, then an inconclusive
                        verdict should be assigned, pending examination of the
                        source code.

                        The evaluator should verify, during the examination of
                        source code, that any use of the problematic constructs
                        does not introduce vulnerabilities. The evaluator should
                        also ensure that constructs precluded by the documented
                        standard are not used.

                        The development tool documentation should define all
                        conventions and directives used in the
                        implementation.

                        At this level, the documentation of development tools
                        used by third party contributors to the TOE has to be
                        included in the evaluator's examination.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="alc_tat.3.3c"/>

                        The evaluator shall examine the development tool
                        documentation to determine that it unambiguously defines
                        the meaning of all implementation-dependent
                        options.

                        The documentation of software development tools should
                        include definitions of implementation-dependent options
                        that may affect the meaning of the executable code, and
                        those that are different from the standard language as
                        documented. Where source code is provided to the
                        evaluator, information should also be provided on
                        compilation and linking options used.

                        The documentation for hardware design and development
                        tools should describe the use of all options that affect
                        the output from the tools (e.g. detailed hardware
                        specifications, or actual hardware).

                        At this level, the documentation of development tools
                        used by third party contributors to the TOE has to be
                        included in the evaluator's examination.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="alc_tat.3.2e">
                    The evaluator shall confirm that the implementation
                    standards have been applied.
                    <m-workunit>

                        The evaluator shall examine aspects of the
                        implementation process to determine that documented
                        implementation standards have been applied.

                        This work unit requires the evaluator to analyse the
                        provided implementation representation of the TOE to
                        determine whether the documented implementation
                        standards have been applied.

                        The evaluator should verify that constructs excluded by
                        the documented standard are not used.

                        Additionally, the evaluator should verify the
                        developer's procedures which ensure the application of
                        the defined standards within the design and
                        implementation process of the TOE. Therefore,
                        documentary evidence should be supplemented by visiting
                        the development environment. A visit to the development
                        environment will allow the evaluator to:
                        <list type="enumerated">
                            <item>
                                observe the application of defined standards;</item>
                            <item>
                                examine documentary evidence of application of
                                procedures describing the use of defined
                                standards;</item>
                            <item>
                                interview development staff to check awareness of
                                the application of defined standards and
                                procedures.</item></list>

                        A development site visit is a useful means of gaining
                        confidence in the procedures being used. Any decision
                        not to make such a visit should be determined in
                        consultation with the evaluation authority.

                        The evaluator compares the provided implementation
                        representation with the description of the applied
                        implementation standards and verifies their use.
                        At this level it is required that the complete
                        provided implementation representation of the TSF is
                        based on implementation standards, including third party
                        contributions. This may require the evaluator to visit
                        the sites of contributors. The evaluator may consult the
                        configuration list required by the <xref show="title" id="alc_cms"/> to see who has developed which part of
                        the TOE.

                        Note that parts of the TOE which are not TSF relevant do
                        not need to be examined.

                        This work unit may be performed in conjunction with the
                        evaluation activities under <xref show="id" id="adv_imp"/>.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
    </a-class>
    <a-class name="Protection Profile evaluation" id="ape">
        <ac-introduction>

            Evaluating a PP is required to demonstrate that the PP is
            sound and internally consistent, and, if the PP is based on
            one or more other PPs or on packages, that the PP is a correct
            instantiation of these PPs and packages. These properties are
            necessary for the PP to be suitable for use as the basis for
            writing an ST or another PP.

            This Clause should be used in conjunction with Annexes <xref show="none" id="Specification-of-Security-Targets"/>, <xref show="none" id="Specification-of-Protection-Profiles"/> and
            <xref show="none" id="Security-Requirements-Annex"/> in CC
            Part 1, as these Annexes clarify the concepts here and provide
            many examples.

            This standard defines two assurance packages for PP evaluation as follows:
            <list type="enumerated"><item>Low assurance PP evaluation package;</item><item>(Standard) PP evaluation package.</item></list>

            The assurance components for these packages are defined by table
            <xref show="link" id="table-pp-assurance"/>.
            <table id="table-pp-assurance">
                <tgroup cols="4">
                    <thead>
                        <row>
                            <entry rowspan="2" align="center" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;text-align:center">Assurance class
                            </entry><entry align="center" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;text-align:center" rowspan="2">Assurance family</entry><entry align="center" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;text-align:center" columnspan="2">Assurance component</entry></row><row><entry align="center">Low Assurance PP</entry><entry align="center">PP</entry></row></thead><tbody><row><entry rowspan="6" style="mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;text-align:center" align="center">Protection Profile evaluation</entry><entry align="center"><xref show="id" id="ape_ccl"/></entry><entry align="center"><bold>1</bold></entry><entry align="center">1</entry></row><row><entry align="center"><xref show="id" id="ape_ecd"/></entry><entry align="center"><bold>1</bold></entry><entry align="center">1</entry></row><row><entry align="center"><xref show="id" id="ape_int"/></entry><entry align="center"><bold>1</bold></entry><entry align="center">1</entry></row><row><entry align="center"><xref show="id" id="ape_obj"/></entry><entry align="center"><bold>1</bold></entry><entry align="center"><bold>2</bold></entry></row><row><entry align="center"><xref show="id" id="ape_req"/></entry><entry align="center"><bold>1</bold></entry><entry align="center"><bold>2</bold></entry></row><row><entry align="center"><xref show="id" id="ape_spd"/></entry><entry style="background:#CCCCCC" align="left"/><entry align="center"><bold>1</bold></entry></row></tbody></tgroup><title>PP assurance packages</title></table>
        </ac-introduction>
        <ac-overview>

            Assurance class <xref show="title" id="ape"/> defines
            requirements for the evaluation of an PP to demonstrate that
            the PP is sound and internally consistent, and, if the PP is
            based on one or more PPs or packages, that the PP is a correct
            instantiation of these PPs and packages.
        </ac-overview>
        <ma-introduction>

            This Clause describes the evaluation of a PP. The
            requirements and methodology for PP evaluation are identical
            for each PP evaluation, regardless of the EAL (or other set of
            assurance requirements) that is claimed in the PP. The
            evaluation methodology in this Clause is based on the
            requirements on the PP as specified in CC Part 3 class <xref id="ape" show="id"/>.

            This Clause should be used in conjunction with Annexes <xref show="none" id="Specification-of-Security-Targets"/>, <xref show="none" id="Specification-of-Protection-Profiles"/> and
            <xref show="none" id="Security-Requirements-Annex"/> in CC
            Part 1, as these Annexes clarify the concepts here and provide
            many examples.
        </ma-introduction>
        <ma-objectives>

            The PP is the description of a TOE type. As such it is
            expected to identify the security requirements that enforce
            the defined OSPs and counter the defined threats under the
            defined assumptions.

            Evaluating a PP is required to demonstrate that the PP is
            sound and internally consistent, and, if the PP is based on
            one or more PPs or packages, that the PP is a correct
            instantiation of these PPs or packages. These properties are
            necessary for the PP to be suitable for use as the basis for
            an ST or another PP.
        </ma-objectives>
        <ma-application-notes>
            <subclause title="Re-using the evaluation results of certified PPs" id="ase-app-reuse-pp2">

                While evaluating a PP that is based on one or more certified
                PPs, it may be possible to re-use the fact that these PPs were
                certified. The potential for re-use of the result of a certified
                PP is greater if the PP under evaluation does not add threats,
                OSPs, security objectives and/or security requirements to those
                of the PP that conformance is being claimed to. If the PP under
                evaluation contains much more than the certified PP, re-use may
                not be useful at all.

                The evaluator is allowed to re-use the PP evaluation results
                by doing certain analyses only partially or not at all if
                these analyses or parts thereof were already done as part of
                the PP evaluation. While doing this, the evaluator should
                assume that the analyses in the PP were performed
                correctly.

                An example would be where the PP that conformance is being
                claimed to contains a set of security requirements, and these
                were determined to be internally consistent during its
                evaluation. If the PP under evaluation uses the exact same
                requirements, the consistency analysis does not have to be
                repeated during the PP evaluation. If the PP under evaluation
                adds one or more requirements, or performs operations on these
                requirements, the analysis will have to be repeated. However, it
                may be possible to save work in this consistency analysis by
                using the fact that the original requirements are internally
                consistent. If the original requirements are internally
                consistent, the evaluator only has to determine that:
                <list type="enumerated"><item>
                    the set of all new and/or changed requirements is internally
                    consistent, and
                </item>
                    <item>
                        the set of all new and/or changed requirements is consistent
                        with the original requirements.
                    </item>
                </list>

                The evaluator notes in the ETR each case where analyses
                are not done or only partially done for this reason.
            </subclause>
        </ma-application-notes>
        <a-family name="PP introduction" id="ape_int">
            <af-objectives>

                The objective of this family is to describe the TOE in a
                narrative way.

                Evaluation of the PP introduction is required to demonstrate
                that the PP is correctly identified, and that the PP
                reference and TOE overview are consistent with each
                other.
            </af-objectives>
            <af-overview>

                The PP introduction describes the TOE in a narrative
                way.
            </af-overview>
            <a-component name="PP introduction" id="ape_int.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the PP is correctly identified, and whether the PP
                    reference and TOE overview are consistent with each
                    other.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the PP.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ape_int.1.1d">
                    The developer shall provide a PP introduction.
                </ae-developer>
                <ae-content id="ape_int.1.1c">
                    The PP introduction shall contain a PP reference and a TOE
                    overview.
                </ae-content>
                <ae-content id="ape_int.1.2c">
                    The PP reference shall uniquely identify the PP.
                </ae-content>
                <ae-content id="ape_int.1.3c">
                    The TOE overview shall summarise the usage and major
                    security features of the TOE.
                </ae-content>
                <ae-content id="ape_int.1.4c">
                    The TOE overview shall identify the TOE type.
                </ae-content>
                <ae-content id="ape_int.1.5c">
                    The TOE overview shall identify any non-TOE
                    hardware/software/firmware available to the TOE.
                </ae-content>
                <ae-evaluator id="ape_int.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ape_int.1.1c"/>

                        The evaluator shall check that the PP introduction
                        contains a PP reference and a TOE overview.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_int.1.2c"/>

                        The evaluator shall examine the PP reference to
                        determine that it uniquely identifies the PP.

                        The evaluator determines that the PP reference
                        identifies the PP itself, so that it may be easily
                        distinguished from other PPs, and that it also uniquely
                        identifies each version of the PP, e.g. by including a
                        version number and/or a date of publication.

                        The PP should have some referencing system that is
                        capable of supporting unique references (e.g. use of
                        numbers, letters or dates).
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_int.1.3c"/>

                        The evaluator shall examine the TOE overview to
                        determine that it describes the usage and major security
                        features of the TOE.

                        The TOE overview should briefly (i.e. several
                        paragraphs) describe the usage and major security
                        features expected of the TOE. The TOE overview should
                        enable consumers and potential TOE developers to quickly
                        determine whether the PP is of interest to them.

                        The evaluator determines that the overview is clear
                        enough for TOE developers and consumers, and sufficient
                        to give them a general understanding of the intended
                        usage and major security features of the TOE.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_int.1.4c"/>

                        The evaluator shall check that the TOE overview
                        identifies the TOE type.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_int.1.5c"/>

                        The evaluator shall examine the TOE overview to
                        determine that it identifies any non-TOE
                        hardware/software/firmware available to the TOE.

                        While some TOEs may run stand-alone, other TOEs (notably
                        software TOEs) need additional hardware, software or
                        firmware to operate. In this subclause of the PP, the PP
                        author lists all hardware, software, and/or firmware
                        that will be available for the TOE to run on.

                        This identification should be detailed enough for
                        potential consumers and TOE developers to determine
                        whether their TOE may operate with the listed hardware,
                        software and firmware.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Conformance claims" id="ape_ccl">
            <af-objectives>

                The objective of this family is to determine the validity of
                the conformance claim. In addition, this family specifies
                how STs and other PPs are to claim conformance with the
                PP.
            </af-objectives>
            <af-overview>

                Conformance claims describes how the Protection Profile
                conforms to CC Part 2 and CC Part 3, to Protection Profiles
                and to packages.
            </af-overview>
            <a-component name="Conformance claims" id="ape_ccl.1">
                <aco-dependsoncomponent acomponent="ape_int.1"/>
                <aco-dependsoncomponent acomponent="ape_ecd.1"/>
                <aco-dependsoncomponent acomponent="ape_req.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine the
                    validity of various conformance claims. These describe how
                    the PP conforms to the CC, other PPs and packages.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the PP;
                        </item>
                        <item>
                            the PP(s) that the PP claims conformance to;
                        </item>
                        <item>
                            the package(s) that the PP claims conformance to.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ape_ccl.1.1d">
                    The developer shall provide a conformance claim.
                </ae-developer>
                <ae-developer id="ape_ccl.1.2d">
                    The developer shall provide a conformance claim rationale.
                </ae-developer>
                <ae-developer id="ape_ccl.1.3d">
                    The developer shall provide a conformance statement.
                </ae-developer>
                <ae-content id="ape_ccl.1.1c">
                    The conformance claim shall contain a CC conformance claim
                    that identifies the version of the CC to which the PP claims
                    conformance.
                </ae-content>
                <ae-content id="ape_ccl.1.2c">
                    The CC conformance claim shall describe the conformance of
                    the PP to CC Part 2 as either CC Part 2 conformant or CC
                    Part 2 extended.
                </ae-content>
                <ae-content id="ape_ccl.1.3c">
                    The CC conformance claim shall describe the conformance of
                    the PP to CC Part 3 as either CC Part 3 conformant or CC
                    Part 3 extended.
                </ae-content>
                <ae-content id="ape_ccl.1.4c">
                    The CC conformance claim shall be consistent with the
                    extended components definition.
                </ae-content>
                <ae-content id="ape_ccl.1.5c">
                    The conformance claim shall identify all PPs and security
                    requirement packages to which the PP claims conformance.
                </ae-content>
                <ae-content id="ape_ccl.1.6c">
                    The conformance claim shall describe any conformance of the
                    PP to a package as either package-conformant or
                    package-augmented.
                </ae-content>
                <ae-content id="ape_ccl.1.7c">
                    The conformance claim rationale shall demonstrate that the
                    TOE type is consistent with the TOE type in the PPs for
                    which conformance is being claimed.
                </ae-content>
                <ae-content id="ape_ccl.1.8c">
                    The conformance claim rationale shall demonstrate that the
                    statement of the security problem definition is consistent
                    with the statement of the security problem definition in the
                    PPs for which conformance is being claimed.
                </ae-content>
                <ae-content id="ape_ccl.1.9c">
                    The conformance claim rationale shall demonstrate that the
                    statement of security objectives is consistent with the
                    statement of security objectives in the PPs for which
                    conformance is being claimed.
                </ae-content>
                <ae-content id="ape_ccl.1.10c">
                    The conformance claim rationale shall demonstrate that the
                    statement of security requirements is consistent with the
                    statement of security requirements in the PPs for which
                    conformance is being claimed.
                </ae-content>
                <ae-content id="ape_ccl.1.11c">
                    The conformance statement shall describe the conformance
                    required of any PPs/STs to the PP as strict-PP or
                    demonstrable-PP conformance.
                </ae-content>
                <ae-evaluator id="ape_ccl.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.1c"/>

                        The evaluator shall check that the conformance claim
                        contains a CC conformance claim that identifies the
                        version of the CC to which the PP claims
                        conformance.

                        The evaluator determines that the CC conformance claim
                        identifies the version of the CC that was used to
                        develop this PP. This should include the version number
                        of the CC and, unless the International English version
                        of the CC was used, the language of the version of the
                        CC that was used.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.2c"/>

                        The evaluator shall check that the CC conformance claim
                        states a claim of either CC Part 2 conformant or CC Part
                        2 extended for the PP.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.3c"/>

                        The evaluator shall check that the CC conformance claim
                        states a claim of either CC Part 3 conformant or CC Part
                        3 extended for the PP.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.4c"/>

                        The evaluator shall examine the CC conformance claim for
                        CC Part 2 to determine that it is consistent with the
                        extended components definition.

                        If the CC conformance claim contains CC Part 2
                        conformant, the evaluator determines that the extended
                        components definition does not define functional
                        components.

                        If the CC conformance claim contains CC Part 2 extended,
                        the evaluator determines that the extended components
                        definition defines at least one extended functional
                        component.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.4c"/>

                        The evaluator shall examine the CC conformance claim for
                        CC Part 3 to determine that it is consistent with the
                        extended components definition.

                        If the CC conformance claim contains CC Part 3
                        conformant, the evaluator determines that the extended
                        components definition does not define assurance
                        components.

                        If the CC conformance claim contains CC Part 3 extended,
                        the evaluator determines that the extended components
                        definition defines at least one extended assurance
                        component.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.5c"/>

                        The evaluator shall check that the conformance claim
                        contains a PP claim that identifies all PPs for which
                        the PP claims conformance.

                        If the PP does not claim conformance to another PP, this
                        work unit is not applicable and therefore considered to
                        be satisfied.
                        The evaluator determines that any referenced PPs
                        are unambiguously identified (e.g. by title and version
                        number, or by the identification included in the
                        introduction of that PP).

                        The evaluator is reminded that claims of partial
                        conformance to a PP are not permitted.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.5c"/>

                        The evaluator shall check that the conformance claim
                        contains a package claim that identifies all packages to
                        which the PP claims conformance.

                        If the PP does not claim conformance to a package, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that any referenced packages
                        are unambiguously identified (e.g. by title and version
                        number, or by the identification included in the
                        introduction of that package).

                        The evaluator is reminded that claims of partial
                        conformance to a package are not permitted.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.6c"/>

                        The evaluator shall check that, for each identified
                        package, the conformance claim states a claim of either
                        package-name conformant or package-name
                        augmented.

                        If the PP does not claim conformance to a package, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        If the package conformance claim contains package-name
                        conformant, the evaluator determines that:
                        <list type="enumerated">
                            <item>
                                If the package is an assurance package, then the PP
                                contains all SARs included in the package, but no
                                additional SARs.
                            </item>
                            <item>
                                If the package is a functional package, then the PP
                                contains all SFRs included in the package, but no
                                additional SFRs.
                            </item>
                        </list>

                        If the package conformance claim contains package-name
                        augmented, the evaluator determines that:
                        <list type="enumerated">
                            <item>
                                If the package is an assurance package, then the PP
                                contains all SARs included in the package, and at
                                least one additional SAR or at least one SAR that is
                                hierarchical to a SAR in the package.
                            </item>
                            <item>
                                If the package is a functional package, then the PP
                                contains all SFRs included in the package, and at
                                least one additional SFR or at least one SFR that is
                                hierarchical to a SFR in the package.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.7c"/>

                        The evaluator shall examine the conformance claim
                        rationale to determine that the TOE type of the TOE is
                        consistent with all TOE types of the PPs.

                        If the PP does not claim conformance to another PP, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The relation between the types may be simple: a firewall
                        PP claiming conformance to another firewall PP, or more
                        complex: a smart card PP claiming conformance to a number
                        of other PPs at the same time: a PP for the integrated
                        circuit, a PP for the smart card OS, and two PPs for two
                        applications on the smart card.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.8c"/>

                        The evaluator shall examine the conformance claim
                        rationale to determine that it demonstrates that the
                        statement of security problem definition is consistent,
                        as defined by the conformance statement of the PP, with
                        the statements of security problem definition stated in
                        the PPs to which conformance is being claimed.

                        If the PP under evaluation does not claim conformance
                        with another PP, this work unit is not applicable and
                        therefore considered to be satisfied.

                        If the PP to which conformance is being claimed does not
                        have a statement of security problem definition, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        If strict conformance is required by the PP to which
                        conformance is being claimed, no conformance claim
                        rationale is required. Instead, the evaluator determines
                        whether
                        <list type="enumerated">
                            <item>
                                the threats in the PP under evaluation are a
                                superset of or identical to the threats in the PP to
                                which conformance is being claimed;
                            </item>
                            <item>
                                the OSPs in the PP under evaluation are a superset
                                of or identical to the OSPs in the PP to which
                                conformance is being claimed;
                            </item>
                            <item>
                                the assumptions in the PP claiming conformance are identical to the assumptions in the PP
                                to which conformance is being claimed, with two possible exceptions described
                                in the following two bullet points;
                                <list type="itemized"><item>
                                    an assumption (or part of an assumption) from the PP to which conformance is claimed, can be omitted,
                                    if all security objectives for the operational environment addressing this assumption (or part of an
                                    assumption) are replaced by security objectives for the TOE;</item><item>
                                    an assumption can be added to the assumptions defined in the PP to which conformance is claimed,
                                    if a justification is given, why the new assumption neither mitigates a threat (or a part of a threat)
                                    meant to be addressed by security objectives for the TOE in the PP to which conformance is claimed,
                                    nor fulfills an OSP (or part of an OSP) meant to be addressed by security objectives for the TOE in the PP
                                    to which conformance is claimed.</item></list>
                                When examining a PP, which omits assumptions
                                from another PP to which conformance is claimed, or adds new assumptions, the evaluator shall carefully determine,
                                if the conditions given above are fulfilled.
                                The following discussion gives some motivation and examples for these cases:
                                <list type="itemized"><item>
                                    Example for omitting an assumption: A PP to which conformance is claimed, may contain an assumption
                                    stating that the operational environment prevents unauthorized modification or interception of data sent
                                    to an external interface of the TOE. This may be the case if the TOE accepts data in clear text and without
                                    integrity protection at this interface and is assumed to be located in a secure operational environment,
                                    which will prevent attackers from accessing these data. The assumption will then be mapped in the PP,
                                    to which conformance is claimed, to some objective for the operational environment stating that the data
                                    interchanged at this interface are protected by adequate measures in the operational environment.
                                    If a PP claiming this PP, defines a more secure TOE,
                                    which has an additional security objective stating that the TOE itself protects these data, for example by
                                    providing a secure channel for encryption and integrity protection of all data transferred via this interface,
                                    the corresponding objective and assumption for the operational environment can be omitted from the PP claiming
                                    conformance. This is also called re-assigning of the objective, since the objective is re-assigned
                                    from the operational environment to the TOE. Note, that this TOE is still secure in an operational
                                    environment fulfilling the omitted assumption and therefore still fulfills the PP to which conformance
                                    is claimed.</item><item>
                                    Example for adding an assumption: In this example the PP to which conformance is claimed, is designed
                                    to specify requirements for a TOE of type "Firewall" and the author of another PP wishes to claim conformance
                                    to this PP for a TOE, which implements a firewall, but additionally provides
                                    the functionality of a virtual private network (VPN) component. For the VPN functionality the TOE needs
                                    cryptographic keys and these keys may also have to be handled securely by the operational environment
                                    (e. g. if symmetric keys are used to secure the network connection and therefore need to be provided
                                    in some secure way to other components in the network). In this case it is acceptable to add an assumption
                                    that the cryptographic keys used by the VPN are handled securely by the operational environment.
                                    This assumption does not address threats or OSPs of the PP to which conformance is claimed, and therefore
                                    fulfills the conditions stated above.</item><item>
                                    Counterexample for adding an assumption: In a variant of the first example a PP to which conformance is
                                    claimed, may already contain an objective for the TOE to provide a secure channel for one of its interfaces,
                                    and this objective is mapped to a threat of unauthorized modification or reading of the data on this interface.
                                    In this case it is clearly not allowed for another PP claiming this PP, to add an assumption for the operational
                                    environment, which assumes that the operational
                                    environment protects data on this interface against modification or unauthorized reading of the data.
                                    This assumption would reduce a threat, which is meant to be addressed by the TOE. Therefore a TOE
                                    fulfilling a PP with this added assumption would not automatically fulfill the PP
                                    to which conformance is claimed, anymore and this addition is therefore not allowed.</item><item>
                                    Second counterexample for adding an assumption: In the example above of a TOE implementing a firewall it would
                                    not be admissible to add a general assumption that the TOE is only connected to trusted devices, because this
                                    would obviously remove essential threats relevant for a firewall (namely that there is untrusted IP traffic,
                                    which needs to be filtered). Therefore this addition would not be allowed.
                                </item></list></item></list>

                        If demonstrable conformance is required by the PP to
                        which conformance is being claimed, the evaluator
                        examines the conformance claim rationale to determine
                        that it demonstrates that the statement of security
                        problem definition of the PP under evaluation is
                        equivalent or more restrictive than the statement of
                        security problem definition in the PP to which
                        conformance is being claimed.
                        For this, the conformance claim rationale needs to demonstrate
                        that the security problem definition in the PP claiming conformance is equivalent (or more restrictive) than the security
                        problem definition in the PP to which conformance is claimed. This means that:
                        <list type="itemized"><item>
                            all TOEs that would meet the security problem definition in the PP claiming conformance also meet the security problem
                            definition in the PP to which conformance is claimed. This can also be shown indirectly by demonstrating that every
                            event, which realizes a threat defined in the PP to which conformance is claimed, or violates an OSP defined in the PP
                            to which conformance is claimed, would also realize a threat stated in the PP claiming conformance or violate an OSP
                            defined in the PP claiming conformance.
                            Note that fulfilling an OSP stated in the PP claiming conformance may avert a threat stated in the PP to which
                            conformance is claimed, or that averting a threat stated in the PP claiming conformance may fulfill an OSP
                            stated in the PP to which conformance is claimed, so threats and OSPs can substitute each other;</item><item>
                            all operational environments that would meet the security problem definition in the PP to which conformance
                            is claimed, would also meet the security problem definition in the PP claiming conformance (with one exception
                            in the next bullet);</item><item>
                            besides a set of assumptions in the PP claiming conformance needed to demonstrate conformance to the SPD of the PP
                            to which conformance is claimed, an PP claiming conformance may specify further assumptions, but only if these
                            additional assumptions are independent of and do not affect the security problem definition as defined in the PP
                            to which conformance is claimed. More detailed, there are no assumptions in the PP claiming conformance that exclude
                            threats to the TOE that need to be countered by the TOE according to the PP to which conformance is claimed.
                            Similarly, there are no assumptions in the PP claiming conformance that realize aspects of an OSP stated in the PP
                            to which conformance is claimed, which are meant to be fulfilled by the TOE according to the PP to which conformance
                            is claimed.</item></list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.9c"/>

                        The evaluator shall examine the conformance claim
                        rationale to determine that the statement of security
                        objectives is consistent, as defined by the conformance
                        statement of the PPs, with the statement of security
                        objectives in the PPs.

                        If the PP does not claim conformance to another PP, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        If strict conformance is required by the PP to which conformance is being claimed, no
                        conformance claim rationale is required. Instead, the
                        evaluator determines whether:
                        <list type="itemized"><item>The PP under evaluation contains all security
                            objectives for the TOE of the PP to which
                            conformance is being claimed. Note that it is
                            allowed for the PP under evaluation to have
                            additional security objectives for the TOE;</item><item>
                            The security objectives for the operational environment in the PP claiming conformance are identical to the security objectives
                            for the operational environment in the PP to which conformance is being claimed, with two possible
                            exceptions described in the following two bullet points;
                        </item><item>
                            a security objective for the operational environment (or part of such security objective) from the PP
                            to which conformance is claimed, can be replaced by the same (part of the) security objective stated for the TOE;
                        </item><item>
                            a security objective for the operational environment can be added to the objectives defined in the PP
                            to which conformance is claimed, if a justification is given, why the new objective neither mitigates a threat
                            (or a part of a threat) meant to be addressed by security objectives for the TOE in the PP to which conformance
                            is claimed, nor fulfills an OSP (or part of an OSP) meant to be addressed by security objectives for the TOE in
                            the PP to which conformance is claimed.
                        </item></list>
                        When examining a PP claiming another PP which omits security objectives for the
                        operational environment from the PP to which conformance is claimed, or adds new security objectives for the
                        operational environment, the evaluator shall carefully determine, if the conditions given above are fulfilled.
                        The examples given for the case of assumptions in the preceding work unit are also valid here.

                        If demonstrable conformance is required by the PP to
                        which conformance is being claimed, the evaluator
                        examines the conformance claim rationale to determine
                        that it demonstrates that the statement of security
                        objectives of the PP under evaluation is equivalent or
                        more restrictive than the statement of security
                        objectives in the PP to which conformance is being
                        claimed.
                        For this the conformance claim rationale needs to demonstrate
                        that the security objectives in the PP claiming conformance are equivalent (or more restrictive) than the security
                        objectives in the PP to which conformance is claimed. This means that:
                        <list type="itemized"><item>
                            all TOEs that would meet the security objectives for the TOE in the PP claiming conformance also meet the
                            security objectives for the TOE in the PP to which conformance is claimed;</item><item>
                            all operational environments that would meet the security objectives for the operational environment in the PP
                            to which conformance is claimed, would also meet the security objectives for the operational environment in the
                            PP claiming conformance (with one exception in the next bullet);</item><item>
                            besides a set of security objectives for the operational environment in the PP claiming conformance, which
                            are used to demonstrate conformance to the set of security objectives defined in the PP to which conformance
                            is claimed, an PP claiming conformance may specify further security objectives for the operational environment,
                            but only if these security objectives neither affect the original set of security objectives for the TOE nor the
                            security objectives for the operational environment as defined in the PP to which conformance is claimed.</item></list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.10c"/>

                        The evaluator shall examine the PP to determine that it
                        is consistent, as defined by the conformance statement
                        of the PP, with all security requirements in the PPs for
                        which conformance is being claimed.

                        If the PP does not claim conformance to another PP, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        If strict conformance is required by the PP to which
                        conformance is being claimed, no conformance claim
                        rationale is required. Instead, the evaluator determines
                        whether the statement of security requirements in the PP
                        under evaluation is a superset of or identical to the
                        statement of security requirements in the PP to which
                        conformance is being claimed (for strict
                        conformance).

                        If demonstrable conformance is required by the PP to
                        which conformance is being claimed, the evaluator
                        examines the conformance claim rationale to determine
                        that it demonstrates that the statement of security
                        requirements of the PP under evaluation is equivalent or
                        more restrictive than the statement of security
                        requirements in the PP to which conformance is being
                        claimed.
                        For:
                        <list type="itemized"><item>
                            SFRs: The conformance rationale in the PP claiming conformance shall demonstrate that the overall
                            set of requirements defined by the SFRs in the PP claiming conformance is equivalent (or more restrictive)
                            than the overall set of requirements defined by the SFRs in the PP to which conformance is claimed. This means
                            that all TOEs that would meet the requirements defined by the set of all SFRs in the PP claiming conformance
                            would also meet the requirements defined by the set of all SFRs in the PP to which conformance is claimed;</item><item>
                            SARs: The PP claiming conformance shall contain all SARs in the PP to which conformance is claimed,
                            but may claim additional SARs or replace SARs by hierarchically stronger SARs. The completion of operations
                            in the PP claiming conformance must be consistent with that in the PP to which conformance is claimed; either
                            the same completion will be used in the PP claiming conformance as that in the PP to which conformance is
                            claimed or a completion that makes the SAR more restrictive (the rules of refinement apply).</item></list>

                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ccl.1.11c"/>

                        The evaluator shall check that the PP conformance
                        statement states a claim of strict-PP or demonstrable-PP
                        conformance.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Security problem definition" id="ape_spd">
            <af-objectives>

                This part of the PP defines the security problem to be
                addressed by the TOE and the operational environment of the
                TOE.

                Evaluation of the security problem definition is required to
                demonstrate that the security problem intended to be
                addressed by the TOE and its operational environment, is
                clearly defined.
            </af-objectives>
            <af-overview>

                The security problem definition defines the problem
                addressed by the TOE and the operational environment of the
                TOE.
            </af-overview>
            <a-component name="Security problem definition" id="ape_spd.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine that
                    the security problem intended to be addressed by the TOE
                    and its operational environment is clearly defined.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the PP.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ape_spd.1.1d">
                    The developer shall provide a security problem definition.
                </ae-developer>
                <ae-content id="ape_spd.1.1c">
                    The security problem definition shall describe the threats.
                </ae-content>
                <ae-content id="ape_spd.1.2c">
                    All threats shall be described in terms of a threat agent,
                    an asset, and an adverse action.
                </ae-content>
                <ae-content id="ape_spd.1.3c">
                    The security problem definition shall describe the OSPs.
                </ae-content>
                <ae-content id="ape_spd.1.4c">
                    The security problem definition shall describe the
                    assumptions about the operational environment of the TOE.
                </ae-content>
                <ae-evaluator id="ape_spd.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ape_spd.1.1c"/>

                        The evaluator shall check that the security problem
                        definition describes the threats.

                        If all security objectives are derived from assumptions
                        and/or OSPs only, the statement of threats need not be
                        present in the PP. In this case, this work unit is not
                        applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that the security problem
                        definition describes the threats that must be countered
                        by the TOE and/or its operational environment.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_spd.1.2c"/>

                        The evaluator shall examine the security problem
                        definition to determine that all threats are described
                        in terms of a threat agent, an asset, and an adverse
                        action.

                        If all security objectives are derived from assumptions
                        and OSPs only, the statement of threats need not be
                        present in the PP. In this case, this work unit is not
                        applicable and therefore considered to be
                        satisfied.

                        Threat agents may be further described by aspects such
                        as expertise, resource, opportunity, and
                        motivation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_spd.1.3c"/>

                        The evaluator shall examine that the security problem
                        definition describes the OSPs.

                        If all security objectives are derived from assumptions
                        and/or threats only, OSPs need not be present in the
                        PP. In this case, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator determines that OSP statements are made in
                        terms of rules or guidelines that must be followed by
                        the TOE and/or its operational environment.

                        The evaluator determines that each OSP is explained
                        and/or interpreted in sufficient detail to make it
                        clearly understandable; a clear presentation of policy
                        statements is necessary to permit tracing security
                        objectives to them.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_spd.1.4c"/>

                        The evaluator shall examine the security problem
                        definition to determine that it describes the
                        assumptions about the operational environment of the
                        TOE.

                        If there are no assumptions, this work unit is not
                        applicable and is therefore considered to be
                        satisfied.

                        The evaluator determines that each assumption about the
                        operational environment of the TOE is explained in
                        sufficient detail to enable consumers to determine that
                        their operational environment matches the assumption. If
                        the assumptions are not clearly understood, the end
                        result may be that the TOE is used in an operational
                        environment in which it will not function in a secure
                        manner.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Security objectives" id="ape_obj">
            <af-objectives>

                The security objectives are a concise statement of the
                intended response to the security problem defined through
                the <xref id="ape_spd" show="link"/> family.

                Evaluation of the security objectives is required to
                demonstrate that the security objectives adequately and
                completely address the security problem definition and that
                the division of this problem between the TOE and its
                operational environment is clearly defined.
            </af-objectives>
            <af-overview>

                The security objectives are a concise statement of the
                intended response to the security problem.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on whether they
                prescribe only security objectives for the operational
                environment, or also security objectives for the TOE.
            </af-levelling-criteria>
            <a-component name="Security objectives for the operational environment" id="ape_obj.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the security objectives for the operational environment
                    are clearly defined.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the PP.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ape_obj.1.1d">
                    The developer shall provide a statement of security
                    objectives.
                </ae-developer>
                <ae-content id="ape_obj.1.1c">
                    The statement of security objectives shall describe the
                    security objectives for the operational environment.
                </ae-content>
                <ae-evaluator id="ape_obj.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ape_obj.1.1c"/>

                        The evaluator shall check that the statement of security
                        objectives defines the security objectives for the
                        operational environment.

                        The evaluator checks that the security objectives for
                        the operational environment are identified.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Security objectives" id="ape_obj.2">
                <aco-hierarchical acomponent="ape_obj.1"/>
                <aco-dependsoncomponent acomponent="ape_spd.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the security objectives adequately and completely address
                    the security problem definition and that the division of
                    this problem between the TOE and its operational
                    environment is clearly defined.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the PP.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ape_obj.2.1d">
                    The developer shall provide a statement of security
                    objectives.
                </ae-developer>
                <ae-developer id="ape_obj.2.2d">
                    The developer shall provide a security objectives rationale.
                </ae-developer>
                <ae-content id="ape_obj.2.1c" boldfrom="ape_obj.1.1c">
                    The statement of security objectives shall describe the
                    security objectives for the TOE and the security objectives
                    for the operational environment.
                </ae-content>
                <ae-content id="ape_obj.2.2c">
                    The security objectives rationale shall trace each security
                    objective for the TOE back to threats countered by that
                    security objective and OSPs enforced by that security
                    objective.
                </ae-content>
                <ae-content id="ape_obj.2.3c">
                    The security objectives rationale shall trace each security
                    objective for the operational environment back to threats
                    countered by that security objective, OSPs enforced by that
                    security objective, and assumptions upheld by that security
                    objective.
                </ae-content>
                <ae-content id="ape_obj.2.4c">
                    The security objectives rationale shall demonstrate that the
                    security objectives counter all threats.
                </ae-content>
                <ae-content id="ape_obj.2.5c">
                    The security objectives rationale shall demonstrate that the
                    security objectives enforce all OSPs.
                </ae-content>
                <ae-content id="ape_obj.2.6c">
                    The security objectives rationale shall demonstrate that the
                    security objectives for the operational environment uphold
                    all assumptions.
                </ae-content>
                <ae-evaluator id="ape_obj.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ape_obj.2.1c"/>

                        The evaluator shall check that the statement of security
                        objectives defines the security objectives for the TOE
                        and the security objectives for the operational
                        environment.

                        The evaluator checks that both categories of security
                        objectives are clearly identified and separated from the
                        other category.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_obj.2.2c"/>

                        The evaluator shall check that the security objectives
                        rationale traces all security objectives for the TOE
                        back to threats countered by the objectives and/or OSPs
                        enforced by the objectives.

                        Each security objective for the TOE may trace back to
                        threats or OSPs, or a combination of threats and OSPs,
                        but it must trace back to at least one threat or
                        OSP.

                        Failure to trace implies that either the security
                        objectives rationale is incomplete, the security problem
                        definition is incomplete, or the security objective for
                        the TOE has no useful purpose.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_obj.2.3c"/>

                        The evaluator shall check that the security objectives
                        rationale traces the security objectives for the
                        operational environment back to threats countered by
                        that security objective, to OSPs enforced by that
                        security objective, and to assumptions upheld by that
                        security objective.

                        Each security objective for the operational environment
                        may trace back to threats, OSPs, assumptions, or a
                        combination of threats, OSPs and/or assumptions, but it
                        must trace back to at least one threat, OSP or
                        assumption.

                        Failure to trace implies that either the security
                        objectives rationale is incomplete, the security problem
                        definition is incomplete, or the security objective for
                        the operational environment has no useful
                        purpose.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_obj.2.4c"/>

                        The evaluator shall examine the security objectives
                        rationale to determine that it justifies for each threat
                        that the security objectives are suitable to counter
                        that threat.

                        If no security objectives trace back to the threat, the evaluator action
                        related to this work unit is assigned a fail verdict.

                        The evaluator determines that the justification for a
                        threat shows whether the threat is removed, diminished
                        or mitigated.

                        The evaluator determines that the justification for a
                        threat demonstrates that the security objectives are
                        sufficient: if all security objectives that trace back
                        to the threat are achieved, the threat is removed,
                        sufficiently diminished, or the effects of the threat
                        are sufficiently mitigated.

                        Note that the tracings from security objectives to
                        threats provided in the security objectives rationale
                        may be part of a justification, but do not constitute a
                        justification by themselves. Even in the case that a
                        security objective is merely a statement reflecting the
                        intent to prevent a particular threat from being
                        realised, a justification is required, but this
                        justification may be as minimal as ``Security Objective
                        X directly counters Threat Y''.

                        The evaluator also determines that each security
                        objective that traces back to a threat is necessary:
                        when the security objective is achieved it actually
                        contributes to the removal, diminishing or mitigation of
                        that threat.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_obj.2.5c"/>

                        The evaluator shall examine the security objectives
                        rationale to determine that for each OSP it justifies
                        that the security objectives are suitable to enforce
                        that OSP.

                        If no security objectives trace back to the OSP, the evaluator action
                        related to this work unit is assigned a fail verdict.

                        The evaluator determines that the justification for an
                        OSP demonstrates that the security objectives are
                        sufficient: if all security objectives that trace back
                        to that OSP are achieved, the OSP is enforced.

                        The evaluator also determines that each security
                        objective that traces back to an OSP is necessary: when
                        the security objective is achieved it actually
                        contributes to the enforcement of the OSP.

                        Note that the tracings from security objectives to OSPs
                        provided in the security objectives rationale may be
                        part of a justification, but do not constitute a
                        justification by themselves. In the case that a security
                        objective is merely a statement reflecting the intent to
                        enforce a particular OSP, a justification is required,
                        but this justification may be as minimal as ``Security
                        Objective X directly enforces OSP Y''.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_obj.2.6c"/>

                        The evaluator shall examine the security objectives
                        rationale to determine that for each assumption for the
                        operational environment it contains an appropriate
                        justification that the security objectives for the
                        operational environment are suitable to uphold that
                        assumption.

                        If no security objectives for the operational environment trace back to the assumption,
                        the evaluator action related to this work unit is assigned a fail verdict.

                        The evaluator determines that the justification for an
                        assumption about the operational environment of the TOE
                        demonstrates that the security objectives are
                        sufficient: if all security objectives for the
                        operational environment that trace back to that
                        assumption are achieved, the operational environment
                        upholds the assumption.

                        The evaluator also determines that each security
                        objective for the operational environment that traces
                        back to an assumption about the operational environment
                        of the TOE is necessary: when the security objective is
                        achieved it actually contributes to the operational
                        environment upholding the assumption.

                        Note that the tracings from security objectives for the
                        operational environment to assumptions provided in the
                        security objectives rationale may be a part of a
                        justification, but do not constitute a justification by
                        themselves. Even in the case that a security objective
                        of the operational environment is merely a restatement
                        of an assumption, a justification is required, but this
                        justification may be as minimal as ``Security Objective
                        X directly upholds Assumption Y''.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Extended components definition" id="ape_ecd">
            <af-objectives>

                Extended security requirements are requirements that are not
                based on components from CC Part 2 or CC Part 3, but are
                based on extended components: components defined by the PP
                author.

                Evaluation of the definition of extended components is
                necessary to determine that they are clear and unambiguous,
                and that they are necessary, i.e. they may not be clearly
                expressed using existing CC Part 2 or CC Part 3
                components.
            </af-objectives>
            <af-overview>

                Extended security requirements are requirements that are not
                based on components from CC Part 2 or CC Part 3, but are
                based on extended components: components defined by the PP
                author. This family is used to determine that these extended
                components are defined similarly to the existing CC Part 2
                or CC Part 3 components.

                Evaluation of the definition of extended components is
                necessary to determine that they are clear and unambiguous,
                and that they are necessary, i.e. they may not be clearly
                expressed using existing CC Part 2 or CC Part 3
                components.
            </af-overview>
            <a-component name="Extended components definition" id="ape_ecd.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    extended components have been clearly and unambiguously
                    defined, and whether they are necessary, i.e. they may not
                    be clearly expressed using existing CC Part 2 or CC Part 3
                    components.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the PP.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ape_ecd.1.1d">
                    The developer shall provide a statement of security
                    requirements.
                </ae-developer>
                <ae-developer id="ape_ecd.1.2d">
                    The developer shall provide an extended components
                    definition.
                </ae-developer>
                <ae-content id="ape_ecd.1.1c">
                    The statement of security requirements shall identify all
                    extended security requirements.
                </ae-content>
                <ae-content id="ape_ecd.1.2c">
                    The extended components definition shall define an extended
                    component for each extended security requirement.
                </ae-content>
                <ae-content id="ape_ecd.1.3c">
                    The extended components definition shall describe how each
                    extended component is related to the existing CC components,
                    families, and classes.
                </ae-content>
                <ae-content id="ape_ecd.1.4c">
                    The extended components definition shall use the existing CC
                    components, families, classes, and methodology as a model
                    for presentation.
                </ae-content>
                <ae-content id="ape_ecd.1.5c">
                    The extended components shall consist of measurable and
                    objective elements such that conformance or nonconformance
                    to these elements can be demonstrated.
                </ae-content>
                <ae-evaluator id="ape_ecd.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.1c"/>

                        The evaluator shall check that all security requirements
                        in the statement of security requirements that are not
                        identified as extended requirements are present in CC
                        Part 2 or in CC Part 3.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.2c"/>

                        The evaluator shall check that the extended components
                        definition defines an extended component for each
                        extended security requirement.

                        If the PP does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        A single extended component may be used to define
                        multiple iterations of an extended security requirement,
                        it is not necessary to repeat this definition for each
                        iteration.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.3c"/>

                        The evaluator shall examine the extended components
                        definition to determine that it describes how each
                        extended component fits into the existing CC components,
                        families, and classes.

                        If the PP does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator determines that each extended component is
                        either:
                        <list type="enumerated">
                            <item>
                                a member of an existing CC Part 2 or CC Part 3
                                family, or
                            </item>
                            <item> a member of a new family defined in the PP.
                            </item>
                        </list>

                        If the extended component is a member of an existing CC
                        Part 2 or CC Part 3 family, the evaluator determines
                        that the extended components definition adequately
                        describes why the extended component should be a member
                        of that family and how it relates to other components of
                        that family.

                        If the extended component is a member of a new family
                        defined in the PP, the evaluator confirms that the
                        extended component is not appropriate for an existing
                        family.

                        If the PP defines new families, the evaluator determines
                        that each new family is either:
                        <list type="enumerated">
                            <item>
                                a member of an existing CC Part 2 or CC Part 3
                                class, or
                            </item>
                            <item>
                                a member of a new class defined in the PP.
                            </item>
                        </list>

                        If the family is a member of an existing CC Part 2 or CC
                        Part 3 class, the evaluator determines that the extended
                        components definition adequately describes why the
                        family should be a member of that class and how it
                        relates to other families in that class.

                        If the family is a member of a new class defined in the
                        PP, the evaluator confirms that the family is not
                        appropriate for an existing class.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.3c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of an
                        extended component identifies all applicable
                        dependencies of that component.

                        If the PP does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator confirms that no applicable dependencies
                        have been overlooked by the PP author.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each extended functional
                        component uses the existing CC Part 2 components as a
                        model for presentation.

                        If the PP does not contain extended SFRs, this work unit
                        is not applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that the extended functional
                        component is consistent with CC Part 2 Subclause <xref show="none" part="2" id="component-structure"/>.

                        If the extended functional component uses operations, the
                        evaluator determines that the extended functional component is
                        consistent with CC Part 1 Subclause <xref show="none" id="components-operations"/>.

                        If the extended functional component is hierarchical to
                        an existing functional component, the evaluator
                        determines that the extended functional component is
                        consistent with CC Part 2 Subclause <xref show="none" part="2" id="component-changes-highlighting"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of a new
                        functional family uses the existing CC functional
                        families as a model for presentation.

                        If the PP does not define new functional families, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that all new functional
                        families are defined consistent with CC Part 2 Subclause
                        <xref show="none" id="family-structure"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of a new
                        functional class uses the existing CC functional classes
                        as a model for presentation.

                        If the PP does not define new functional classes, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that all new functional classes
                        are defined consistent with CC Part 2 Subclause <xref show="none" id="security-functional-components-class-structure"/>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of an
                        extended assurance component uses the existing CC Part 3
                        components as a model for presentation.

                        If the PP does not contain extended SARs, this work unit
                        is not applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that the extended assurance
                        component definition is consistent with CC Part 3
                        Subclause <xref show="none" id="assurance-component-structure"/>.

                        If the extended assurance component uses operations, the
                        evaluator determines that the extended assurance component is
                        consistent with CC Part 1 Subclause <xref show="none" id="components-operations"/>.

                        If the extended assurance component is hierarchical to
                        an existing assurance component, the evaluator
                        determines that the extended assurance component is
                        consistent with CC Part 3 Subclause <xref show="none" part="3" id="assurance-component-structure"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that, for each defined extended
                        assurance component, applicable methodology has been
                        provided.

                        If the PP does not contain extended SARs, this work unit
                        is not applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that, for each evaluator action
                        element of each extended SAR, one or more work units are
                        provided and that successfully performing all work units
                        for a given evaluator action element will demonstrate
                        that the element has been achieved.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of a new
                        assurance family uses the existing CC assurance families
                        as a model for presentation.

                        If the PP does not define new assurance families, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that all new assurance families
                        are defined consistent with CC Part 3 Subclause <xref show="none" id="assurance-family-structure"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of a new
                        assurance class uses the existing CC assurance classes
                        as a model for presentation.

                        If the PP does not define new assurance classes, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that all new assurance classes
                        are defined consistent with CC Part 3 Subclause <xref show="none" id="assurance-class-structure"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_ecd.1.5c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each element in each
                        extended component is measurable and states objective
                        evaluation requirements, such that conformance or
                        nonconformance can be demonstrated.

                        If the PP does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator determines that elements of extended
                        functional components are stated in such a way that they
                        are testable, and traceable through the appropriate TSF
                        representations.

                        The evaluator also determines that elements of extended
                        assurance components avoid the need for subjective
                        evaluator judgement.

                        The evaluator is reminded that whilst being measurable
                        and objective is appropriate for all evaluation
                        criteria, it is acknowledged that no formal method
                        exists to prove such properties. Therefore the existing
                        CC functional and assurance components are to be used as
                        a model for determining what constitutes conformance to
                        this requirement.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ape_ecd.1.2e">
                    The evaluator shall confirm that no extended component may
                    be clearly expressed using existing components.
                    <m-workunit>

                        The evaluator shall examine the extended components
                        definition to determine that each extended component may
                        not be clearly expressed using existing
                        components.

                        If the PP does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator should take components from CC Part 2 and
                        CC Part 3, other extended components that have been
                        defined in the PP, combinations of these components, and
                        possible operations on these components into account
                        when making this determination.

                        The evaluator is reminded that the role of this work
                        unit is to preclude unnecessary duplication of
                        components, that is, components that may be clearly
                        expressed by using other components. The evaluator
                        should not undertake an exhaustive search of all
                        possible combinations of components including operations
                        in an attempt to find a way to express the extended
                        component by using existing components.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Security requirements" id="ape_req">
            <af-objectives>

                The SFRs form a clear, unambiguous and well-defined
                description of the expected security behaviour of the
                TOE. The SARs form a clear, unambiguous and well-defined
                description of the expected activities that will be
                undertaken to gain assurance in the TOE.

                Evaluation of the security requirements is required to
                ensure that they are clear, unambiguous and
                well-defined.
            </af-objectives>
            <af-overview>

                The SFRs form a clear, unambiguous and well-defined
                description of the expected security behaviour of the
                TOE. The SARs form a clear, unambiguous and well-defined
                description of the expected activities that will be
                undertaken to gain assurance in the TOE.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on whether they
                are stated as is, or whether the SFRs are derived from
                security objectives for the TOE.
            </af-levelling-criteria>
            <a-component name="Stated security requirements" id="ape_req.1">
                <aco-dependsoncomponent acomponent="ape_ecd.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the SFRs and SARs are clear, unambiguous and well-defined
                    and whether they are internally consistent.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the PP.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ape_req.1.1d">
                    The developer shall provide a statement of security requirements.
                </ae-developer>
                <ae-developer id="ape_req.1.2d">
                    The developer shall provide a security requirements
                    rationale.
                </ae-developer>
                <ae-content id="ape_req.1.1c">
                    The statement of security requirements shall describe the
                    SFRs and the SARs.
                </ae-content>
                <ae-content id="ape_req.1.2c">
                    All subjects, objects, operations, security attributes,
                    external entities and other terms that are used in the SFRs
                    and the SARs shall be defined.
                </ae-content>
                <ae-content id="ape_req.1.3c">
                    The statement of security requirements shall identify all
                    operations on the security requirements.
                </ae-content>
                <ae-content id="ape_req.1.4c">
                    All operations shall be performed correctly.
                </ae-content>
                <ae-content id="ape_req.1.5c">
                    Each dependency of the security requirements shall either be
                    satisfied, or the security requirements rationale shall
                    justify the dependency not being satisfied.
                </ae-content>
                <ae-content id="ape_req.1.6c">
                    The statement of security requirements shall be internally
                    consistent.
                </ae-content>
                <ae-evaluator id="ape_req.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.1c"/>

                        The evaluator shall check that the statement of security
                        requirements describes the SFRs.

                        The evaluator determines that each SFR is identified by
                        one of the following means:
                        <list type="enumerated">
                            <item>
                                by reference to an individual component in CC Part
                                2;
                            </item>
                            <item>
                                by reference to an extended component in the
                                extended components definition of the PP;
                            </item>
                            <item>
                                by reference to a PP that the PP claims to be
                                conformant with;
                            </item>
                            <item>
                                by reference to a security requirements package that
                                the PP claims to be conformant with;
                            </item>
                            <item>
                                by reproduction in the PP.</item></list>

                        It is not required to use the same means of
                        identification for all SFRs.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.1c"/>

                        The evaluator shall check that the statement of security
                        requirements describes the SARs.

                        The evaluator determines that each SAR is identified by
                        one of the following means:
                        <list type="enumerated">
                            <item>
                                by reference to an individual component in CC Part
                                3;
                            </item>
                            <item>
                                by reference to an extended component in the
                                extended components definition of the PP;
                            </item>
                            <item>
                                by reference to a PP that the PP claims to be
                                conformant with;
                            </item>
                            <item>
                                by reference to a security requirements package that
                                the PP claims to be conformant with;
                            </item>
                            <item>
                                by reproduction in the PP.</item></list>

                        It is not required to use the same means of
                        identification for all SARs.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.2c"/>

                        The evaluator shall examine the PP to determine that all
                        subjects, objects, operations, security attributes,
                        external entities and other terms that are used in the
                        SFRs and the SARs are defined.

                        The evaluator determines that the PP defines all:
                        <list type="itemized">
                            <item>(types of) subjects and objects that are used in
                                the SFRs;</item>
                            <item>(types of) security attributes of subjects, users,
                                objects, information, sessions and/or resources, possible
                                values that these attributes may take and any relations
                                between these values (e.g. top_secret is ``higher'' than secret);</item>
                            <item>(types of) operations that are used in the SFRs,
                                including the effects of these operations;</item>
                            <item>(types of) external entities in the SFRs;</item>
                            <item>other terms that are introduced in the SFRs
                                and/or SARs by completing operations, if these terms
                                are not immediately clear, or are used outside their
                                dictionary definition.</item></list>

                        The goal of this work unit is to ensure that the SFRs
                        and SARs are well-defined and that no misunderstanding
                        may occur due to the introduction of vague terms. This
                        work unit should not be taken into extremes, by forcing
                        the PP writer to define every single word. The general
                        audience of a set of security requirements should be
                        assumed to have a reasonable knowledge of IT, security
                        and Common Criteria.

                        All of the above may be presented in groups, classes,
                        roles, types or other groupings or characterisations
                        that allow easy understanding.

                        The evaluator is reminded that these lists and
                        definitions do not have to be part of the statement of
                        security requirements, but may be placed (in part or in
                        whole) in different subclauses. This may be especially
                        applicable if the same terms are used in the rest of the
                        PP.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.3c"/>

                        The evaluator shall check that the statement of security
                        requirements identifies all operations on the security
                        requirements.

                        The evaluator determines that all operations are
                        identified in each SFR or SAR where such an operation is
                        used. This includes both completed operations and
                        uncompleted operations. Identification may be achieved
                        by typographical distinctions, or by explicit
                        identification in the surrounding text, or by any other
                        distinctive means.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all assignment operations
                        are performed correctly.
                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all iteration operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all selection operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all refinement operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.5c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that each dependency of the
                        security requirements is either satisfied, or that the
                        security requirements rationale justifies the dependency
                        not being satisfied.

                        A dependency is satisfied by the inclusion of the
                        relevant component (or one that is hierarchical to it)
                        within the statement of security requirements. The
                        component used to satisfy the dependency should, if
                        necessary, be modified by operations to ensure that it
                        actually satisfies that dependency.

                        A justification that a dependency is not met should
                        address either:
                        <list type="enumerated">
                            <item>
                                why the dependency is not necessary or useful, in
                                which case no further information is required; or
                            </item>
                            <item>
                                that the dependency has been addressed by the
                                operational environment of the TOE, in which case
                                the justification should describe how the security
                                objectives for the operational environment address
                                this dependency.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.1.6c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that it is internally
                        consistent.

                        The evaluator determines that the combined set of all
                        SFRs and SARs is internally consistent.

                        The evaluator determines that on all occasions where
                        different security requirements apply to the same types
                        of developer evidence, events, operations, data, tests
                        to be performed etc. or to ``all objects'', ``all
                        subjects'' etc., that these requirements do not
                        conflict.

                        Some possible conflicts are:
                        <list type="enumerated">
                            <item>
                                an extended SAR specifying that the design of a
                                certain cryptographic algorithm is to be kept
                                secret, and another extended SAR specifying an open
                                source review;
                            </item>
                            <item><xref id="fau_gen.1" show="link"/> specifying
                                that subject identity is to be logged, <xref id="fdp_acc.1" show="link"/> specifying who has
                                access to these logs, and <xref id="fpr_uno.1" show="link"/> specifying that some actions of
                                subjects should be unobservable to other
                                subjects. If the subject that should not be able to
                                see an activity may access logs of this activity,
                                these SFRs conflict;
                            </item>
                            <item><xref id="fdp_rip.1" show="link"/> specifying
                                deletion of information no longer needed, and <xref id="fdp_rol.1" show="link"/> specifying that a TOE
                                may return to a previous state. If the information
                                that is needed for the rollback to the previous
                                state has been deleted, these requirements conflict;
                            </item>
                            <item>
                                Multiple iterations of <xref id="fdp_acc.1" show="link"/> especially where some iterations cover
                                the same subjects, objects, or operations. If one
                                access control SFR allows a subject to perform an
                                operation on an object, while another access control
                                SFR does not allow this, these requirements
                                conflict.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Derived security requirements" id="ape_req.2">
                <aco-hierarchical acomponent="ape_req.1"/>
                <aco-dependsoncomponent acomponent="ape_obj.2"/>
                <aco-dependsoncomponent acomponent="ape_ecd.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the SFRs and SARs are clear, unambiguous and well-defined,
                    whether they are internally consistent, and whether the
                    SFRs meet the security objectives of the TOE.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the PP.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ape_req.2.1d">
                    The developer shall provide a statement of security requirements.
                </ae-developer>
                <ae-developer id="ape_req.2.2d">
                    The developer shall provide a security requirements
                    rationale.
                </ae-developer>
                <ae-content id="ape_req.2.1c">
                    The statement of security requirements shall describe the
                    SFRs and the SARs.
                </ae-content>
                <ae-content id="ape_req.2.2c">
                    All subjects, objects, operations, security attributes,
                    external entities and other terms that are used in the SFRs
                    and the SARs shall be defined.
                </ae-content>
                <ae-content id="ape_req.2.3c">
                    The statement of security requirements shall identify all
                    operations on the security requirements.
                </ae-content>
                <ae-content id="ape_req.2.4c">
                    All operations shall be performed correctly.
                </ae-content>
                <ae-content id="ape_req.2.5c">
                    Each dependency of the security requirements shall either be
                    satisfied, or the security requirements rationale shall
                    justify the dependency not being satisfied.
                </ae-content>
                <ae-content id="ape_req.2.6c">
                    The security requirements rationale shall trace each SFR
                    back to the security objectives for the TOE.
                </ae-content>
                <ae-content id="ape_req.2.7c">
                    The security requirements rationale shall demonstrate that
                    the SFRs meet all security objectives for the TOE.
                </ae-content>
                <ae-content id="ape_req.2.8c">
                    The security requirements rationale shall explain why the
                    SARs were chosen.
                </ae-content>
                <ae-content id="ape_req.2.9c">
                    The statement of security requirements shall be internally
                    consistent.
                </ae-content>
                <ae-evaluator id="ape_req.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.1c"/>

                        The evaluator shall check that the statement of security
                        requirements describes the SFRs.

                        The evaluator determines that each SFR is identified by
                        one of the following means:
                        <list type="enumerated">
                            <item>
                                by reference to an individual component in CC Part
                                2;
                            </item>
                            <item>
                                by reference to an extended component in the
                                extended components definition of the PP;
                            </item>
                            <item>
                                by reference to an individual component in a PP that
                                the PP claims to be conformant with;
                            </item>
                            <item>
                                by reference to an individual component in a
                                security requirements package that the PP claims to
                                be conformant with;
                            </item>
                            <item>
                                by reproduction in the PP.</item></list>

                        It is not required to use the same means of
                        identification for all SFRs.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.1c"/>

                        The evaluator shall check that the statement of security
                        requirements describes the SARs.

                        The evaluator determines that each SAR is identified by
                        one of the following means:
                        <list type="enumerated">
                            <item>
                                by reference to an individual component in CC Part
                                3;
                            </item>
                            <item>
                                by reference to an extended component in the
                                extended components definition of the PP;
                            </item>
                            <item>
                                by reference to an individual component in a PP that
                                the PP claims to be conformant with;
                            </item>
                            <item>
                                by reference to an individual component in a
                                security requirements package that the PP claims to
                                be conformant with;
                            </item>
                            <item>
                                by reproduction in the PP.</item></list>

                        It is not required to use the same means of
                        identification for all SARs.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.2c"/>

                        The evaluator shall examine the PP to determine that all
                        subjects, objects, operations, security attributes,
                        external entities and other terms that are used in the
                        SFRs and the SARs are defined.

                        The evaluator determines that the PP defines all:
                        <list type="itemized">
                            <item>(types of) subjects and objects that are used in
                                the SFRs;</item>
                            <item>(types of) security attributes of subjects, users,
                                objects, information, sessions and/or resources, possible
                                values that these attributes may take and any relations
                                between these values (e.g. top_secret is ``higher'' than secret);</item>
                            <item>(types of) operations that are used in the SFRs,
                                including the effects of these operations;</item>
                            <item>(types of) external entities in the SFRs;</item>
                            <item>other terms that are introduced in the SFRs
                                and/or SARs by completing operations, if these terms
                                are not immediately clear, or are used outside their
                                dictionary definition.</item></list>

                        The goal of this work unit is to ensure that the SFRs
                        and SARs are well-defined and that no misunderstanding
                        may occur due to the introduction of vague terms. This
                        work unit should not be taken into extremes, by forcing
                        the PP writer to define every single word. The general
                        audience of a set of security requirements should be
                        assumed to have a reasonable knowledge of IT, security
                        and Common Criteria.

                        All of the above may be presented in groups, classes,
                        roles, types or other groupings or characterisations
                        that allow easy understanding.

                        The evaluator is reminded that these lists and
                        definitions do not have to be part of the statement of
                        security requirements, but may be placed (in part or in
                        whole) in different subclauses. This may be especially
                        applicable if the same terms are used in the rest of the
                        PP.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.3c"/>

                        The evaluator shall check that the statement of security
                        requirements identifies all operations on the security
                        requirements.

                        The evaluator determines that all operations are
                        identified in each SFR or SAR where such an operation is
                        used. This includes both completed operations and
                        uncompleted operations. Identification may be achieved
                        by typographical distinctions, or by explicit
                        identification in the surrounding text, or by any other
                        distinctive means.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all assignment operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all iteration operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all selection operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all refinement operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.5c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that each dependency of the
                        security requirements is either satisfied, or that the
                        security requirements rationale justifies the dependency
                        not being satisfied.

                        A dependency is satisfied by the inclusion of the
                        relevant component (or one that is hierarchical to it)
                        within the statement of security requirements. The
                        component used to satisfy the dependency should, if
                        necessary, be modified by operations to ensure that it
                        actually satisfies that dependency.

                        A justification that a dependency is not met should
                        address either:
                        <list type="enumerated">
                            <item>
                                why the dependency is not necessary or useful, in
                                which case no further information is required; or
                            </item>
                            <item>
                                that the dependency has been addressed by the
                                operational environment of the TOE, in which case
                                the justification should describe how the security
                                objectives for the operational environment address
                                this dependency.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.6c"/>

                        The evaluator shall check that the security requirements
                        rationale traces each SFR back to the security
                        objectives for the TOE.

                        The evaluator determines that each SFR is traced back to
                        at least one security objective for the TOE.

                        Failure to trace implies that either the security
                        requirements rationale is incomplete, the security
                        objectives for the TOE are incomplete, or the SFR has no
                        useful purpose.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.7c"/>

                        The evaluator shall examine the security requirements
                        rationale to determine that for each security objective
                        for the TOE it justifies that the SFRs are suitable to
                        meet that security objective for the TOE.

                        If no SFRs trace back to the security objective for the TOE,
                        the evaluator action related to this work unit is assigned a fail verdict.

                        The evaluator determines that the justification for a
                        security objective for the TOE demonstrates that the
                        SFRs are sufficient: if all SFRs that trace back to the
                        objective are satisfied, the security objective for the
                        TOE is achieved.

                        If the SFRs that trace back to a security objective for
                        the TOE have any uncompleted assignments, or uncompleted
                        or restricted selections, the evaluator determines that
                        for every conceivable completion or combination of
                        completions of these operations, the security objective
                        is still met.

                        The evaluator also determines that each SFR that traces
                        back to a security objective for the TOE is necessary:
                        when the SFR is satisfied, it actually contributes to
                        achieving the security objective.

                        Note that the tracings from SFRs to security objectives
                        for the TOE provided in the security requirements
                        rationale may be a part of the justification, but do not
                        constitute a justification by themselves.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.8c"/>

                        The evaluator shall check that the security requirements
                        rationale explains why the SARs were chosen.
                        The evaluator is reminded that any explanation is
                        correct, as long as it is coherent and neither the SARs
                        nor the explanation have obvious inconsistencies with
                        the remainder of the PP.
                        An example of an obvious inconsistency between the
                        SARs and the remainder of the PP would be to have threat
                        agents that are very capable, but an <xref id="ava_van" show="id"/> SAR that does not protect against these
                        threat agents.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ape_req.2.9c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that it is internally
                        consistent.

                        The evaluator determines that the combined set of all
                        SFRs and SARs is internally consistent.

                        The evaluator determines that on all occasions where
                        different security requirements apply to the same types
                        of developer evidence, events, operations, data, tests
                        to be performed etc. or to ``all objects'', ``all
                        subjects'' etc., that these requirements do not
                        conflict.

                        Some possible conflicts are:
                        <list type="enumerated">
                            <item>
                                an extended SAR specifying that the design of a
                                certain cryptographic algorithm is to be kept
                                secret, and another extended SAR specifying an open
                                source review;
                            </item>
                            <item><xref id="fau_gen.1" show="link"/> specifying
                                that subject identity is to be logged, <xref id="fdp_acc.1" show="link"/> specifying who has
                                access to these logs, and <xref id="fpr_uno.1" show="link"/> specifying that some actions of
                                subjects should be unobservable to other
                                subjects. If the subject that should not be able to
                                see an activity may access logs of this activity,
                                these SFRs conflict;
                            </item>
                            <item><xref id="fdp_rip.1" show="link"/> specifying
                                deletion of information no longer needed, and <xref id="fdp_rol.1" show="link"/> specifying that a TOE
                                may return to a previous state. If the information
                                that is needed for the rollback to the previous
                                state has been deleted, these requirements conflict;
                            </item>
                            <item>
                                Multiple iterations of <xref id="fdp_acc.1" show="link"/> especially where some iterations cover
                                the same subjects, objects, or operations. If one
                                access control SFR allows a subject to perform an
                                operation on an object, while another access control
                                SFR does not allow this, these requirements
                                conflict.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
    </a-class>
    <a-class name="Protection Profile Configuration evaluation" id="ace">
        <ac-introduction>

            Evaluating a PP-Configuration is required to demonstrate that the PP-Configuration is
            sound and consistent. These properties are necessary for the PP-Configuration to be
            suitable for use as the basis for writing an ST or another PP or PP-Configuration.

            The class ACE is defined for the evaluation of a PP-Configuration composed of one or
            more PPs and one PP-Module.

            This Clause should be used in conjunction with Annexes <xref id="Specification-of-Protection-Profiles" show="none"/> and
            <xref id="Security-Requirements-Annex" show="none"/> in CC Part 1, as these Annexes clarify the concepts here and provide many examples.

            This standard does not define low assurance PP-Configuration evaluation package.
            There is only one assurance package for PP-Configuration evaluation, equivalent to
            Standard PP evaluation package.

            Figure <xref id="ace-class-decomposition" show="link"/> shows the families within this class, and the hierarchy of components within
            the families.
            <figure entity="clause/graphics/PP-Module_Class_decomposition.png" width="10cm" height="!" title="ACE: Protection Profile Configuration evaluation class decomposition" id="ace-class-decomposition"/>

            The ACE class is based on APE.</ac-introduction>
        <ma-introduction>

            All Base-PP(s) referenced in the PP-Module must be evaluated before the evaluation of a PP-Configuration.
            One possibility for evaluating a PP-Configuration is to flatten all the components of the PP(s) and PP-Modules composing the PP-Configuration and evaluating the resulting PP as a standard PP.
            Another possibility for evaluation of a PP-Configuration composed of several PP-Modules proceeds PP-Module by PP-Module. Considering a PP-Configuration composed of the Protection Profiles P<sub>i</sub> and the PP-Modules M<sub>j</sub>, evaluation of the PP-Configuration proceeds with the following steps, illustrated in Figure <xref id="evaluation_of_a_ppconfiguration" show="link"/>:
            <list type="enumerated"><item> first evaluating independently all Protection Profiles P<sub>i</sub>;</item><item> evaluating the PP-Configuration C<sub>1</sub> composed of the PP-Module M<sub>1</sub> with the Protection Profiles P<sub>i</sub>;</item><item> evaluating the PP-Configuration C<sub>i+1</sub> composed of the PP-Module M<sub>i+1</sub> with the PP-Configuration C<sub>i</sub> considered
                as a standard PP (cf. Section B.13 in CC Part 1);</item><item> iterating the step 3 for all the PP-Modules.</item></list>
            Steps 2 and 3 are themselves performed in two steps:
            <list type="enumerated"><item> Evaluation of the PP-Module with its Base-PP(s) (<xref id="ace_mco.1" show="link"/>)</item><item> Extension of the evaluation (consistency assessment) to the other elements of the PP-Configuration (<xref id="ace_cco.1" show="link"/>)</item></list><figure entity="clause/graphics/PP-Module_evaluation_of_a_PP-Configuration.png" width="12cm" height="!" title="Evaluation of a PP-Configuration" id="evaluation_of_a_ppconfiguration"/>
            The ACE evaluation methodology is based on APE's. The common parts are not duplicated in this document but referred to.</ma-introduction>
        <a-family id="ace_int" name="PP-Module introduction">
            <af-objectives>

                The objective of this family is to describe the TOE in a narrative way.
                The objective of this sub-activity is to determine whether the PP-Module is correctly identified, and whether the PP-Module reference and TOE overview are consistent with each other.</af-objectives><a-component id="ace_int.1" name="PP-Module introduction"><msa-objectives>
            The objective of this sub-activity is to determine whether the PP-Module is correctly identified, and whether the Base-PP(s) and TOE overview are consistent with each other.</msa-objectives><msa-input>
            The evaluation evidence for this sub-activity is:
            <list type="enumerated"><item> the PP-Module;</item><item> its Base-PP(s)</item></list></msa-input><msa-application-notes><italic>All actions of APE_INT.1.1E hold.</italic>
        </msa-application-notes><ae-developer id="ace_int.1.1d"> The developer shall provide a PP-Module introduction. </ae-developer><aco-application-notes>
            <italic>All content and presentation elements of APE_INT.1 hold with PP-Module instead of PP.</italic>
        </aco-application-notes><ae-content id="ace_int.1.1c"> The PP-Module introduction shall uniquely identify all the Base-PPs on which the PP-Module relies, including their logical structuring and relationship to the PP-Module according to CC Part 1, section B.14.3.2.</ae-content><ae-content id="ace_int.1.2c"> The TOE overview shall identify the differences introduced by the PP-Module with respect to the TOE overview of its Base-PP(s).</ae-content><ae-evaluator id="ace_int.1.1e">
            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.
            <m-workunit id="ace_int.1-1"><ae-dc-element id="ace_int.1.1c"/>
                The evaluator shall check that the PP-Module introduction identifies the Base-PP(s) on which the PP-Module relies.</m-workunit><m-workunit id="ace_int.1-2"><ae-dc-element id="ace_int.1.2c"/>
            The evaluator shall check that the TOE overview identifies the differences introduced by the PP-Module with respect to the TOE overview of its Base-PP(s).</m-workunit></ae-evaluator></a-component>
        </a-family>
        <a-family id="ace_ccl" name="PP-Module conformance claims">
            <af-objectives>

                The objective of this family is to determine the validity of the conformance claim. Unlike standard Protection Profiles, a PP-Module cannot claim conformance to another PP or PP-Module, nor to CC part 3 or any SAR package.</af-objectives><a-component id="ace_ccl.1" name="PP-Module conformance claims"><aco-dependsoncomponent acomponent="ace_int.1"/><aco-dependsoncomponent acomponent="ace_ecd.1"/><aco-dependsoncomponent acomponent="ace_req.1"/><msa-objectives>
            The objective of this sub-activity is to determine the validity of various conformance claims. These describe how the PP-Module conforms to the CC Part 2 and SFR packages.</msa-objectives><msa-input>
            The evaluation evidence for this sub-activity is:
            <list type="enumerated"><item> the PP-Module;</item><item> the SFR package(s) that the PP claims conformance to.</item></list></msa-input><ae-developer id="ace_ccl.1.1d"> The developer shall provide a conformance claim. </ae-developer><ae-content id="ace_ccl.1.1c"> The conformance claim shall contain a CC conformance claim that identifies the version of the CC to which the PP-Module claims conformance. </ae-content><ae-content id="ace_ccl.1.2c"> The CC conformance claim shall describe the conformance of the PP-Module to CC Part 2 as either CC Part 2 conformant or CC Part 2 extended. </ae-content><ae-content id="ace_ccl.1.3c"> The conformance claim shall identify all security functional requirement packages to which the PP-Module claims conformance</ae-content><ae-content id="ace_ccl.1.4c"> The CC conformance claim shall be consistent with the extended components definition.</ae-content><ae-evaluator id="ace_ccl.1.1e">
            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.
            <m-workunit id="ace_ccl.1-1"><ae-dc-element id="ace_ccl.1.1c"/>
                The evaluator shall check that the conformance claim contains a CC conformance claim that identifies the version of the CC to which the PP-Module claims conformance.
                The evaluator determines that the CC conformance claim identifies the version of the CC that was used to develop this PP-Module. This should include the version number of the CC and, unless the International English version of the CC was used, the language of the version of the CC that was used.</m-workunit><m-workunit id="ace_ccl.1-2"><ae-dc-element id="ace_ccl.1.2c"/>
            The evaluator shall check that the CC conformance claim states a claim of either CC Part 2 conformant or CC Part 2 extended for the PP-Module.</m-workunit><m-workunit id="ace_ccl.1-3"><ae-dc-element id="ace_ccl.1.3c"/>
            The evaluator shall check that the conformance claim contains a package claim that identifies all security functional requirement packages to which the PP-Module claims conformance.
            If the PP-Module does not claim conformance to a security functional requirement package, this work unit is not applicable and therefore considered to be satisfied.
            The evaluator determines that any referenced security functional requirement packages are unambiguously identified (e.g. by title and version number, or by the identification included in the introduction of that security functional requirement package).
            The evaluator is reminded that claims of partial conformance to a security functional requirement package are not permitted.</m-workunit><m-workunit id="ace_ccl.1-4"><ae-dc-element id="ace_ccl.1.4c"/>
            The evaluator shall examine the CC conformance claim for CC Part 2 to determine that it is consistent with the extended components definition.
            If the CC conformance claim contains CC Part 2 conformant, the evaluator determines that the extended components definition does not define functional components.
            If the CC conformance claim contains CC Part 2 extended, the evaluator determines that the extended components definition defines at least one extended functional component.</m-workunit></ae-evaluator></a-component></a-family>
        <a-family id="ace_spd" name="PP-Module Security problem definition">
            <a-component id="ace_spd.1" name="PP-Module Security problem definition">
                <aco-application-notes>
                    <italic>All content and presentation elements of APE_SPD.1 hold.</italic></aco-application-notes><msa-application-notes>
                <italic>All actions of APE_SPD.1.1E hold.</italic>
            </msa-application-notes></a-component></a-family>
        <a-family id="ace_obj" name="PP-Module Security objectives">
            <a-component id="ace_obj.1" name="PP-Module Security objectives"><aco-application-notes><italic>All content and presentation elements of APE_OBJ.2 hold.</italic></aco-application-notes><msa-application-notes>
                <italic>All actions of APE_OBJ.2.1E hold.</italic>
            </msa-application-notes></a-component></a-family>
        <a-family id="ace_ecd" name="PP-Module extended components definition">
            <af-objectives>

                Extended security functional requirements are requirements that are not based on components from CC Part 2, but are based on extended components: components defined by the PP-Module author.
                Evaluation of the definition of extended functional components is necessary to determine that they are clear and unambiguous, and that they are necessary, i.e. they may not be clearly expressed using existing CC Part 2 components.</af-objectives><a-component id="ace_ecd.1" name="PP-Module extended components definition"><msa-application-notes><italic>All actions of APE_ECD.1.1E hold.</italic>
        </msa-application-notes><ae-developer id="ace_ecd.1.1d"> The developer shall provide a statement of security functional requirements. </ae-developer><ae-developer id="ace_ecd.1.2d"> The developer shall provide an extended functional components definition. </ae-developer><ae-content id="ace_ecd.1.1c"> The statement of security functional requirements shall identify all extended security functional requirements. </ae-content><ae-content id="ace_ecd.1.2c"> The extended functional components definition shall define an extended functional component for each extended security functional requirement.</ae-content><ae-content id="ace_ecd.1.3c"> The extended functional components definition shall describe how each extended functional component is related to the existing CC Part 2 components, families, and classes.</ae-content><ae-content id="ace_ecd.1.4c"> The extended functional components definition shall use the existing CC Part 2 components, families, classes, and methodology as a model for presentation.</ae-content><ae-content id="ace_ecd.1.5c"> The extended functional components shall consist of measurable and objective elements such that conformance or nonconformance to these elements can be demonstrated.</ae-content><ae-evaluator id="ace_ecd.1.1e">
            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.
        </ae-evaluator><ae-evaluator id="ace_ecd.1.2e">
            The evaluator shall confirm that no extended functional component may be clearly expressed using existing components.
        </ae-evaluator></a-component>
        </a-family>
        <a-family id="ace_req" name="PP-Module security requirements">
            <af-objectives>

                The SFRs form a clear, unambiguous and well-defined description of the expected security behaviour of the TOE.
                Evaluation of the security functional requirements is required to ensure that they are clear, unambiguous and well-defined.</af-objectives><a-component id="ace_req.1" name="PP-Module security requirements"><msa-application-notes><italic>All actions of APE_REQ.2.1E hold without considering the SAR part which is empty in PP-Modules.</italic>
        </msa-application-notes><aco-dependsoncomponent acomponent="ace_ecd.1"/><aco-dependsoncomponent acomponent="ace_obj.1"/><ae-developer id="ace_req.1.1d">The developer shall provide a statement of security functional requirements.</ae-developer><ae-developer id="ace_req.1.2d">The developer shall provide a security requirements rationale.</ae-developer><ae-content id="ace_req.1.1c">The statement of security requirements shall describe the SFRs that hold on the TOE.</ae-content><ae-content id="ace_req.1.2c">All subjects, objects, operations, security attributes, external entities and other terms that are used in the SFRs shall be defined.</ae-content><ae-content id="ace_req.1.3c">The statement of security functional requirements shall identify all operations on the security functional requirements.</ae-content><ae-content id="ace_req.1.4c">All operations shall be performed correctly.</ae-content><ae-content id="ace_req.1.5c">Each dependency of the security functional requirements shall either be satisfied, or the security functional requirements rationale shall justify the dependency not being satisfied.</ae-content><ae-content id="ace_req.1.6c">The security functional requirements rationale shall trace each SFR back to the security objectives for the TOE.</ae-content><ae-content id="ace_req.1.7c">The security functional requirements rationale shall demonstrate that the SFRs meet all security objectives for the TOE.</ae-content><ae-evaluator id="ace_req.1.1e">
            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.
        </ae-evaluator></a-component>
        </a-family>
        <a-family id="ace_mco" name="PP-Module consistency">
            <af-objectives>

                The objective of this family is to determine the validity of the PP-Module.</af-objectives><a-component id="ace_mco.1" name="PP-Module consistency"><aco-dependsoncomponent acomponent="ace_int.1"/><aco-dependsoncomponent acomponent="ace_spd.1"/><aco-dependsoncomponent acomponent="ace_obj.1"/><aco-dependsoncomponent acomponent="ace_req.1"/><msa-objectives>
            The objective of this sub-activity is to determine the consistency of the PP-Module regarding its Base-PP(s).</msa-objectives><msa-input>
            The evaluation evidence for this sub-activity is:
            <list type="enumerated"><item> the PP-Module;</item><item> its Base-PP(s).</item></list></msa-input><ae-developer id="ace_mco.1.1d">The developer shall provide a consistency rationale of the PP-Module with respect to its Base-PP(s) identified in the PP-Module introduction. If the PP-Module specifies alternate sets of Base-PPs, the developer shall provide as many consistency rationales as the number of alternate set of Base-PPs.</ae-developer><ae-content id="ace_mco.1.1c">The consistency rationale shall demonstrate that the TOE type of the PP-Module is consistent with the TOE type(s) in the Base-PPs identified in the PP-Module introduction.</ae-content><ae-content id="ace_mco.1.2c">The consistency rationale shall demonstrate that the statement of the security problem definition is consistent with the statement of the security problem definition in the Base-PPs identified in the PP-Module introduction.</ae-content><ae-content id="ace_mco.1.3c">The consistency rationale shall demonstrate that the statement of security objectives is consistent with the statement of security objectives in the Base-PPs identified in the PP-Module introduction.</ae-content><ae-content id="ace_mco.1.4c">The consistency rationale shall demonstrate that the statement of security requirements is consistent with the statement of security requirements in the Base-PPs identified in the PP-Module introduction.</ae-content><ae-evaluator id="ace_mco.1.1e">
            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence. If the PP-Module specifies alternate sets of Base-PPs, the evaluator shall perform this action for each consistency rationale with its related Base-PPs in the alternate set of Base-PPs of the PP-Module.
            <m-workunit id="ace_mco.1-1"><ae-dc-element id="ace_mco.1.1c"/>
                The evaluator shall examine the consistency rationale to determine that the TOE type of the PP-Module is consistent with all the TOE types of the Base-PP(s).
                The relation between the types may be simple: a PP-Module may consider a TOE that provides additional security functionality regarding, or more complex: a TOE that provides a given security functionality in a specific way.</m-workunit><m-workunit id="ace_mco.1-2"><ae-dc-element id="ace_mco.1.2c"/>
            The evaluator shall examine the PP-Module consistency rationale to determine that it demonstrates that the statement of security problem definition of the PP-Module is consistent with the statements of security problem definition stated in its Base-PPs.
            In particular, the evaluator examines the consistency rationale to determine that:
            <list type="enumerated"><item> the statements of threats, assumptions and OSPs in the PP-Module do not contradict those from the Base-PP(s).</item><item> the statement of assumptions in the PP-Module addresses aspects out of scope of the Base-PP, in which case, the addition of elements is allowed.</item></list></m-workunit><m-workunit id="ace_mco.1-3"><ae-dc-element id="ace_mco.1.3c"/>
            The evaluator shall examine the consistency rationale to determine that the statement of security objectives of the PP-Module is consistent with the statement of security objectives of its Base-PP(s).
            In particular, the evaluator examines the consistency rationale to determine that:
            <list type="enumerated"><item> the statements of the security objectives for the TOE and the security objectives for the operational environment in the PP-Module do not contradict those from the Base-PPs.</item><item> the statement of the security objectives for the operational environment in the PP-Module addresses aspects out of scope of the Base-PP, in which case, the addition of elements is allowed.</item></list></m-workunit><m-workunit id="ace_mco.1-4"><ae-dc-element id="ace_mco.1.4c"/>
            The evaluator shall examine the consistency rationale to determine that the statement of security requirements of the PP-Module is consistent with the statement of security requirements of its Base-PPs, that is, the SFRs of the PP-Module either complete or refine the SFRs of the Base-PP(s) and that no contradiction arises from the whole set of SFRs of the PP-Module and the Base-PP(s).</m-workunit></ae-evaluator></a-component></a-family>
        <a-family id="ace_cco" name="PP-Configuration consistency">
            <af-objectives>

                The objective of this family is to determine the well-formedness and the consistency of the PP-Configuration.</af-objectives><a-component id="ace_cco.1" name="PP-Configuration consistency"><aco-dependsoncomponent acomponent="ace_int.1"/><aco-dependsoncomponent acomponent="ace_req.1"/><aco-dependsoncomponent acomponent="ace_mco.1"/><msa-objectives>
            The objective of this sub-activity is to determine whether the PP-Configuration and its components are correctly identified.
            The objective of this sub-activity is also to determine the consistency of the PP-Configuration regarding the whole set of Protection Profiles and PP-Modules.
            For the consistency analysis required by this activity, the application notes of the CEM, Section <xref id="ase-app-reuse-pp2" show="link"/> (<xref id="ase-app-reuse-pp2" show="title"/>), is applicable to determine which parts of the Base-PPs are to be re-evaluated during the evaluation of PP-Configuration</msa-objectives><msa-input>
            The evaluation evidence for this sub-activity is:
            <list type="enumerated"><item> the PP-Configuration reference;</item><item> the PP-Configuration components statement;</item><item> the PP(s) and PP-Modules identified in the components statement.</item></list></msa-input><ae-developer id="ace_cco.1.1d">The developer shall provide the reference of the PP-Configuration.</ae-developer><ae-developer id="ace_cco.1.2d">The developer shall provide a components statement.</ae-developer><ae-developer id="ace_cco.1.3d">The developer shall provide a conformance statement and a conformance claim.</ae-developer><ae-developer id="ace_cco.1.4d">The developer shall provide a SAR statement.</ae-developer><ae-content id="ace_cco.1.1c">The PP-Configuration reference shall uniquely identify the PP-Configuration.</ae-content><ae-content id="ace_cco.1.2c">The components statements shall uniquely identify the Protection Profiles and the PP-Modules that compose the PP-Configuration.</ae-content><ae-content id="ace_cco.1.3c">The conformance statement shall specify the kind of conformity of the PP-Configuration, either strict or demonstrable. The conformance claim shall contain a CC conformance claim that identifies the version of the CC to which the PP-Configuration and its underlying Base-PP(s) and PP-Module claim conformance.</ae-content><ae-content id="ace_cco.1.4c">The SAR statement shall specify the set of SAR or predefined EAL that applies to this PP-Configuration.</ae-content><ae-content id="ace_cco.1.5c">The Base-PP(s) on which the PP-Modules relies shall belong the Protection Profiles identified in the components statement of the PP-Configuration.</ae-content><ae-evaluator id="ace_cco.1.1e">
            The evaluator shall confirm that the information provided meets all requirements for content and presentation of evidence.
            <m-workunit id="ace_cco.1-1"><ae-dc-element id="ace_cco.1.1c"/>
                The evaluator shall examine the PP-Configuration reference to determine that it uniquely identifies the PP-Configuration.
                The evaluator determines that the PP-Configuration reference identifies the PP-Configuration itself, so that it may be easily distinguished from other PPs, PP-Configurations and PP-Modules, and that it also uniquely identifies each version of the PP-Configuration, e.g. by including a version number and/or a date of publication.
                The PP-Configuration should have some referencing system that is capable of supporting unique references (e.g. use of numbers, letters or dates).</m-workunit><m-workunit id="ace_cco.1-2"><ae-dc-element id="ace_cco.1.2c"/>
            The evaluator shall examine the PP-Configuration components statement to determine that it uniquely identifies the Protection Profiles and PP-Modules contained in the PP-Configuration.
            The Protection Profiles should have been certified and available for use in security targets.</m-workunit><m-workunit id="ace_cco.1-3"><ae-dc-element id="ace_cco.1.3c"/>
            The evaluator shall examine the PP-Configuration conformance statement to determine that it specifies the kind of conformity required: strict or demonstrable.
            The evaluator shall check that the conformance claim contains a CC conformance claim that identifies the version of the CC to which the PP-Configuration and its underlying Base-PP(s) and PP-Module claim conformance.
            The evaluator shall examine the PP-Configuration conformance claim to determine the compatibility between all CC versions that are related to the PP-Configuration and its underlying Base-PP(s) and PP-Module.
            If at least one of the Protection Profiles identified in the PP-Configuration components statement claims strict conformance, then the PP-Configuration conformance claim has to state strict conformance also. CC versions used in a PP-Configuration and its underlying Base-PP(s) and PP-Module have to be compatible. If compatibility is not obvious, guidance from the certification scheme should be asked.</m-workunit><m-workunit id="ace_cco.1-4"><ae-dc-element id="ace_cco.1.4c"/>
            The evaluator shall examine the PP-Configuration SAR statement to determine that it specifies a well-formed package of SAR. The SAR package can be build in with components from CC Part 3 or can refer to a specific SAR package stated in one of the Protection Profiles composing the PP-Configuration.
            If the set of SAR comes from CC Part 3 then the evaluator shall check that it is well-formed: it is closed by dependencies or the SAR statements provide a sound discarding rationale.
            The evaluator shall check that the set of SAR of the PP-Configuration is consistent with respect to the SARs of each of the Protection Profiles contained in the PP-Configuration: for any SAR component in each of the Protection Profile, the PP-Configuration provides either the same component or a higher component in the family hierarchy. If the SAR component in the Protection Profile is a refinement of a standard component, then the correspondent SAR component in the PP-Configuration has to include these refinements. If two Protection Profiles refine the same SAR component, the evaluator shall check that the refinements are not contradictory and that the corresponding SAR component in the PP-Configuration meets both.</m-workunit><m-workunit id="ace_cco.1-5"><ae-dc-element id="ace_cco.1.5c"/>
            The evaluator shall check that the Base-PP(s) of the PP-Module are included in the set of PP(s) selected for the PP-Configuration.</m-workunit></ae-evaluator><ae-evaluator id="ace_cco.1.2e">
            The evaluator shall check that the PP-Configuration made up of all the Protection Profiles and PP-Modules identified in the components statement of the PP-Configuration is consistent.
            <m-workunit id="ace_cco.1-6">
                The evaluator shall check that the PP-Configuration made up of all the Protection Profiles and PP-Modules identified in the components statement of the PP-Configuration is consistent. That is, the evaluator shall check that no contradiction arises from the whole set of Protection Profiles and PP-Modules included in the PP-Configuration.
                The evaluator can organise this work in many ways; the actual organisation may depend on the will to derive evaluation results for more than one PP-Configuration at a time.
                For instance, the evaluator can process in two steps as follows:
                <list type="enumerated"><item> Assess the consistency of the set of Protection Profiles composing the PP-Configuration,</item><item> Then proceed with the assessment of the PP-Configuration consistency incrementally, by adding one PP-Module at a time.</item></list>
                An alternative is to proceed incrementally but mixing PPs and PP-Modules or to flatten the definition of the PP-Configuration
                (cf. Annex <xref id="Specification-of-Protection-Profiles" show="none"/> in CC Part 1) and to assess the consistency of the whole set of elements.
                Any incremental consistency analysis step where C is a subset of the PP-Configuration and X is a PP or a PP-Module that has to be added to C consists in:
                <list type="itemized"><item> assessing that the SPD, the objectives and the SFRs of X do not contradict the statements in C;</item><item> the assumptions and objectives for the environment in X either are the same as in C or address security aspects that are out of the scope of C.</item></list>
                Note that if X is a PP-Module, C contains all its Base-PP(s) and <xref id="ace_mco.1" show="link"/> has succeed for X, then the consistency analysis step has to be performed with respect to the components of C different from these Base-PP(s) only.
            </m-workunit>
        </ae-evaluator>
        </a-component></a-family>
    </a-class>
    <a-class name="Security Target evaluation" id="ase">
        <ac-introduction>

            Evaluating an ST is required to demonstrate that the ST is
            sound and internally consistent, and, if the ST is based on
            one or more PPs or packages, that the ST is a correct
            instantiation of these PPs and packages. These properties are
            necessary for the ST to be suitable for use as the basis for a
            TOE evaluation.

            This Clause should be used in conjunction with Annexes <xref show="none" id="Specification-of-Security-Targets"/>, <xref show="none" id="Specification-of-Protection-Profiles"/> and
            <xref show="none" id="Security-Requirements-Annex"/> in CC
            Part 1, as these Annexes clarify the concepts here and provide
            many examples.
        </ac-introduction>
        <ac-overview>

            Assurance class <xref show="title" id="ase"/> defines
            requirements for the evaluation of an ST, to demonstrate that
            the ST is sound and internally consistent, and, if the ST is
            based on one or more PPs or packages, that the ST is a correct
            instantiation of these PPs and packages.
        </ac-overview>
        <ma-introduction>

            This Clause describes the evaluation of an ST. The ST
            evaluation should be started prior to any TOE evaluation
            sub-activities since the ST provides the basis and context to
            perform these sub-activities. The evaluation methodology in
            this subclause is based on the requirements on the ST as
            specified in CC Part 3 class <xref id="ase" show="id"/>.

            This Clause should be used in conjunction with Annexes <xref show="none" id="Specification-of-Security-Targets"/>, <xref show="none" id="Specification-of-Protection-Profiles"/> and
            <xref show="none" id="Security-Requirements-Annex"/> in CC
            Part 1, as these Annexes clarify the concepts here and provide
            many examples.
        </ma-introduction>
        <ma-objectives>

            The ST describes the security features of a TOE. As such it is
            expected to identify the security requirements that enforce
            the defined OSPs and counter the defined threats under the
            defined assumptions.

            Evaluating an ST is required to demonstrate that the ST is
            sound and internally consistent, and, if the ST is based on
            one or more PPs or packages, that the ST is a correct
            instantiation of these PPs or packages. These properties are
            necessary for the ST to be suitable for use as the basis for a
            TOE evaluation.
        </ma-objectives>
        <ma-application-notes>
            <subclause title="Re-using the evaluation results of certified PPs" id="ase-app-reuse-pp">

                While evaluating an ST that is based on one or more
                certified PPs, it may be possible to re-use the fact that
                these PPs were certified. The potential for re-use of the
                result of a certified PP is greater if the ST does not add
                threats, OSPs, assumptions, security objectives and/or
                security requirements to those of the PP. If the ST
                contains much more than the certified PP, re-use may not be
                useful at all.

                The evaluator is allowed to re-use the PP evaluation results
                by doing certain analyses only partially or not at all if
                these analyses or parts thereof were already done as part of
                the PP evaluation. While doing this, the evaluator should
                assume that the analyses in the PP were performed
                correctly.

                An example would be where the PP contains a set of security
                requirements, and these were determined to be internally
                consistent during the PP evaluation. If the ST uses the
                exact same requirements, the consistency analysis does not
                have to be repeated during the ST evaluation. If the ST adds
                one or more requirements, or performs operations on these
                requirements, the analysis will have to be
                repeated. However, it may be possible to save work in this
                consistency analysis by using the fact that the original
                requirements are internally consistent. If the original
                requirements are internally consistent, the evaluator only
                has to determine that:
                <list type="enumerated">
                    <item>
                        the set of all new and/or changed requirements is
                        internally consistent, and
                    </item>
                    <item>
                        the set of all new and/or changed requirements is
                        consistent with the original requirements.</item>
                </list>

                The evaluator notes in the ETR each case where analyses are
                not done or only partially done for this reason.
            </subclause>
        </ma-application-notes>
        <a-family name="ST introduction" id="ase_int">
            <af-objectives>

                The objective of this family is to describe the TOE in a
                narrative way on three levels of abstraction: TOE reference,
                TOE overview and TOE description.

                Evaluation of the ST introduction is required to demonstrate
                that the ST and the TOE are correctly identified, that the
                TOE is correctly described at three levels of abstraction
                and that these three descriptions are consistent with each
                other.
            </af-objectives>
            <af-overview>

                The ST introduction describes the TOE in a narrative way on
                three levels of abstraction: TOE reference, TOE overview and
                TOE description.
            </af-overview>
            <a-component name="ST introduction" id="ase_int.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the ST and the TOE are correctly identified, whether the
                    TOE is correctly described in a narrative way at three
                    levels of abstraction (TOE reference, TOE overview and TOE
                    description), and whether these three descriptions are
                    consistent with each other.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_int.1.1d">
                    The developer shall provide an ST introduction.
                </ae-developer>
                <ae-content id="ase_int.1.1c">
                    The ST introduction shall contain an ST reference, a TOE
                    reference, a TOE overview and a TOE description.
                </ae-content>
                <ae-content id="ase_int.1.2c">
                    The ST reference shall uniquely identify the ST.
                </ae-content>
                <ae-content id="ase_int.1.3c">
                    The TOE reference shall identify the TOE.
                </ae-content>
                <ae-content id="ase_int.1.4c">
                    The TOE overview shall summarise the usage and major
                    security features of the TOE.
                </ae-content>
                <ae-content id="ase_int.1.5c">
                    The TOE overview shall identify the TOE type.
                </ae-content>
                <ae-content id="ase_int.1.6c">
                    The TOE overview shall identify any non-TOE
                    hardware/software/firmware required by the TOE.
                </ae-content>
                <ae-content id="ase_int.1.7c">
                    The TOE description shall describe the physical scope of the
                    TOE.
                </ae-content>
                <ae-content id="ase_int.1.8c">
                    The TOE description shall describe the logical scope of the
                    TOE.
                </ae-content>
                <ae-evaluator id="ase_int.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.1c"/>

                        The evaluator shall check that the ST introduction
                        contains an ST reference, a TOE reference, a TOE
                        overview and a TOE description.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.2c"/>

                        The evaluator shall examine the ST reference to
                        determine that it uniquely identifies the ST.

                        The evaluator determines that the ST reference
                        identifies the ST itself, so that it may be easily
                        distinguished from other STs, and that it also uniquely
                        identifies each version of the ST, e.g. by including a
                        version number and/or a date of publication.

                        In evaluations where a CM system is provided, the
                        evaluator may validate the uniqueness of the reference
                        by checking the configuration list. In the other cases,
                        the ST should have some referencing system that is
                        capable of supporting unique references (e.g. use of
                        numbers, letters or dates).
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.3c"/>

                        The evaluator shall examine the TOE reference to
                        determine that it identifies the TOE.

                        The evaluator determines that the TOE reference
                        identifies the TOE, so that it is clear to which TOE the
                        ST refers, and that it also identifies the version of
                        the TOE, e.g. by including a version/release/build
                        number, or a date of release.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.3c"/>

                        The evaluator shall examine the TOE reference to
                        determine that it is not misleading.

                        If the TOE is related to one or more well-known
                        products, it is allowed to reflect this in the TOE
                        reference. However, this should not be used to mislead
                        consumers: situations where only a small part of a
                        product is evaluated, yet the TOE reference does not
                        reflect this, are not allowed.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.4c"/>

                        The evaluator shall examine the TOE overview to
                        determine that it describes the usage and major security
                        features of the TOE.

                        The TOE overview should briefly (i.e. several
                        paragraphs) describe the usage and major security
                        features of the TOE. The TOE overview should enable
                        potential consumers to quickly determine whether the TOE
                        may be suitable for their security needs.

                        The TOE overview in an ST for a composed TOE should
                        describe the usage and major security feature of the
                        composed TOE, rather than those of the individual
                        component TOEs.

                        The evaluator determines that the overview is clear
                        enough for consumers, and sufficient to give them a
                        general understanding of the intended usage and major
                        security features of the TOE.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.5c"/>

                        The evaluator shall check that the TOE overview
                        identifies the TOE type.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.5c"/>

                        The evaluator shall examine the TOE overview to
                        determine that the TOE type is not misleading.

                        There are situations where the general consumer would
                        expect certain functionality of the TOE because of its
                        TOE type. If this functionality is absent in the TOE,
                        the evaluator determines that the TOE overview
                        adequately discusses this absence.

                        There are also TOEs where the general consumer would
                        expect that the TOE should be able to operate in a
                        certain operational environment because of its TOE
                        type. If the TOE is unable to operate in such an
                        operational environment, the evaluator determines that
                        the TOE overview adequately discusses this.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.6c"/>

                        The evaluator shall examine the TOE overview to
                        determine that it identifies any non-TOE
                        hardware/software/firmware required by the TOE.

                        While some TOEs are able to run stand-alone, other TOEs
                        (notably software TOEs) need additional hardware,
                        software or firmware to operate. If the TOE does not
                        require any hardware, software or firmware, this work
                        unit is not applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that the TOE overview
                        identifies any additional hardware, software and
                        firmware needed by the TOE to operate. This
                        identification does not have to be exhaustive, but
                        detailed enough for potential consumers of the TOE to
                        determine whether their current hardware, software and
                        firmware support use of the TOE, and, if this is not the
                        case, which additional hardware, software and/or
                        firmware is needed.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.7c"/>

                        The evaluator shall examine the TOE description to
                        determine that it describes the physical scope of the
                        TOE.

                        The evaluator determines that the TOE description lists
                        the hardware, firmware, software and guidance parts that
                        constitute the TOE and describes them at a level of
                        detail that is sufficient to give the reader a general
                        understanding of those parts.

                        The evaluator also determines that there is no possible
                        misunderstanding as to whether any hardware, firmware,
                        software or guidance part is part of the TOE or
                        not.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_int.1.8c"/>

                        The evaluator shall examine the TOE description to
                        determine that it describes the logical scope of the
                        TOE.

                        The evaluator determines that the TOE description
                        discusses the logical security features offered by the
                        TOE at a level of detail that is sufficient to give the
                        reader a general understanding of those features.

                        The evaluator also determines that there is no possible
                        misunderstanding as to whether any logical security
                        feature is offered by the TOE or not.

                        An ST for a composed TOE may refer out to the
                        description of the logical scope of the component TOEs,
                        provided in the component TOE STs to provide the
                        majority of this description for the composed TOE.
                        However, the evaluator determines that the composed TOE
                        ST clearly discusses which features of the individual
                        components are not within the composed TOE, and
                        therefore not a feature of the composed TOE.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ase_int.1.2e">
                    The evaluator shall confirm that the TOE reference, the TOE
                    overview, and the TOE description are consistent with each
                    other.
                    <m-workunit>

                        The evaluator shall examine the TOE reference, TOE
                        overview and TOE description to determine that they are
                        consistent with each other.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Conformance claims" id="ase_ccl">
            <af-objectives>

                The objective of this family is to determine the validity of
                the conformance claim. In addition, this family specifies
                how STs are to claim conformance with the PP.
            </af-objectives>
            <af-overview>

                Conformance claims describes how the Security Target
                conforms to CC Part 2 and CC Part 3, to Protection Profiles
                and to packages.
            </af-overview>
            <a-component name="Conformance claims" id="ase_ccl.1">
                <aco-dependsoncomponent acomponent="ase_int.1"/>
                <aco-dependsoncomponent acomponent="ase_ecd.1"/>
                <aco-dependsoncomponent acomponent="ase_req.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine the
                    validity of various conformance claims. These describe how
                    the ST and the TOE conform to the CC and how the ST
                    conforms to PPs and packages.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the PP(s) that the ST claims conformance to;
                        </item>
                        <item>
                            the package(s) that the ST claims conformance to.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_ccl.1.1d">
                    The developer shall provide a conformance claim.
                </ae-developer>
                <ae-developer id="ase_ccl.1.2d">
                    The developer shall provide a conformance claim rationale.
                </ae-developer>
                <ae-content id="ase_ccl.1.1c">
                    The conformance claim shall contain a CC conformance claim
                    that identifies the version of the CC to which the ST and
                    the TOE claim conformance.
                </ae-content>
                <ae-content id="ase_ccl.1.2c">
                    The CC conformance claim shall describe the conformance of
                    the ST to CC Part 2 as either CC Part 2 conformant or CC
                    Part 2 extended.
                </ae-content>
                <ae-content id="ase_ccl.1.3c">
                    The CC conformance claim shall describe the conformance of
                    the ST to CC Part 3 as either CC Part 3 conformant or CC
                    Part 3 extended.
                </ae-content>
                <ae-content id="ase_ccl.1.4c">
                    The CC conformance claim shall be consistent with the
                    extended components definition.
                </ae-content>
                <ae-content id="ase_ccl.1.5c">
                    The conformance claim shall identify all PPs and security
                    requirement packages to which the ST claims conformance.
                </ae-content>
                <ae-content id="ase_ccl.1.6c">
                    The conformance claim shall describe any conformance of the
                    ST to a package as either package-conformant or
                    package-augmented.
                </ae-content>
                <ae-content id="ase_ccl.1.7c">
                    The conformance claim rationale shall demonstrate that the
                    TOE type is consistent with the TOE type in the PPs for
                    which conformance is being claimed.
                </ae-content>
                <ae-content id="ase_ccl.1.8c">
                    The conformance claim rationale shall demonstrate that the
                    statement of the security problem definition is consistent
                    with the statement of the security problem definition in the
                    PPs for which conformance is being claimed.
                </ae-content>
                <ae-content id="ase_ccl.1.9c">
                    The conformance claim rationale shall demonstrate that the
                    statement of security objectives is consistent with the
                    statement of security objectives in the PPs for which
                    conformance is being claimed.
                </ae-content>
                <ae-content id="ase_ccl.1.10c">
                    The conformance claim rationale shall demonstrate that the
                    statement of security requirements is consistent with the
                    statement of security requirements in the PPs for which
                    conformance is being claimed.
                </ae-content>
                <ae-evaluator id="ase_ccl.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.1c"/>

                        The evaluator shall check that the conformance claim
                        contains a CC conformance claim that identifies the
                        version of the CC to which the ST and the TOE claim
                        conformance.

                        The evaluator determines that the CC conformance claim
                        identifies the version of the CC that was used to
                        develop this ST. This should include the version number
                        of the CC and, unless the International English version
                        of the CC was used, the language of the version of the
                        CC that was used.

                        For a composed TOE, the evaluator will consider any
                        differences between the version of the CC claimed for a
                        component and the version of the CC claimed for the
                        composed TOE. If the versions differ the evaluator will
                        assess whether the differences between the versions will
                        lead to conflicting claims.

                        For instances where the CC conformance claims for the
                        base TOE and dependent TOE are for different major
                        releases of the CC (e.g. one component TOE conformance
                        claim is CC v2.x and the other component TOE conformance
                        claim is CC v3.x), the conformance claim for the
                        composed TOE will be the earlier release of the CC, as
                        the CC is developed with an aim to provide backwards
                        compatibility (although this may not be achieved in the
                        strictest sense, it is understood to be achieved in
                        principle).
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.2c"/>

                        The evaluator shall check that the CC conformance claim
                        states a claim of either CC Part 2 conformant or CC Part
                        2 extended for the ST.

                        For a composed TOE, the evaluator will consider whether
                        this claim is consistent not only with the CC Part 2,
                        but also with the claims of conformance to CC Part 2 by
                        each of the component TOEs. I.e. if one or more
                        component TOEs claims to be CC Part 2 extended, then the
                        composed TOE should also claim to be CC Part 2
                        extended.

                        The CC conformance claim for the composed TOE may be CC
                        Part 2 extended, even though the component TOEs are Part
                        2 conformant, in the event that additional SFRs are
                        claimed for the base TOE (see composed TOE guidance for
                        <xref id="ase_ccl.1.6c" show="link"/>)
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.3c"/>

                        The evaluator shall check that the CC conformance claim
                        states a claim of either CC Part 3 conformant or CC Part
                        3 extended for the ST.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.4c"/>

                        The evaluator shall examine the CC conformance claim for
                        CC Part 2 to determine that it is consistent with the
                        extended components definition.

                        If the CC conformance claim contains CC Part 2
                        conformant, the evaluator determines that the extended
                        components definition does not define functional
                        components.

                        If the CC conformance claim contains CC Part 2 extended,
                        the evaluator determines that the extended components
                        definition defines at least one extended functional
                        component.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.4c"/>

                        The evaluator shall examine the CC conformance claim for
                        CC Part 3 to determine that it is consistent with the
                        extended components definition.

                        If the CC conformance claim contains CC Part 3
                        conformant, the evaluator determines that the extended
                        components definition does not define assurance
                        components.

                        If the CC conformance claim contains CC Part 3 extended,
                        the evaluator determines that the extended components
                        definition defines at least one extended assurance
                        component.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.5c"/>

                        The evaluator shall check that the conformance claim
                        contains a PP claim that identifies all PPs for which
                        the ST claims conformance.

                        If the ST does not claim conformance to a PP, this work
                        unit is not applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that any referenced PPs are
                        unambiguously identified (e.g. by title and version
                        number, or by the identification included in the
                        introduction of that PP).

                        The evaluator is reminded that claims of partial
                        conformance to a PP are not permitted. Therefore,
                        conformance to a PP requiring a composite solution may
                        be claimed in an ST for a composed TOE. Conformance to
                        such a PP would not have been possible during the
                        evaluation of the component TOEs, as these components
                        would not have satisfied the composed solution. This is
                        only possible in the instances where the ``composite'' PP
                        permits use of the composition evaluation approach (use
                        of <xref id="aco" show="id"/> components).

                        The ST for a composed TOE will identify the STs of the
                        component TOEs from which the composed ST is comprised.
                        The composed TOE is essentially claiming conformance to
                        the STs of the component TOEs.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.5c"/>

                        The evaluator shall check that the conformance claim
                        contains a package claim that identifies all packages to
                        which the ST claims conformance.

                        If the ST does not claim conformance to a package, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that any referenced packages
                        are unambiguously identified (e.g. by title and version
                        number, or by the identification included in the
                        introduction of that package).

                        The evaluator determines that the component TOE STs from
                        which the composed TOE is derived are also unambiguously
                        identified.

                        The evaluator is reminded that claims of partial
                        conformance to a package are not permitted.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.6c"/>

                        The evaluator shall check that, for each identified
                        package, the conformance claim states a claim of either
                        package-name conformant or package-name
                        augmented.

                        If the ST does not claim conformance to a package, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        If the package conformance claim contains package-name
                        conformant, the evaluator determines that:
                        <list type="enumerated">
                            <item>
                                If the package is an assurance package, then the ST
                                contains all SARs included in the package, but no
                                additional SARs.
                            </item>
                            <item>
                                If the package is a functional package, then the ST
                                contains all SFRs included in the package, but no
                                additional SFRs.
                            </item>
                        </list>

                        If the package conformance claim contains package-name
                        augmented, the evaluator determines that:
                        <list type="enumerated">
                            <item>
                                If the package is an assurance package then the ST
                                contains all SARs included in the package, and at
                                least one additional SAR or at least one SAR that is
                                hierarchical to a SAR in the package.
                            </item>
                            <item>
                                If the package is a functional package, then the ST
                                contains all SFRs included in the package, and at
                                least one additional SFR or at least one SFR that is
                                hierarchical to a SFR in the package.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.7c"/>

                        The evaluator shall examine the conformance claim
                        rationale to determine that the TOE type of the TOE is
                        consistent with all TOE types of the PPs.

                        If the ST does not claim conformance to a PP, this work
                        unit is not applicable and therefore considered to be
                        satisfied.

                        The relation between the types may be simple: a firewall
                        ST claiming conformance to a firewall PP, or more
                        complex: a smart card ST claiming conformance to a number
                        of PPs at the same time (a PP for the integrated
                        circuit, a PP for the smart card OS, and two PPs for two
                        applications on the smart card).

                        For a composed TOE, the evaluator will determine whether
                        the conformance claim rationale demonstrates that the
                        TOE types of the component TOEs are consistent with the
                        composed TOE type. This does not mean that both the
                        component and the composed TOE types have to be the
                        same, but rather that the component TOEs are suitable
                        for integration to provide the composed TOE. It should be made clear in the composed TOE ST which SFRs are only included as a result of composition, and were not examined as SFRs in the base and dependent TOE (e.g. EALx) evaluation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.8c"/>

                        The evaluator shall examine the conformance claim
                        rationale to determine that it demonstrates that the
                        statement of security problem definition is consistent,
                        as defined by the conformance statement of the PP, with
                        the statements of security problem definition stated in
                        the PPs to which conformance is being claimed.

                        If the ST does not claim conformance with a PP, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        If the PP does not have a statement of security problem
                        definition, this work unit is not applicable and
                        therefore considered to be satisfied.

                        If strict conformance is required by the PP to which
                        conformance is being claimed no conformance claim
                        rationale is required. Instead, the evaluator determines
                        whether:
                        <list type="enumerated">
                            <item>
                                the threats in the ST are a superset of or identical
                                to the threats in the PP to which conformance is
                                being claimed;
                            </item>
                            <item>
                                the OSPs in the ST are a superset of or identical to
                                the OSPs in the PP to which conformance is being
                                claimed;
                            </item>
                            <item>
                                the assumptions in the ST are identical to the assumptions in the PP to which conformance is being
                                claimed, with two possible exceptions described in the following two bullet points;
                                <list type="itemized"><item>
                                    an assumption (or part of an assumption) from the PP can be omitted, if all security objectives for the
                                    operational environment addressing this assumption (or part of an assumption) are replaced by
                                    security objectives for the TOE;</item><item>
                                    an assumption can be added to the assumptions defined in the PP, if a rationale is given, why the new
                                    assumption neither mitigates a threat (or a part of a threat) meant to be addressed by
                                    security objectives for the TOE in the PP, nor fulfils an OSP (or part of an OSP) meant to be
                                    addressed by security objectives for the TOE in the PP.</item></list>
                                When examining an ST claiming a PP, which omits assumptions from the PP or adds new assumptions, the
                                evaluator shall carefully determine, if the conditions given above are fulfilled.
                                The following discussion gives some motivation and examples for these cases:
                                <list type="itemized"><item>
                                    Example for omitting an assumption: A PP may contain an assumption stating that the operational
                                    environment prevents unauthorised modification or interception of data sent to an external interface of
                                    the TOE. This may be the case if the TOE accepts data in clear text and without integrity protection at
                                    this interface and is assumed to be located in a secure operational environment, which will prevent
                                    attackers from accessing these data. The assumption will then be mapped in the PP to some objective
                                    for the operational environment stating that the data interchanged at this interface are protected by
                                    adequate measures in the operational environment. If an ST claiming this PP defines a more secure
                                    TOE, which has an additional security objective stating that the TOE itself protects these data, for
                                    example by providing a secure channel for encryption and integrity protection of all data transferred via
                                    this interface, the corresponding objective and assumption for the operational environment can be
                                    omitted from the ST. This is also called re-assigning of the objective, since the objective is re-assigned
                                    from the operational environment to the TOE. Note, that this TOE is still secure in an operational
                                    environment fulfilling the omitted assumption and therefore still fulfils the PP.</item><item>
                                    Example for adding an assumption: In this example the PP is designed to specify requirements for a
                                    TOE of type "Firewall" and an ST author wishes to claim this PP for a TOE, which implements a
                                    firewall, but additionally provides the functionality of a virtual private network (VPN) component. For
                                    the VPN functionality the TOE needs cryptographic keys and these keys may also have to be handled
                                    securely by the operational environment (e. g. if symmetric keys are used to secure the network
                                    connection and therefore need to be provided in some secure way to other components in the
                                    network). In this case it is acceptable to add an assumption that the cryptographic keys used by the
                                    VPN are handled securely by the operational environment. This assumption does not address threats or OSPs of the PP and
                                    therefore fulfils the conditions stated above.</item><item>
                                    Counterexample for adding an assumption: In a variant of the first example a PP may already contain
                                    an objective for the TOE to provide a secure channel for one of its interfaces, and this objective is
                                    mapped to a threat of unauthorised modification or reading of the data on this interface. In this case it
                                    is clearly not allowed for an ST claiming this PP to add an assumption for the operational environment,
                                    which assumes that the operational environment protects data on this interface against modification or
                                    unauthorised reading of the data. This assumption would reduce a threat, which is meant to be
                                    addressed by the TOE. Therefore a TOE fulfilling an ST with this added assumption would not
                                    automatically fulfil the PP any more and this addition is therefore not allowed.</item><item>
                                    Second counterexample for adding an assumption: In the example above of a TOE implementing a
                                    firewall it would not be admissible to add a general assumption that the TOE is only connected to
                                    trusted devices, because this would obviously remove essential threats relevant for a firewall (namely
                                    that there is untrusted IP traffic, which needs to be filtered). Therefore this addition would not be
                                    allowed.
                                </item></list></item></list>

                        If demonstrable conformance is required by the PP, the
                        evaluator examines the conformance claim rationale to
                        determine that it demonstrates that the statement of
                        security problem definition of the ST is equivalent or
                        more restrictive than the statement of security problem
                        definition in the PP to which conformance is being
                        claimed.
                        For this, the conformance claim rationale needs to demonstrate that the security problem definition in
                        the ST is equivalent (or more restrictive) than the security problem definition in the PP. This means that:
                        <list type="itemized"><item>
                            all TOEs that would meet the security problem definition in the ST also meet the security problem
                            definition in the PP. This can also be shown indirectly by demonstrating that every event, which
                            realises a threat defined in the PP or violates an OSP defined in the PP, would also realise a threat
                            stated in the ST or violate an OSP defined in the ST.
                            Note that fulfilling an OSP stated in the ST may avert a threat stated in the PP or that averting a
                            threat stated in the ST may fulfil an OSP stated in the PP, so threats and OSPs can substitute
                            each other;</item><item>
                            all operational environments that would meet the security problem definition in the PP would also
                            meet the security problem definition in the ST (with one exception in the next bullet);</item><item>
                            besides a set of assumptions in the ST needed to demonstrate conformance to the SPD of the PP,
                            an ST may specify further assumptions, but only if these additional assumptions are independent
                            of and do not affect the security problem definition as defined in the PP. More detailed, there are
                            no assumptions in the ST that exclude threats to the TOE that need to be countered by the TOE
                            according to the PP. Similarly, there are no assumptions in the ST that realise aspects of an OSP
                            stated in the PP, which are meant to be fulfilled by the TOE according to the PP."</item></list>

                        For a composed TOE, the evaluator will consider whether
                        the security problem definition of the composed TOE is
                        consistent with that specified in the STs for the
                        component TOEs. This is determined in terms of
                        demonstrable conformance. In particular, the evaluator
                        examines the conformance claim rationale to determine
                        that:
                        <list type="enumerated">
                            <item>
                                Threat statements and OSPs in the composed TOE ST do
                                not contradict those from the component STs.</item>
                            <item>
                                Any assumptions made in the component STs are upheld
                                in the composed TOE ST. That is, either the
                                assumption should also be present in the composed
                                ST, or the assumption should be positively addressed
                                in the composed ST. The assumption may be
                                positively addressed through specification of
                                requirements in the composed TOE to provide
                                functionality fulfilling the concern captured in the
                                assumption.</item></list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.9c"/>

                        The evaluator shall examine the conformance claim
                        rationale to determine that the statement of security
                        objectives is consistent, as defined by the conformance
                        statement of the PP, with the statement of security
                        objectives in the PPs to which conformance is being claimed.

                        If the ST does not claim conformance to a PP, this work
                        unit is not applicable and therefore considered to be
                        satisfied.

                        If strict conformance is required by the PP to which conformance is being claimed, no
                        conformance claim rationale is required. Instead, the
                        evaluator determines whether:
                        <list type="itemized"><item>The ST contains all security objectives for the
                            TOE of the PP to which conformance is being
                            claimed. Note that it is allowed for the ST under
                            evaluation to have additional security objectives
                            for the TOE;</item><item>
                            The security objectives for the operational environment in the ST are identical to the security
                            objectives for the operational environment in the PP to which conformance is being claimed, with two
                            possible exceptions described in the following two bullet points;
                        </item><item>
                            a security objective for the operational environment (or part of such security objective) from the PP can
                            be replaced by the same (part of the) security objective stated for the TOE;
                        </item><item>
                            a security objective for the operational environment can be added to the objectives defined in the PP,
                            if a justification is given, why the new objective neither mitigates a threat (or a part of a threat) meant to
                            be addressed by security objectives for the TOE in the PP, nor fulfils an OSP (or part of
                            an OSP) meant to be addressed by security objectives for the TOE in the PP.
                        </item></list>
                        When examining an ST claiming a PP, which omits security objectives for the operational environment from
                        the PP or adds new security objectives for the operational environment, the evaluator shall carefully
                        determine, if the conditions given above are fulfilled. The examples given for the case of assumptions in the
                        preceding work unit are also valid here.

                        If demonstrable conformance is required by the PP to
                        which conformance is being claimed, the evaluator
                        examines the conformance claim rationale to determine
                        that it demonstrates that the statement of security
                        objectives of the ST is equivalent or more restrictive
                        than the statement of security objectives in the PP to
                        which conformance is being claimed.
                        For this the conformance claim rationale needs to demonstrate that the security objectives in the ST are
                        equivalent (or more restrictive) than the security objectives in the PP. This means that:
                        <list type="itemized"><item>
                            all TOEs that would meet the security objectives for the TOE in the ST also meet the security
                            objectives for the TOE in the PP;</item><item>
                            all operational environments that would meet the security objectives for the operational
                            environment in the PP would also meet the security objectives for the operational environment in
                            the ST (with one exception in the next bullet);</item><item>
                            besides a set of security objectives for the operational environment in the ST, which are used to
                            demonstrate conformance to the set of security objectives defined in the PP, an ST may specify
                            further security objectives for the operational environment, but only if these security objectives
                            neither affect the original set of security objectives for the TOE nor the security objectives for the
                            operational environment as defined in the PP to which conformance is claimed."</item></list>

                        For a composed TOE, the evaluator will consider whether
                        the security objectives of the composed TOE are
                        consistent with that specified in the STs for the
                        component TOEs. This is determined in terms of
                        demonstrable conformance. In particular, the evaluator
                        examines the conformance claim rationale to determine
                        that:
                        <list type="enumerated">
                            <item>
                                The statement of security objectives in the
                                dependent TOE ST relevant to any IT in the
                                operational environment are consistent with the
                                statement of security objectives for the TOE in the
                                base TOE ST. It is not expected that the statement
                                of security objectives for the environment within in
                                the dependent TOE ST will cover all aspects of the
                                statement of security objectives for the TOE in the
                                base TOE ST.</item>
                            <item>
                                The statement of security objectives in the composed
                                ST is consistent with the statements of security
                                objectives in the STs for the component TOEs.</item>
                        </list>

                        If demonstrable conformance is required by the PP, the
                        evaluator examines the conformance claim rationale to
                        determine that it demonstrates that the statement of
                        security objectives of the ST is at least equivalent to
                        the statement of security objectives in the PP, or
                        component TOE ST in the case of a composed TOE
                        ST.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ccl.1.10c"/>

                        The evaluator shall examine the ST to determine that it
                        is consistent, as defined by the conformance statement
                        of the PP, with all security requirements in the PPs for
                        which conformance is being claimed.

                        If the ST does not claim conformance to a PP, this work
                        unit is not applicable and therefore considered to be
                        satisfied.

                        If strict conformance is required by the PP to which
                        conformance is being claimed, no conformance claim
                        rationale is required. Instead, the evaluator determines
                        whether the statement of security requirements in the ST
                        is a superset of or identical to the statement of
                        security requirements in the PP to which conformance is
                        being claimed (for strict conformance).

                        If demonstrable conformance is required by the PP to
                        which conformance is being claimed, the evaluator
                        examines the conformance claim rationale to determine
                        that it demonstrates that the statement of security
                        requirements of the ST is equivalent or more restrictive
                        than the statement of security requirements in the PP to
                        which conformance is being claimed.
                        For:
                        <list type="itemized"><item>
                            SFRs: The conformance rationale in the ST shall demonstrate that the overall set of requirements
                            defined by the SFRs in the ST is equivalent (or more restrictive) than the overall set of
                            requirements defined by the SFRs in the PP. This means that all TOEs that would meet the
                            requirements defined by the set of all SFRs in the ST would also meet the requirements defined by
                            the set of all SFRs in the PP;</item><item>
                            SARs: The ST shall contain all SARs in the PP, but may claim additional SARs or replace SARs by
                            hierarchically stronger SARs. The completion of operations in the ST must be consistent with that
                            in the PP; either the same completion will be used in the ST as that in the PP or a completion that
                            makes the SAR more restrictive (the rules of refinement apply).</item></list>


                        For a composed TOE, the evaluator will consider whether
                        the security requirements of the composed TOE are
                        consistent with that specified in the STs for the
                        component TOEs. This is determined in terms of
                        demonstrable conformance. In particular, the evaluator
                        examines the conformance rationale to determine that:
                        <list type="enumerated">
                            <item>
                                The statement of security requirements in the
                                dependent TOE ST relevant to any IT in the
                                operational environment is consistent with the
                                statement of security requirements for the TOE in
                                the base TOE ST. It is not expected that the
                                statement of security requirements for the
                                environment within in the dependent TOE ST will
                                cover all aspects of the statement of security
                                requirements for the TOE in the base TOE ST, as
                                some SFRs may need to be added to the statement of
                                security requirements in the composed TOE ST.
                                However, the statement of security requirements in
                                the base should support the operation of the dependent
                                component.</item>
                            <item>
                                The statement of security objectives in the
                                dependent TOE ST relevant to any IT in the
                                operational environment is consistent with the
                                statement of security requirements for the TOE in
                                the base TOE ST. It is not expected that the
                                statement of security objectives for the environment
                                within in the dependent TOE ST will cover all
                                aspects of the statement of security requirements
                                for the TOE in the base TOE ST.</item>
                            <item>
                                The statement of security requirements in the
                                composed is consistent with the statements of
                                security requirements in the STs for the component
                                TOEs.</item></list>

                        If demonstrable conformance is required by the PP to
                        which conformance is being claimed, the evaluator
                        examines the conformance claim rationale to determine
                        that it demonstrates that the statement of security
                        requirements of the ST is at least equivalent to the
                        statement of security requirements in the PP, or
                        component TOE ST in the case of a composed TOE
                        ST.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Security problem definition" id="ase_spd">
            <af-objectives>

                This part of the ST defines the security problem to be
                addressed by the TOE and the operational environment of the
                TOE.

                Evaluation of the security problem definition is required to
                demonstrate that the security problem intended to be
                addressed by the TOE and its operational environment, is
                clearly defined.
            </af-objectives>
            <af-overview>

                The security problem definition defines the problem
                addressed by the TOE and the operational environment of the
                TOE.
            </af-overview>
            <a-component name="Security problem definition" id="ase_spd.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine that
                    the security problem intended to be addressed by the TOE
                    and its operational environment is clearly defined.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_apd.1.1d">
                    The developer shall provide a security problem definition.
                </ae-developer>
                <ae-content id="ase_spd.1.1c">
                    The security problem definition shall describe the threats.
                </ae-content>
                <ae-content id="ase_spd.1.2c">
                    All threats shall be described in terms of a threat agent,
                    an asset, and an adverse action.
                </ae-content>
                <ae-content id="ase_spd.1.3c">
                    The security problem definition shall describe the OSPs.
                </ae-content>
                <ae-content id="ase_spd.1.4c">
                    The security problem definition shall describe the
                    assumptions about the operational environment of the TOE.
                </ae-content>
                <ae-evaluator id="ase_spd.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_spd.1.1c"/>

                        The evaluator shall check that the security problem
                        definition describes the threats.

                        If all security objectives are derived from assumptions
                        and/or OSPs only, the statement of threats need not be
                        present in the ST. In this case, this work unit is not
                        applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that the security problem
                        definition describes the threats that must be countered
                        by the TOE and/or operational environment.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_spd.1.2c"/>

                        The evaluator shall examine the security problem
                        definition to determine that all threats are described
                        in terms of a threat agent, an asset, and an adverse
                        action.

                        If all security objectives are derived from assumptions
                        and/or OSPs only, the statement of threats need not be
                        present in the ST. In this case, this work unit is not
                        applicable and therefore considered to be
                        satisfied.

                        Threat agents may be further described by aspects such
                        as expertise, resource, opportunity, and
                        motivation.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_spd.1.3c"/>

                        The evaluator shall examine that the security problem
                        definition describes the OSPs.

                        If all security objectives are derived from assumptions
                        and threats only, OSPs need not be present in the ST. In
                        this case, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator determines that OSP statements are made in
                        terms of rules or guidelines that must be followed by
                        the TOE and/or its operational environment.

                        The evaluator determines that each OSP is explained
                        and/or interpreted in sufficient detail to make it
                        clearly understandable; a clear presentation of policy
                        statements is necessary to permit tracing security
                        objectives to them.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_spd.1.4c"/>

                        The evaluator shall examine the security problem
                        definition to determine that it describes the
                        assumptions about the operational environment of the
                        TOE.

                        If there are no assumptions, this work unit is not
                        applicable and is therefore considered to be
                        satisfied.

                        The evaluator determines that each assumption about the
                        operational environment of the TOE is explained in
                        sufficient detail to enable consumers to determine that
                        their operational environment matches the assumption. If
                        the assumptions are not clearly understood, the end
                        result may be that the TOE is used in an operational
                        environment in which it will not function in a secure
                        manner.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Security objectives" id="ase_obj">
            <af-objectives>

                The security objectives are a concise statement of the
                intended response to the security problem defined through
                the <xref id="ase_spd" show="link"/> family.

                Evaluation of the security objectives is required to
                demonstrate that the security objectives adequately and
                completely address the security problem definition, that the
                division of this problem between the TOE and its operational
                environment is clearly defined.
            </af-objectives>
            <af-overview>

                The security objectives are a concise statement of the
                intended response to the security problem.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on whether they
                prescribe only security objectives for the operational
                environment, or also security objectives for the TOE.
            </af-levelling-criteria>
            <a-component name="Security objectives for the operational           environment" id="ase_obj.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the security objectives for the operational environment
                    are clearly defined.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_obj.1.1d">
                    The developer shall provide a statement of security
                    objectives.
                </ae-developer>
                <ae-content id="ase_obj.1.1c">
                    The statement of security objectives shall describe the
                    security objectives for the operational environment.
                </ae-content>
                <ae-evaluator id="ase_obj.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_obj.1.1c"/>

                        The evaluator shall check that the statement of security
                        objectives defines the security objectives for the
                        operational environment.

                        The evaluator checks that the security objectives for
                        the operational environment are identified.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Security objectives" id="ase_obj.2">
                <aco-hierarchical acomponent="ase_obj.1"/>
                <aco-dependsoncomponent acomponent="ase_spd.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the security objectives adequately and completely address
                    the security problem definition and that the division of
                    this problem between the TOE and its operational
                    environment is clearly defined.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_obj.2.1d">
                    The developer shall provide a statement of security
                    objectives.
                </ae-developer>
                <ae-developer id="ase_obj.2.2d">
                    The developer shall provide a security objectives rationale.
                </ae-developer>
                <ae-content id="ase_obj.2.1c">
                    The statement of security objectives shall describe the
                    security objectives for the TOE and the security objectives
                    for the operational environment.
                </ae-content>
                <ae-content id="ase_obj.2.2c">
                    The security objectives rationale shall trace each security
                    objective for the TOE back to threats countered by that
                    security objective and OSPs enforced by that security
                    objective.
                </ae-content>
                <ae-content id="ase_obj.2.3c">
                    The security objectives rationale shall trace each security
                    objective for the operational environment back to threats
                    countered by that security objective, OSPs enforced by that
                    security objective, and assumptions upheld by that security
                    objective.
                </ae-content>
                <ae-content id="ase_obj.2.4c">
                    The security objectives rationale shall demonstrate that the
                    security objectives counter all threats.
                </ae-content>
                <ae-content id="ase_obj.2.5c">
                    The security objectives rationale shall demonstrate that the
                    security objectives enforce all OSPs.
                </ae-content>
                <ae-content id="ase_obj.2.6c">
                    The security objectives rationale shall demonstrate that the
                    security objectives for the operational environment uphold
                    all assumptions.
                </ae-content>
                <ae-evaluator id="ase_obj.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_obj.2.1c"/>

                        The evaluator shall check that the statement of security
                        objectives defines the security objectives for the TOE
                        and the security objectives for the operational
                        environment.

                        The evaluator checks that both categories of security
                        objectives are clearly identified and separated from the
                        other category.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_obj.2.2c"/>

                        The evaluator shall check that the security objectives
                        rationale traces all security objectives for the TOE
                        back to threats countered by the objectives and/or OSPs
                        enforced by the objectives.

                        Each security objective for the TOE may trace back to
                        threats or OSPs, or a combination of threats and OSPs,
                        but it must trace back to at least one threat or
                        OSP.

                        Failure to trace implies that either the security
                        objectives rationale is incomplete, the security problem
                        definition is incomplete, or the security objective for
                        the TOE has no useful purpose.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_obj.2.3c"/>

                        The evaluator shall check that the security objectives
                        rationale traces the security objectives for the
                        operational environment back to threats countered by
                        that security objective, to OSPs enforced by that
                        security objective, and to assumptions upheld by that
                        security objective.

                        Each security objective for the operational environment
                        may trace back to threats, OSPs, assumptions, or a
                        combination of threats, OSPs and/or assumptions, but it
                        must trace back to at least one threat, OSP or
                        assumption.

                        Failure to trace implies that either the security
                        objectives rationale is incomplete, the security problem
                        definition is incomplete, or the security objective for
                        the operational environment has no useful
                        purpose.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_obj.2.4c"/>

                        The evaluator shall examine the security objectives
                        rationale to determine that it justifies for each threat
                        that the security objectives are suitable to counter
                        that threat.

                        If no security objectives trace back to the threat,
                        the evaluator action related to this work unit is assigned a fail verdict.

                        The evaluator determines that the justification for a
                        threat shows whether the threat is removed, diminished
                        or mitigated.

                        The evaluator determines that the justification for a
                        threat demonstrates that the security objectives are
                        sufficient: if all security objectives that trace back
                        to the threat are achieved, the threat is removed,
                        sufficiently diminished, or the effects of the threat
                        are sufficiently mitigated.

                        Note that the tracings from security objectives to
                        threats provided in the security objectives rationale
                        may be part of a justification, but do not constitute a
                        justification by themselves. Even in the case that a
                        security objective is merely a statement reflecting the
                        intent to prevent a particular threat from being
                        realised, a justification is required, but this
                        justification may be as minimal as ``Security Objective
                        X directly counters Threat Y''.

                        The evaluator also determines that each security
                        objective that traces back to a threat is necessary:
                        when the security objective is achieved it actually
                        contributes to the removal, diminishing or mitigation of
                        that threat.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_obj.2.5c"/>

                        The evaluator shall examine the security objectives
                        rationale to determine that for each OSP it justifies
                        that the security objectives are suitable to enforce
                        that OSP.

                        If no security objectives trace back to the OSP,
                        the evaluator action related to this work unit is assigned a fail verdict.

                        The evaluator determines that the justification for an
                        OSP demonstrates that the security objectives are
                        sufficient: if all security objectives that trace back
                        to that OSP are achieved, the OSP is enforced.

                        The evaluator also determines that each security
                        objective that traces back to an OSP is necessary: when
                        the security objective is achieved it actually
                        contributes to the enforcement of the OSP.

                        Note that the tracings from security objectives to OSPs
                        provided in the security objectives rationale may be
                        part of a justification, but do not constitute a
                        justification by themselves. In the case that a security
                        objective is merely a statement reflecting the intent to
                        enforce a particular OSP, a justification is required,
                        but this justification may be as minimal as ``Security
                        Objective X directly enforces OSP Y''.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_obj.2.6c"/>

                        The evaluator shall examine the security objectives
                        rationale to determine that for each assumption for the
                        operational environment it contains an appropriate
                        justification that the security objectives for the
                        operational environment are suitable to uphold that
                        assumption.

                        If no security objectives for the operational environment trace back to the assumption,
                        the evaluator action related to this work unit is assigned a fail verdict.

                        The evaluator determines that the justification for an
                        assumption about the operational environment of the TOE
                        demonstrates that the security objectives are
                        sufficient: if all security objectives for the
                        operational environment that trace back to that
                        assumption are achieved, the operational environment
                        upholds the assumption.

                        The evaluator also determines that each security
                        objective for the operational environment that traces
                        back to an assumption about the operational environment
                        of the TOE is necessary: when the security objective is
                        achieved it actually contributes to the operational
                        environment upholding the assumption.

                        Note that the tracings from security objectives for the
                        operational environment to assumptions provided in the
                        security objectives rationale may be a part of a
                        justification, but do not constitute a justification by
                        themselves. Even in the case that a security objective
                        of the operational environment is merely a restatement
                        of an assumption, a justification is required, but this
                        justification may be as minimal as ``Security Objective
                        X directly upholds Assumption Y''.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Extended components definition" id="ase_ecd">
            <af-objectives>

                Extended security requirements are requirements that are not
                based on components from CC Part 2 or CC Part 3, but are
                based on extended components: components defined by the ST
                author.

                Evaluation of the definition of extended components is
                necessary to determine that they are clear and unambiguous,
                and that they are necessary, i.e. they may not be clearly
                expressed using existing CC Part 2 or CC Part 3
                components.
            </af-objectives>
            <af-overview>

                Extended components are defined wherever it is impossible to
                clearly express requirements using only components from CC
                Part 2 and/or CC Part 3.
            </af-overview>
            <a-component name="Extended components definition" id="ase_ecd.1">
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    extended components have been clearly and unambiguously
                    defined, and whether they are necessary, i.e. they may not
                    be clearly expressed using existing CC Part 2 or CC Part 3
                    components.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_ecd.1.1d">
                    The developer shall provide a statement of security
                    requirements.
                </ae-developer>
                <ae-developer id="ase_ecd.1.2d">
                    The developer shall provide an extended components
                    definition.
                </ae-developer>
                <ae-content id="ase_ecd.1.1c">
                    The statement of security requirements shall identify all
                    extended security requirements.
                </ae-content>
                <ae-content id="ase_ecd.1.2c">
                    The extended components definition shall define an extended
                    component for each extended security requirement.
                </ae-content>
                <ae-content id="ase_ecd.1.3c">
                    The extended components definition shall describe how each
                    extended component is related to the existing CC components,
                    families, and classes.
                </ae-content>
                <ae-content id="ase_ecd.1.4c">
                    The extended components definition shall use the existing CC
                    components, families, classes, and methodology as a model
                    for presentation.
                </ae-content>
                <ae-content id="ase_ecd.1.5c">
                    The extended components shall consist of measurable and
                    objective elements such that conformance or nonconformance
                    to these elements can be demonstrated.
                </ae-content>
                <ae-evaluator id="ase_ecd.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.1c"/>

                        The evaluator shall check that all security requirements
                        in the statement of security requirements that are not
                        identified as extended requirements are present in CC
                        Part 2 or in CC Part 3.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.2c"/>

                        The evaluator shall check that the extended components
                        definition defines an extended component for each
                        extended security requirement.

                        If the ST does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        A single extended component may be used to define
                        multiple iterations of an extended security requirement,
                        it is not necessary to repeat this definition for each
                        iteration.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.3c"/>

                        The evaluator shall examine the extended components
                        definition to determine that it describes how each
                        extended component fits into the existing CC components,
                        families, and classes.

                        If the ST does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator determines that each extended component is
                        either:
                        <list type="enumerated">
                            <item>
                                a member of an existing CC Part 2 or CC Part 3
                                family, or</item>
                            <item>
                                a member of a new family defined in the ST.</item>
                        </list>

                        If the extended component is a member of an existing CC
                        Part 2 or CC Part 3 family, the evaluator determines
                        that the extended components definition adequately
                        describes why the extended component should be a member
                        of that family and how it relates to other components of
                        that family.

                        If the extended component is a member of a new family
                        defined in the ST, the evaluator confirms that the
                        extended component is not appropriate for an existing
                        family.

                        If the ST defines new families, the evaluator determines
                        that each new family is either:
                        <list type="enumerated">
                            <item>
                                a member of an existing CC Part 2 or CC Part 3
                                class, or</item>
                            <item>
                                a member of a new class defined in the ST.</item>
                        </list>

                        If the family is a member of an existing CC Part 2 or CC
                        Part 3 class, the evaluator determines that the extended
                        components definition adequately describes why the
                        family should be a member of that class and how it
                        relates to other families in that class.

                        If the family is a member of a new class defined in the
                        ST, the evaluator confirms that the family is not
                        appropriate for an existing class.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.3c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of an
                        extended component identifies all applicable
                        dependencies of that component.

                        If the ST does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator confirms that no applicable dependencies
                        have been overlooked by the ST author.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each extended functional
                        component uses the existing CC Part 2 components as a
                        model for presentation.

                        If the ST does not contain extended SFRs, this work unit
                        is not applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that the extended functional
                        component is consistent with CC Part 2 Subclause <xref show="none" part="2" id="component-structure"/>.

                        If the extended functional component uses operations, the
                        evaluator determines that the extended functional component is
                        consistent with CC Part 1 Subclause <xref show="none" id="components-operations"/>.

                        If the extended functional component is hierarchical to
                        an existing functional component, the evaluator
                        determines that the extended functional component is
                        consistent with CC Part 2 Subclause <xref show="none" part="2" id="component-changes-highlighting"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of a new
                        functional family uses the existing CC functional
                        families as a model for presentation.

                        If the ST does not define new functional families, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that all new functional
                        families are defined consistent with CC Part 2 Subclause
                        <xref show="none" id="family-structure"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of a new
                        functional class uses the existing CC functional classes
                        as a model for presentation.

                        If the ST does not define new functional classes, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that all new functional classes
                        are defined consistent with CC Part 2 Subclause <xref show="none" id="security-functional-components-class-structure"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of an
                        extended assurance component uses the existing CC Part 3
                        components as a model for presentation.

                        If the ST does not contain extended SARs, this work unit
                        is not applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that the extended assurance
                        component definition is consistent with CC Part 3
                        Subclause <xref show="none" id="assurance-component-structure"/>.

                        If the extended assurance component uses operations, the
                        evaluator determines that the extended assurance component is
                        consistent with CC Part 1 Subclause <xref show="none" id="components-operations"/>.

                        If the extended assurance component is hierarchical to
                        an existing assurance component, the evaluator
                        determines that the extended assurance component is
                        consistent with CC Part 3 Subclause <xref show="none" id="assurance-component-structure"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that, for each defined extended
                        assurance component, applicable methodology has been
                        provided.

                        If the ST does not contain extended SARs, this work unit
                        is not applicable and therefore considered to be
                        satisfied.

                        The evaluator determines that, for each evaluator action
                        element of each extended SAR, one or more work units are
                        provided and that successfully performing all work units
                        for a given evaluator action element will demonstrate
                        that the element has been achieved.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of a new
                        assurance family uses the existing CC assurance families
                        as a model for presentation.

                        If the ST does not define new assurance families, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that all new assurance families
                        are defined consistent with CC Part 3 Subclause <xref show="none" id="assurance-family-structure"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.4c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each definition of a new
                        assurance class uses the existing CC assurance classes
                        as a model for presentation.

                        If the ST does not define new assurance classes, this
                        work unit is not applicable and therefore considered to
                        be satisfied.

                        The evaluator determines that all new assurance classes
                        are defined consistent with CC Part 3 Subclause <xref show="none" id="assurance-class-structure"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_ecd.1.5c"/>

                        The evaluator shall examine the extended components
                        definition to determine that each element in each
                        extended component is measurable and states objective
                        evaluation requirements, such that conformance or
                        nonconformance can be demonstrated.

                        If the ST does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator determines that elements of extended
                        functional components are stated in such a way that they
                        are testable, and traceable through the appropriate TSF
                        representations.

                        The evaluator also determines that elements of extended
                        assurance components avoid the need for subjective
                        evaluator judgement.

                        The evaluator is reminded that whilst being measurable
                        and objective is appropriate for all evaluation
                        criteria, it is acknowledged that no formal method
                        exists to prove such properties. Therefore the existing
                        CC functional and assurance components are to be used as
                        a model for determining what constitutes conformance
                        with this requirement.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ase_ecd.1.2e">
                    The evaluator shall confirm that no extended component can
                    be clearly expressed using existing components.
                    <m-workunit>

                        The evaluator shall examine the extended components
                        definition to determine that each extended component can
                        not be clearly expressed using existing
                        components.

                        If the ST does not contain extended security
                        requirements, this work unit is not applicable and
                        therefore considered to be satisfied.

                        The evaluator should take components from CC Part 2 and
                        CC Part 3, other extended components that have been
                        defined in the ST, combinations of these components, and
                        possible operations on these components into account
                        when making this determination.

                        The evaluator is reminded that the role of this work
                        unit is to preclude unnecessary duplication of
                        components, that is, components that may be clearly
                        expressed by using other components. The evaluator
                        should not undertake an exhaustive search of all
                        possible combinations of components including operations
                        in an attempt to find a way to express the extended
                        component by using existing components.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Security requirements" id="ase_req">
            <af-objectives>

                The SFRs form a clear, unambiguous and well-defined
                description of the expected security behaviour of the
                TOE. The SARs form a clear, unambiguous and canonical
                description of the expected activities that will be
                undertaken to gain assurance in the TOE.

                Evaluation of the security requirements is required to
                ensure that they are clear, unambiguous and
                well-defined.
            </af-objectives>
            <af-overview>

                The SFRs form a clear, unambiguous and well-defined
                description of the expected security behaviour of the
                TOE. The SARs form a clear, unambiguous and well-defined
                description of the expected activities that will be
                undertaken to gain assurance in the TOE.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on whether they
                are stated as is.
            </af-levelling-criteria>
            <a-component name="Stated security requirements" id="ase_req.1">
                <aco-dependsoncomponent acomponent="ase_ecd.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the SFRs and SARs are clear, unambiguous and well-defined
                    and whether they are internally consistent.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_req.1.1d">
                    The developer shall provide a statement of security requirements.
                </ae-developer>
                <ae-developer id="ase_req.1.2d">
                    The developer shall provide a security requirements
                    rationale.
                </ae-developer>
                <ae-content id="ase_req.1.1c">
                    The statement of security requirements shall describe the
                    SFRs and the SARs.
                </ae-content>
                <ae-content id="ase_req.1.2c">
                    All subjects, objects, operations, security attributes,
                    external entities and other terms that are used in the SFRs
                    and the SARs shall be defined.
                </ae-content>
                <ae-content id="ase_req.1.3c">
                    The statement of security requirements shall identify all
                    operations on the security requirements.
                </ae-content>
                <ae-content id="ase_req.1.4c">
                    All operations shall be performed correctly.
                </ae-content>
                <ae-content id="ase_req.1.5c">
                    Each dependency of the security requirements shall either be
                    satisfied, or the security requirements rationale shall
                    justify the dependency not being satisfied.
                </ae-content>
                <ae-content id="ase_req.1.6c">
                    The statement of security requirements shall be internally
                    consistent.
                </ae-content>
                <ae-evaluator id="ase_req.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.1c"/>

                        The evaluator shall check that the statement of security
                        requirements describes the SFRs.

                        The evaluator determines that each SFR is identified by
                        one of the following means:
                        <list type="enumerated">
                            <item>
                                by reference to an individual component in CC Part
                                2;
                            </item>
                            <item>
                                by reference to an extended component in the
                                extended components definition of the ST;
                            </item>
                            <item>
                                by reference to a PP that the ST claims to be
                                conformant with;
                            </item>
                            <item>
                                by reference to a security requirements package that
                                the ST claims to be conformant with;
                            </item>
                            <item>
                                by reproduction in the ST.</item></list>

                        It is not required to use the same means of
                        identification for all SFRs.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.1c"/>

                        The evaluator shall check that the statement of security
                        requirements describes the SARs.

                        The evaluator determines that each SAR is identified by
                        one of the following means:
                        <list type="enumerated">
                            <item>
                                by reference to an individual component in CC Part
                                3;
                            </item>
                            <item>
                                by reference to an extended component in the
                                extended components definition of the ST;
                            </item>
                            <item>
                                by reference to a PP that the ST claims to be
                                conformant with;
                            </item>
                            <item>
                                by reference to a security requirements package that
                                the ST claims to be conformant with;
                            </item>
                            <item>
                                by reproduction in the ST.</item></list>

                        It is not required to use the same means of
                        identification for all SARs.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.2c"/>

                        The evaluator shall examine the ST to determine that all
                        subjects, objects, operations, security attributes,
                        external entities and other terms that are used in the
                        SFRs and the SARs are defined.

                        The evaluator determines that the ST defines all:
                        <list type="itemized">
                            <item>(types of) subjects and objects that are used in
                                the SFRs;</item>
                            <item>(types of) security attributes of subjects, users,
                                objects, information, sessions and/or resources, possible
                                values that these attributes may take and any relations
                                between these values (e.g. top_secret is ``higher'' than secret);</item>
                            <item>(types of) operations that are used in the SFRs,
                                including the effects of these operations;</item>
                            <item>(types of) external entities in the SFRs;</item>
                            <item>other terms that are introduced in the SFRs
                                and/or SARs by completing operations, if these terms
                                are not immediately clear, or are used outside their
                                dictionary definition.</item></list>

                        The goal of this work unit is to ensure that the SFRs
                        and SARs are well-defined and that no misunderstanding
                        may occur due to the introduction of vague terms. This
                        work unit should not be taken into extremes, by forcing
                        the ST writer to define every single word. The general
                        audience of a set of security requirements should be
                        assumed to have a reasonable knowledge of IT, security
                        and Common Criteria.

                        All of the above may be presented in groups, classes,
                        roles, types or other groupings or characterisations
                        that allow easy understanding.

                        The evaluator is reminded that these lists and
                        definitions do not have to be part of the statement of
                        security requirements, but may be placed (in part or in
                        whole) in different subclauses. This may be especially
                        applicable if the same terms are used in the rest of the
                        ST.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.3c"/>

                        The evaluator shall check that the statement of security
                        requirements identifies all operations on the security
                        requirements.

                        The evaluator determines that all operations are
                        identified in each SFR or SAR where such an operation is
                        used. Identification may be achieved by typographical
                        distinctions, or by explicit identification in the
                        surrounding text, or by any other distinctive
                        means.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all assignment operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all iteration operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all selection operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all refinement operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.5c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that each dependency of the
                        security requirements is either satisfied, or that a
                        security requirements rationale is provided which justifies the dependency
                        not being satisfied.

                        A dependency is satisfied by the inclusion of the
                        relevant component (or one that is hierarchical to it)
                        within the statement of security requirements. The
                        component used to satisfy the dependency should, if
                        necessary, be modified by operations to ensure that it
                        actually satisfies that dependency.

                        A justification that a dependency is not met should
                        address either:
                        <list type="enumerated">
                            <item>
                                why the dependency is not necessary or useful, in
                                which case no further information is required; or
                            </item>
                            <item>
                                that the dependency has been addressed by the
                                operational environment of the TOE, in which case
                                the justification should describe how the security
                                objectives for the operational environment address
                                this dependency.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.1.6c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that it is internally
                        consistent.

                        The evaluator determines that the combined set of all
                        SFRs and SARs is internally consistent.

                        The evaluator determines that on all occasions where
                        different security requirements apply to the same types
                        of developer evidence, events, operations, data, tests
                        to be performed etc. or to ``all objects'', ``all
                        subjects'' etc., that these requirements do not
                        conflict.
                        Some possible conflicts are:
                        <list type="enumerated">
                            <item>
                                an extended SAR specifying that the design of a
                                certain cryptographic algorithm is to be kept
                                secret, and another extended SAR specifying an open
                                source review;
                            </item>
                            <item><xref id="fau_gen.1" show="link"/> specifying
                                that subject identity is to be logged, <xref id="fdp_acc.1" show="link"/> specifying who has
                                access to these logs, and <xref id="fpr_uno.1" show="link"/> specifying that some actions of
                                subjects should be unobservable to other
                                subjects. If the subject that should not be able to
                                see an activity may access logs of this activity,
                                these SFRs conflict;
                            </item>
                            <item><xref id="fdp_rip.1" show="link"/> specifying
                                deletion of information no longer needed, and <xref id="fdp_rol.1" show="link"/> specifying that a TOE
                                may return to a previous state. If the information
                                that is needed for the rollback to the previous
                                state has been deleted, these requirements conflict;
                            </item>
                            <item>
                                Multiple iterations of <xref id="fdp_acc.1" show="link"/> especially where some iterations cover
                                the same subjects, objects, or operations. If one
                                access control SFR allows a subject to perform an
                                operation on an object, while another access control
                                SFR does not allow this, these requirements
                                conflict.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Derived security requirements" id="ase_req.2">
                <aco-hierarchical acomponent="ase_req.1"/>
                <aco-dependsoncomponent acomponent="ase_obj.2"/>
                <aco-dependsoncomponent acomponent="ase_ecd.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the SFRs and SARs are clear, unambiguous and well-defined,
                    whether they are internally consistent, and whether the
                    SFRs meet the security objectives of the TOE.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_req.2.1d">
                    The developer shall provide a statement of security requirements.
                </ae-developer>
                <ae-developer id="ase_req.2.2d">
                    The developer shall provide a security requirements
                    rationale.
                </ae-developer>
                <ae-content id="ase_req.2.1c" boldfrom="ase_req.1.1c">
                    The statement of security requirements shall describe the
                    SFRs and the SARs.
                </ae-content>
                <ae-content id="ase_req.2.2c"> All subjects, objects,
                    operations, security attributes, external entities and other
                    terms that are used in the SFRs and the SARs shall be
                    defined.
                </ae-content>
                <ae-content id="ase_req.2.3c">
                    The statement of security requirements shall identify all
                    operations on the security requirements.
                </ae-content>
                <ae-content id="ase_req.2.4c">
                    All operations shall be performed correctly.
                </ae-content>
                <ae-content id="ase_req.2.5c">
                    Each dependency of the security requirements shall either be
                    satisfied, or the security requirements rationale shall
                    justify the dependency not being satisfied.
                </ae-content>
                <ae-content id="ase_req.2.6c">
                    The security requirements rationale shall trace each SFR
                    back to the security objectives for the TOE.
                </ae-content>
                <ae-content id="ase_req.2.7c">
                    The security requirements rationale shall demonstrate that
                    the SFRs meet all security objectives for the TOE.
                </ae-content>
                <ae-content id="ase_req.2.8c">
                    The security requirements rationale shall explain why the
                    SARs were chosen.
                </ae-content>
                <ae-content id="ase_req.2.9c">
                    The statement of security requirements shall be internally
                    consistent.
                </ae-content>
                <ae-evaluator id="ase_req.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.1c"/>

                        The evaluator shall check that the statement of security
                        requirements describes the SFRs.

                        The evaluator determines that each SFRs is identified by
                        one of the following means:
                        <list type="enumerated">
                            <item>
                                by reference to an individual component in CC Part
                                2;
                            </item>
                            <item>
                                by reference to an extended component in the
                                extended components definition of the ST;
                            </item>
                            <item>
                                by reference to an individual component in a PP that
                                the ST claims to be conformant with;
                            </item>
                            <item>
                                by reference to an individual component in a
                                security requirements package that the ST claims to
                                be conformant with;
                            </item>
                            <item>
                                by reproduction in the ST.</item></list>

                        It is not required to use the same means of
                        identification for all SFRs.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.1c"/>

                        The evaluator shall check that the statement of security
                        requirements describes the SARs.

                        The evaluator determines that all SARs are identified by
                        one of the following means:
                        <list type="enumerated">
                            <item>
                                by reference to an individual component in CC Part
                                3;
                            </item>
                            <item>
                                by reference to an extended component in the
                                extended components definition of the ST;
                            </item>
                            <item>
                                by reference to an individual component in a PP that
                                the ST claims to be conformant with;
                            </item>
                            <item>
                                by reference to an individual component in a
                                security requirements package that the ST claims to
                                be conformant with;
                            </item>
                            <item>
                                by reproduction in the ST.</item></list>

                        It is not required to use the same means of
                        identification for all SARs.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.2c"/>

                        The evaluator shall examine the ST to determine that all
                        subjects, objects, operations, security attributes,
                        external entities and other terms that are used in the
                        SFRs and the SARs are defined.

                        The evaluator determines that the ST defines all:
                        <list type="itemized">
                            <item>(types of) subjects and objects that are used in
                                the SFRs;</item>
                            <item>(types of) security attributes of subjects, users,
                                objects, information, sessions and/or resources, possible
                                values that these attributes may take and any relations
                                between these values (e.g. top_secret is ``higher'' than secret);</item>
                            <item>(types of) operations that are used in the SFRs,
                                including the effects of these operations;</item>
                            <item>(types of) external entities in the SFRs;</item>
                            <item>other terms that are introduced in the SFRs
                                and/or SARs by completing operations, if these terms
                                are not immediately clear, or are used outside their
                                dictionary definition.</item></list>

                        The goal of this work unit is to ensure that the SFRs
                        and SARs are well-defined and that no misunderstanding
                        may occur due to the introduction of vague terms. This
                        work unit should not be taken into extremes, by forcing
                        the ST writer to define every single word. The general
                        audience of a set of security requirements should be
                        assumed to have a reasonable knowledge of IT, security
                        and Common Criteria.

                        All of the above may be presented in groups, classes,
                        roles, types or other groupings or characterisations
                        that allow easy understanding.

                        The evaluator is reminded that these lists and
                        definitions do not have to be part of the statement of
                        security requirements, but may be placed (in part or in
                        whole) in different subclauses. This may be especially
                        applicable if the same terms are used in the rest of the
                        ST.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.3c"/>

                        The evaluator shall check that the statement of security
                        requirements identifies all operations on the security
                        requirements.

                        The evaluator determines that all operations are
                        identified in each SFR or SAR where such an operation is
                        used. Identification may be achieved by typographical
                        distinctions, or by explicit identification in the
                        surrounding text, or by any other distinctive
                        means.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all assignment operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all iteration operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all selection operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.4c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that all refinement operations
                        are performed correctly.

                        Guidance on the correct performance of operations may be found
                        in CC Part 1 Annex <xref show="none" id="Security-Requirements-Annex"/>.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.5c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that each dependency of the
                        security requirements is either satisfied, or that the
                        security requirements rationale justifies the dependency
                        not being satisfied.

                        A dependency is satisfied by the inclusion of the
                        relevant component (or one that is hierarchical to it)
                        within the statement of security requirements. The
                        component used to satisfy the dependency should, if
                        necessary, be modified by operations to ensure that it
                        actually satisfies that dependency.

                        A justification that a dependency is not met should
                        address either:
                        <list type="enumerated">
                            <item>
                                why the dependency is not necessary or useful, in
                                which case no further information is required; or
                            </item>
                            <item>
                                that the dependency has been addressed by the
                                operational environment of the TOE, in which case
                                the justification should describe how the security
                                objectives for the operational environment address
                                this dependency.
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.6c"/>

                        The evaluator shall check that the security requirements
                        rationale traces each SFR back to the security
                        objectives for the TOE.

                        The evaluator determines that each SFR is traced back to
                        at least one security objective for the TOE.

                        Failure to trace implies that either the security
                        requirements rationale is incomplete, the security
                        objectives for the TOE are incomplete, or the SFR has no
                        useful purpose.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.7c"/>

                        The evaluator shall examine the security requirements
                        rationale to determine that for each security objective
                        for the TOE it demonstrates that the SFRs are suitable
                        to meet that security objective for the TOE.

                        If no SFRs trace back to the security objective for the TOE,
                        the evaluator action related to this work unit is assigned a fail verdict.

                        The evaluator determines that the justification for a
                        security objective for the TOE demonstrates that the
                        SFRs are sufficient: if all SFRs that trace back to the
                        objective are satisfied, the security objective for the
                        TOE is achieved.

                        The evaluator also determines that each SFR that traces
                        back to a security objective for the TOE is necessary:
                        when the SFR is satisfied, it actually contributes to
                        achieving the security objective.

                        Note that the tracings from SFRs to security objectives
                        for the TOE provided in the security requirements
                        rationale may be a part of the justification, but do not
                        constitute a justification by themselves.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.8c"/>

                        The evaluator shall check that the security requirements
                        rationale explains why the SARs were chosen.

                        The evaluator is reminded that any explanation is correct, as
                        long as it is coherent and neither the SARs nor the explanation
                        have obvious inconsistencies with the remainder of the ST.

                        An example of an obvious inconsistency between the SARs and the
                        remainder of the ST would be to have threat agents that are very
                        capable, but an <xref id="ava_van" show="id"/> SAR that does not
                        protect against these threat agents.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_req.2.9c"/>

                        The evaluator shall examine the statement of security
                        requirements to determine that it is internally
                        consistent.

                        The evaluator determines that the combined set of all
                        SFRs and SARs is internally consistent.

                        The evaluator determines that on all occasions where
                        different security requirements apply to the same types
                        of developer evidence, events, operations, data, tests
                        to be performed etc. or to ``all objects'', ``all
                        subjects'' etc., that these requirements do not
                        conflict.

                        Some possible conflicts are:
                        <list type="enumerated">
                            <item>
                                an extended SAR specifying that the design of a
                                certain cryptographic algorithm is to be kept
                                secret, and another extended assurance requirement
                                specifying an open source review;
                            </item>
                            <item><xref id="fau_gen.1" show="link"/> specifying
                                that subject identity is to be logged, <xref id="fdp_acc.1" show="link"/> specifying who has
                                access to these logs, and <xref id="fpr_uno.1" show="link"/> specifying that some actions of
                                subjects should be unobservable to other
                                subjects. If the subject that should not be able to
                                see an activity may access logs of this activity,
                                these SFRs conflict;
                            </item>
                            <item><xref id="fdp_rip.1" show="link"/> specifying
                                deletion of information no longer needed, and <xref id="fdp_rol.1" show="link"/> specifying that a TOE
                                may return to a previous state. If the information
                                that is needed for the rollback to the previous
                                state has been deleted, these requirements conflict;
                            </item>
                            <item>
                                Multiple iterations of <xref id="fdp_acc.1" show="link"/> especially where some iterations cover
                                the same subjects, objects, or operations. If one
                                access control SFR allows a subject to perform an
                                operation on an object, while another access control
                                SFR does not allow this, these requirements
                                conflict.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="TOE summary specification" id="ase_tss">
            <af-objectives>

                The TOE summary specification enables evaluators and
                potential consumers to gain a general understanding of how
                the TOE is implemented.

                Evaluation of the TOE summary specification is necessary to
                determine whether it is adequately described how the TOE:
                <list type="itemized">
                    <item>meets its SFRs;</item>
                    <item>protects itself against interference, logical
                        tampering and bypass.</item></list> and whether the TOE
                summary specification is consistent with other narrative
                descriptions of the TOE.
            </af-objectives>
            <af-overview>

                The TOE Summary specification allows evaluators and
                potential consumers of the TOE to gain a general
                understanding of how the TOE:
                <list type="itemized">
                    <item>meets its SFRs;</item>
                    <item>protects itself against interference, logical
                        tampering and bypass.</item></list>
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on whether the
                TOE summary specification only needs to describe how the TOE
                meets the SFRs, or whether the TOE summary specification
                also needs to describe how the TOE protects itself against
                logical tampering and bypass. This additional description
                may be used in special circumstances where there might be a
                specific concern regarding the TOE security architecture.
            </af-levelling-criteria>
            <a-component name="TOE summary specification" id="ase_tss.1">
                <aco-dependsoncomponent acomponent="ase_int.1"/>
                <aco-dependsoncomponent acomponent="ase_req.1"/><aco-dependsoncomponent acomponent="adv_fsp.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE summary specification addresses all SFRs, and
                    whether the TOE summary specification is consistent with
                    other narrative descriptions of the TOE.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_tss.1.1d">
                    The developer shall provide a TOE summary specification.
                </ae-developer>
                <ae-content id="ase_tss.1.1c">
                    The TOE summary specification shall describe how the TOE
                    meets each SFR.
                </ae-content>
                <ae-evaluator id="ase_tss.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_tss.1.1c"/>

                        The evaluator shall examine the TOE summary
                        specification to determine that it describes how the TOE
                        meets each SFR.

                        The evaluator determines that the TOE summary
                        specification provides, for each SFR from the statement
                        of security requirements, a description on how that SFR
                        is met.

                        The evaluator is reminded that the objective of each description is to provide
                        potential consumers of the TOE with a high-level view of how the developer intends
                        to satisfy each SFR and that the descriptions therefore should not be overly detailed.
                        Often several SFRs will be implemented in one context; for instance a password
                        authentication mechanism may implement <xref id="fia_uau.1" show="id"/>,
                        <xref id="fia_sos.1" show="id"/> and <xref id="fia_uid.1" show="id"/>.
                        Therefore usually the TSS will not consist of a long list with texts for each single
                        SFR, but complete groups of SFRs may be covered by one text passage.

                        For a composed TOE, the evaluator also determines that
                        it is clear which component provides each SFR or how the
                        components combine to meet each SFR.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ase_tss.1.2e">
                    The evaluator shall confirm that the TOE summary
                    specification is consistent with the TOE overview and the
                    TOE description.
                    <m-workunit>

                        The evaluator shall examine the TOE summary
                        specification to determine that it is consistent with
                        the TOE overview and the TOE description.

                        The TOE overview, TOE description, and TOE summary
                        specification describe the TOE in a narrative form at
                        increasing levels of detail. These descriptions
                        therefore need to be consistent.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="TOE summary specification with architectural               design summary" id="ase_tss.2">
                <aco-hierarchical acomponent="ase_tss.1"/>
                <aco-dependsoncomponent acomponent="ase_int.1"/>
                <aco-dependsoncomponent acomponent="ase_req.1"/><aco-dependsoncomponent acomponent="adv_arc.1"/>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE summary specification addresses all SFRs, whether
                    the TOE summary specification addresses interference,
                    logical tampering and bypass, and whether the TOE summary
                    specification is consistent with other narrative
                    descriptions of the TOE.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ase_tss.2.1d">
                    The developer shall provide a TOE summary specification.
                </ae-developer>
                <ae-content id="ase_tss.2.1c">
                    The TOE summary specification shall describe how the TOE
                    meets each SFR.
                </ae-content>
                <ae-content id="ase_tss.2.2c">
                    The TOE summary specification shall describe how the TOE
                    protects itself against interference and logical tampering.
                </ae-content>
                <ae-content id="ase_tss.2.3c">
                    The TOE summary specification shall describe how the TOE
                    protects itself against bypass.
                </ae-content>
                <ae-evaluator id="ase_tss.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit>
                        <ae-dc-element id="ase_tss.2.1c"/>

                        The evaluator shall examine the TOE summary
                        specification to determine that it describes how the TOE
                        meets each SFR.

                        The evaluator determines that the TOE summary
                        specification provides, for each SFR from the statement
                        of security requirements, a description on how that SFR
                        is met.

                        The evaluator is reminded that the objective of each description is to provide
                        potential consumers of the TOE with a high-level view of how the developer intends
                        to satisfy each SFR and that the descriptions therefore should not be overly detailed.
                        Often several SFRs will be implemented in one context; for instance a password
                        authentication mechanism may implement <xref id="fia_uau.1" show="id"/>,
                        <xref id="fia_sos.1" show="id"/> and <xref id="fia_uid.1" show="id"/>.
                        Therefore usually the TSS will not consist of a long list with texts for each single
                        SFR, but complete groups of SFRs may be covered by one text passage.

                        For a composed TOE, the evaluator also determines that
                        it is clear which component provides each SFR or how the
                        components combine to meet each SFR.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_tss.2.2c"/>

                        The evaluator shall examine the TOE summary
                        specification to determine that it describes how the TOE
                        protects itself against interference and logical
                        tampering.

                        The evaluator is reminded that the objective of each
                        description is to provide potential consumers of the TOE
                        with a high-level view of how the developer intends to
                        provide protection against interference and logical
                        tampering and that the descriptions therefore should not
                        be overly detailed.

                        For a composed TOE, the evaluator also determines that
                        it is clear which component provides the protection or
                        how the components combine to provide protection.
                    </m-workunit>
                    <m-workunit>
                        <ae-dc-element id="ase_tss.2.3c"/>

                        The evaluator shall examine the TOE summary
                        specification to determine that it describes how the TOE
                        protects itself against bypass.

                        The evaluator is reminded that the objective of each
                        description is to provide potential consumers of the TOE
                        with a high-level view of how the developer intends to
                        provide protection against bypass and that the
                        descriptions therefore should not be overly
                        detailed.

                        For a composed TOE, the evaluator also determines that
                        it is clear which component provides the protection or
                        how the components combine to provide protection.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ase_tss.2.2e">
                    The evaluator shall confirm that the TOE summary
                    specification is consistent with the TOE overview and the
                    TOE description.
                    <m-workunit>

                        The evaluator shall examine the TOE summary
                        specification to determine that it is consistent with
                        the TOE overview and the TOE description.

                        The TOE overview, TOE description, and TOE summary
                        specification describe the TOE in a narrative form at
                        increasing levels of detail. These descriptions
                        therefore need to be consistent.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
        </a-family>
    </a-class>
    <a-class id="ate" name="Tests">
        <ac-introduction>

            The class ``Tests'' encompasses four families: <xref id="ate_cov" show="link"/>, <xref id="ate_dpt" show="link"/>,
            <xref id="ate_ind" show="link"/> (i.e. functional testing
            performed by evaluators), and <xref id="ate_fun" show="link"/>.  Testing provides assurance that the TSF
            behaves as described (in the functional specification, TOE
            design, and implementation representation).

            The emphasis in this class is on confirmation that the TSF
            operates according to its design descriptions. This class does
            not address penetration testing, which is based upon an
            analysis of the TSF that specifically seeks to identify
            vulnerabilities in the design and implementation of the
            TSF. Penetration testing is addressed separately as an aspect
            of vulnerability assessment in the <xref id="ava" show="link"/> class.

            The <xref id="ate" show="link"/> class separates testing into
            developer testing and evaluator testing. The <xref id="ate_cov" show="link"/> and <xref id="ate_dpt" show="link"/> families address the completeness of developer
            testing. <xref id="ate_cov" show="link"/> addresses the rigour
            with which the functional specification is tested; <xref id="ate_dpt" show="link"/> addresses whether testing against
            other design descriptions (security architecture, TOE design,
            implementation representation) is required.

            <xref id="ate_fun" show="link"/> addresses the performing of
            the tests by the developer and how this testing should be
            documented. Finally, <xref id="ate_ind" show="link"/> then
            addresses evaluator testing: whether the evaluator should
            repeat part or all of the developer testing and how much
            independent testing the evaluator should do.
        </ac-introduction>
        <ac-overview>

            Assurance class <xref id="ate" show="link"/> states testing
            requirements that demonstrate that the TOE matches its design
            descriptions as provided in the <xref id="adv" show="link"/>
            class.
        </ac-overview>
        <ma-introduction>

            The goal of this activity is to determine whether the TOE
            behaves as described in the ST and as specified in the
            evaluation evidence (described in the <xref id="adv" show="id"/> class). This determination is achieved through
            some combination of the developer's own functional testing of
            the TSF (<xref id="ate_fun" show="link"/>) and independent
            testing the TSF by the evaluator (<xref id="ate_ind" show="link"/>). At the lowest level of assurance, there is no
            requirement for developer involvement, so the only testing is
            conducted by the evaluator, using the limited available
            information about the TOE. Additional assurance is gained as
            the developer becomes increasingly involved both in testing
            and in providing additional information about the TOE, and as
            the evaluator increases the independent testing
            activities.
        </ma-introduction>
        <ma-application-notes>

            Testing of the TSF is conducted by the evaluator and, in most
            cases, by the developer. The evaluator's testing efforts
            consist not only of creating and running original tests, but
            also of assessing the adequacy of the developer's tests and
            re-running a subset of them.

            The evaluator analyses the developer's tests to determine the
            extent to which they are sufficient to demonstrate that TSFI
            (see <xref id="adv_fsp" show="link"/>) perform as specified,
            and to understand the developer's approach to
            testing. Similarly, the evaluator analyses the developer's
            tests to determine the extent to which they are sufficient to
            demonstrate the internal behaviour and properties of the
            TSF.
            The evaluator also executes a subset of the developer's
            tests as documented to gain confidence in the developer's test
            results: the evaluator will use the results of this analysis
            as an input to independently testing a subset of the TSF. With
            respect to this subset, the evaluator takes a testing approach
            that is different from that of the developer, particularly if
            the developer's tests have shortcomings.

            To determine the adequacy of developer's test documentation or
            to create new tests, the evaluator needs to understand the
            desired expected behaviour of the TSF, both internally and as
            seen at the TSFI, in the context of the SFRs it is to
            satisfy. The evaluator may choose to divide the TSF and TSFI
            into subsets according to functional areas of the ST (audit
            subsystem, audit-related TSFI, authentication module,
            authentication-related TSFI, etc.) if they were not already
            divided in the ST, and focus on one subset of the TSF and TSFI
            at a time, examining the ST requirement and the relevant parts
            of the development and guidance documentation to gain an
            understanding of the way the TOE is expected to behave.  This
            reliance upon the development documentation underscores the need
            for the dependencies on <xref id="adv" show="id"/> by <xref id="ate_cov" show="link"/> and <xref id="ate_dpt" show="link"/>.

            The CC has separated coverage and depth from functional tests
            to increase the flexibility when applying the components of
            the families. However, the requirements of the families are
            intended to be applied together to confirm that the TSF
            operates according to its specification. This tight coupling
            of families has led to some duplication of evaluator work
            units across sub-activities. These application notes are used
            to minimise duplication of text between sub-activities.
            <subclause title="Understanding the expected behaviour of the TOE" id="ate_sc_man1">

                Before the adequacy of test documentation can be accurately
                evaluated, or before new tests can be created, the evaluator
                has to understand the desired expected behaviour of a
                security function in the context of the requirements it is
                to satisfy.

                As mentioned earlier, the evaluator may choose to subset the
                TSF and TSFI according to SFRs (audit, authentication, etc.)
                in the ST and focus on one subset at a time. The evaluator
                examines each ST requirement and the relevant parts of the
                functional specification and guidance documentation to gain
                an understanding of the way the related TSFI is expected to
                behave. Similarly, the evaluator examines the relevant parts
                of the TOE design and security architecture documentation to
                gain an understanding of the way the related modules or
                subsystems of the TSF are expected to behave.

                With an understanding of the expected behaviour, the
                evaluator examines the test plan to gain an understanding of
                the testing approach. In most cases, the testing approach
                will entail a TSFI being stimulated and its responses
                observed. Externally-visible functionality can be tested
                directly; however, in cases where functionality is not
                visible external to the TOE (for example, testing the
                residual information protection functionality), other means
                will need to be employed.
            </subclause>
            <subclause title="Testing vs. alternate approaches to verify the expected behaviour of functionality" id="ate_sc_man2">

                In cases where it is impractical or inadequate to test
                specific functionality (where it provides no
                externally-visible TSFI), the test plan should identify the
                alternate approach to verify expected behaviour. It is the
                evaluator's responsibility to determine the suitability of
                the alternate approach. However, the following should be
                considered when assessing the suitability of alternate
                approaches:
                <list type="enumerated">
                    <item>
                        an analysis of the implementation representation to
                        determine that the required behaviour should be
                        exhibited by the TOE is an acceptable alternate
                        approach. This could mean a code inspection for a
                        software TOE or perhaps a chip mask inspection for a
                        hardware TOE.
                    </item>
                    <item>
                        it is acceptable to use evidence of developer
                        integration or module testing, even if the claimed
                        assurance requirements do not include availability of
                        lower level descriptions of the TOE modules (e.g. <xref id="adv_tds.3" show="link"/>) or implementation (<xref id="adv_imp" show="link"/>). If evidence of developer
                        integration or module testing is used in verifying the
                        expected behaviour of a security functionality, care
                        should be given to confirm that the testing evidence
                        reflects the current implementation of the TOE. If the
                        subsystems or modules have been changed since testing
                        occurred, evidence that the changes were tracked and
                        addressed by analysis or further testing will usually be
                        required.
                    </item>
                </list>

                It should be emphasised that supplementing the testing
                effort with alternate approaches should only be undertaken
                when both the developer and evaluator determine that there
                exists no other practical means to test the expected
                behaviour.
            </subclause>
            <subclause title="Verifying the adequacy of tests" id="ate_sc_man3">

                Test pre-requisites are necessary to establish the required
                initial conditions for the test. They may be expressed in
                terms of parameters that must be set or in terms of test
                ordering in cases where the completion of one test
                establishes the necessary pre-requisites for another
                test. The evaluator must determine that the pre-requisites
                are complete and appropriate in that they will not bias the
                observed test results towards the expected test
                results.

                The test steps and expected results specify the actions and
                parameters to be applied to the TSFI as well as how the
                expected results should be verified and what they are. The
                evaluator must determine that the test steps and expected
                results are consistent with the descriptions of the TSFI in
                the functional specification. This means that each
                characteristic of the TSFI behaviour explicitly described in
                the functional specification should have tests and expected
                results to verify that behaviour.

                The overall aim of this testing activity is to determine
                that each subsystem, module, and TSFI has been sufficiently
                tested against the behavioural claims in the functional
                specification, TOE design, and architecture description.  At
                the higher assurance levels, testing also includes bounds
                testing and negative testing. The test procedures will
                provide insight as to how the TSFIs, modules, and subsystems
                have been exercised by the developer during testing. The
                evaluator uses this information when developing additional
                tests to independently test the TSF.
            </subclause>
        </ma-application-notes>
        <a-family name="Coverage" id="ate_cov">
            <af-objectives>

                This family establishes that the TSF has been tested against
                its functional specification. This is achieved through an
                examination of developer evidence of correspondence.
            </af-objectives>
            <af-overview>

                Coverage deals with the completeness of the functional tests
                performed by the developer on the TOE. It addresses the
                extent to which the TSF is tested.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                specification.
            </af-levelling-criteria>
            <af-application-notes>


            </af-application-notes>
            <a-component name="Evidence of coverage" id="ate_cov.1">
                <aco-dependsoncomponent acomponent="adv_fsp.2"/>
                <aco-dependsoncomponent acomponent="ate_fun.1"/>
                <aco-objectives>

                    The objective of this component is to establish that some
                    of the TSFIs have been tested.
                </aco-objectives>
                <aco-application-notes>

                    In this component the developer shows how tests in the
                    test documentation correspond to TSFIs in the functional
                    specification. This can be achieved by a statement of
                    correspondence, perhaps using a table.
                </aco-application-notes>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has tested the TSFIs, and that the
                    developer's test coverage evidence shows correspondence
                    between the tests identified in the test documentation and
                    the TSFIs described in the functional
                    specification.
                </msa-objectives>
                <msa-application-notes>

                    The coverage analysis provided by the developer is
                    required to show the correspondence between the tests
                    provided as evaluation evidence and the functional
                    specification. However, the coverage analysis need not
                    demonstrate that all TSFI have been tested, or that all
                    externally-visible interfaces to the TOE have been
                    tested. Such shortcomings are considered by the evaluator
                    during the independent testing (<xref id="ate_ind.2" show="link"/>) sub-activity.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the test documentation;
                        </item>
                        <item>
                            the test coverage evidence.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ate_cov.1.1d">
                    The developer shall provide evidence of the test coverage.
                </ae-developer>
                <ae-content id="ate_cov.1.1c">
                    The evidence of the test coverage shall show the
                    correspondence between the tests in the test documentation
                    and the TSFIs in the functional specification.
                </ae-content>
                <ae-evaluator id="ate_cov.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ate_cov.1-1">
                        <ae-dc-element id="ate_cov.1.1c"/>

                        The evaluator shall examine the test coverage evidence
                        to determine that the correspondence between the tests
                        identified in the test documentation and the TSFIs
                        described in the functional specification is
                        accurate.

                        Correspondence may take the form of a table or
                        matrix. The coverage evidence required for this
                        component will reveal the extent of coverage, rather
                        than to show complete coverage. In cases where coverage
                        is shown to be poor the evaluator should increase the
                        level of independent testing to compensate.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Analysis of coverage" id="ate_cov.2">
                <aco-hierarchical acomponent="ate_cov.1"/>
                <aco-dependsoncomponent acomponent="adv_fsp.2"/>
                <aco-dependsoncomponent acomponent="ate_fun.1"/>
                <aco-objectives>

                    The objective of this component is to confirm that all of
                    the TSFIs have been tested.
                </aco-objectives>
                <aco-application-notes>

                    In this component the developer confirms that tests in the
                    test documentation correspond to all of the TSFIs in the
                    functional specification. This can be achieved by a
                    statement of correspondence, perhaps using a table, but
                    the developer also provides an analysis of the test
                    coverage.
                </aco-application-notes>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has tested all of the TSFIs, and that the
                    developer's test coverage evidence shows correspondence
                    between the tests identified in the test documentation and
                    the TSFIs described in the functional
                    specification.
                </msa-objectives>
                <msa-input>

                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the test documentation;
                        </item>
                        <item>
                            the test coverage analysis.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ate_cov.2.1d">
                    The developer shall provide an analysis of the test
                    coverage.
                </ae-developer>
                <ae-content id="ate_cov.2.1c">
                    The analysis of the test coverage shall demonstrate the
                    correspondence between the tests in the test documentation
                    and the TSFIs in the functional specification.
                </ae-content>
                <ae-content id="ate_cov.2.2c">
                    The analysis of the test coverage shall demonstrate that all
                    TSFIs in the functional specification have been tested.
                </ae-content>
                <ae-evaluator id="ate_cov.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ate_cov.2-1">
                        <ae-dc-element id="ate_cov.2.1c"/>

                        The evaluator shall examine the test coverage analysis
                        to determine that the correspondence between the tests
                        in the test documentation and the interfaces in the
                        functional specification is accurate.

                        A simple cross-table may be sufficient to show test
                        correspondence. The identification of the tests and the
                        interfaces presented in the test coverage analysis has
                        to be unambiguous.

                        The evaluator is reminded that this does not imply that
                        all tests in the test documentation must map to
                        interfaces in the functional specification.
                    </m-workunit>
                    <m-workunit id="ate_cov.2-2">
                        <ae-dc-element id="ate_cov.2.1c"/>

                        The evaluator shall examine the test plan to determine
                        that the testing approach for each interface
                        demonstrates the expected behaviour of that
                        interface.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man1"/>
                            </item>
                            <item>
                                <xref show="title" id="ate_sc_man2"/>
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit id="ate_cov.2-3">
                        <ae-dc-element id="ate_cov.2.1c"/>

                        The evaluator shall examine the test procedures to
                        determine that the test prerequisites, test steps and
                        expected result(s) adequately test each
                        interface.

                        Guidance on this work units, as it pertains to the
                        functional specification, can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man3"/>
                            </item>
                        </list>
                    </m-workunit>
                    <m-workunit id="ate_cov.2-4">
                        <ae-dc-element id="ate_cov.2.2c"/>

                        The evaluator shall examine the test coverage analysis
                        to determine that the correspondence between the
                        interfaces in the functional specification and the tests
                        in the test documentation is complete.

                        All TSFIs that are described in the functional
                        specification have to be present in the test coverage
                        analysis and mapped to tests in order for completeness
                        to be claimed, although exhaustive specification testing
                        of interfaces is not required. Incomplete coverage would
                        be evident if an interface was identified in the
                        functional specification and no test was mapped to
                        it.

                        The evaluator is reminded that this does not imply that
                        all tests in the test documentation must map to
                        interfaces in the functional specification.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Rigorous analysis of coverage" id="ate_cov.3">
                <aco-hierarchical acomponent="ate_cov.2"/>
                <aco-dependsoncomponent acomponent="adv_fsp.2"/>
                <aco-dependsoncomponent acomponent="ate_fun.1"/>
                <aco-objectives>

                    In this component, the objective is to confirm that the
                    developer performed exhaustive tests of all interfaces in
                    the functional specification.

                    The objective of this component is to confirm that all
                    parameters of all of the TSFIs have been tested.
                </aco-objectives>
                <aco-application-notes>

                    In this component the developer is required to show how
                    tests in the test documentation correspond to all of the
                    TSFIs in the functional specification. This can be
                    achieved by a statement of correspondence, perhaps using a
                    table, but in addition the developer is required to
                    demonstrate that the tests exercise all of the parameters
                    of all TSFIs. This additional requirement includes bounds
                    testing (i.e. verifying that errors are generated when
                    stated limits are exceeded) and negative testing
                    (e.g. when access is given to User A, verifying not only
                    that User A now has access, but also that User B did not
                    suddenly gain access). This kind of testing is not,
                    strictly speaking, <italic>exhaustive</italic> because not
                    every possible value of the parameters is expected to be
                    checked.
                </aco-application-notes>
                <ae-developer id="ate_cov.3.1d">
                    The developer shall provide an analysis of the test
                    coverage.
                </ae-developer>
                <ae-content id="ate_cov.3.1c">
                    The analysis of the test coverage shall demonstrate the
                    correspondence between the tests in the test documentation
                    and the TSFIs in the functional specification.
                </ae-content>
                <ae-content id="ate_cov.3.2c">
                    The analysis of the test coverage shall demonstrate that all
                    TSFIs in the functional specification have been completely
                    tested.
                </ae-content>
                <ae-evaluator id="ate_cov.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Depth" id="ate_dpt">
            <af-objectives>

                The components in this family deal with the level of detail
                to which the TSF is tested by the developer. Testing of the
                TSF is based upon increasing depth of information derived
                from additional design representations and descriptions (TOE
                design, implementation representation, and security
                architecture description).

                The objective is to counter the risk of missing an error in
                the development of the TOE.  Testing that exercises specific
                internal interfaces can provide assurance not only that the
                TSF exhibits the desired external security behaviour, but
                also that this behaviour stems from correctly operating
                internal functionality.
            </af-objectives>
            <af-overview>

                Depth deals with the level of detail to which the developer
                tests the TSF. Testing is based upon increasing depth of
                information derived from analysis of the TSF
                representations.
            </af-overview>
            <af-levelling-criteria>

                The components in this family are levelled on the basis of
                increasing detail provided in the TSF representations, from
                the TOE design to the implementation representation.  This
                levelling reflects the TSF representations presented in the
                <xref show="id" id="adv"/> class.
            </af-levelling-criteria>
            <af-application-notes>

                The TOE design describes the internal components
                (e.g. subsystems) and, perhaps, modules of the TSF, together
                with a description of the interfaces among these components and
                modules. Evidence of testing of this TOE design must show that
                the internal interfaces have been exercised and seen to behave
                as described.  This may be achieved through testing via the
                external interfaces of the TSF, or by testing of the TOE
                subsystem or module interfaces in isolation, perhaps employing a
                test harness. In cases where some aspects of an internal
                interface cannot be tested via the external interfaces, there
                should either be justification that these aspects need not be
                tested, or the internal interface needs to be tested
                directly. In the latter case the TOE design needs to be
                sufficiently detailed in order to facilitate direct
                testing.

                In cases where the description of the TSF's architectural
                soundness (in <xref id="adv_arc" show="link"/>) cites
                specific mechanisms, the tests performed by the developer
                must show that the mechanisms have been exercised and seen
                to behave as described.

                At the highest component of this family, the testing is
                performed not only against the TOE design, but also against
                the implementation representation.
            </af-application-notes>
            <a-component name="Testing: basic design" id="ate_dpt.1">
                <aco-dependsoncomponent acomponent="adv_arc.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.2"/>
                <aco-dependsoncomponent acomponent="ate_fun.1"/>
                <aco-objectives>

                    The subsystem descriptions of the TSF provide a high-level
                    description of the internal workings of the TSF. Testing
                    at the level of the TOE subsystems provides assurance that
                    the TSF subsystems behave and interact as described in the
                    TOE design and the security architecture
                    description.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer has tested the TSF subsystems against the
                    TOE design and the security architecture
                    description.
                </msa-objectives>
                <msa-input>

                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design;
                        </item>
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the test documentation;
                        </item>
                        <item>
                            the depth of testing analysis.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ate_dpt.1.1d">
                    The developer shall provide the analysis of the depth of
                    testing.
                </ae-developer>
                <ae-content id="ate_dpt.1.1c">
                    The analysis of the depth of testing shall demonstrate the
                    correspondence between the tests in the test documentation
                    and the TSF subsystems in the TOE design.
                </ae-content>
                <ae-content id="ate_dpt.1.2c">
                    The analysis of the depth of testing shall demonstrate that
                    all TSF subsystems in the TOE design have been tested.
                </ae-content>
                <ae-evaluator id="ate_dpt.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ate_dpt.1-1">
                        <ae-dc-element id="ate_dpt.1.1c"/>

                        The evaluator shall examine the depth of testing
                        analysis to determine that the descriptions of the
                        behaviour of TSF subsystems and of their interactions is
                        included within the test documentation.

                        This work unit verifies the content of the
                        correspondence between the tests and the descriptions in
                        the TOE design. In cases where the description of the
                        TSF's architectural soundness (in <xref show="title" id="adv_arc"/>) cites specific mechanisms, this work
                        unit also verifies the correspondence between the tests
                        and the descriptions of the behaviour of such
                        mechanisms.

                        A simple cross-table may be sufficient to show test
                        correspondence. The identification of the tests and the
                        behaviour/interaction presented in the depth-of coverage
                        analysis has to be unambiguous.

                        When <xref id="ate_dpt.1" show="link"/> is combined with a component of <xref id="adv_tds" show="link"/>, which includes descriptions at the module level
                        (e.g. <xref id="adv_tds.3" show="link"/>), the level of detail needed to map
                        the test cases to the behaviour of the subsystems may require
                        information from the module description to be used. This is
                        because <xref id="adv_tds.3" show="link"/> allows the description of details
                        to be shifted from the subsystem level to the module level, or
                        even to omit the subsystems altogether.
                        In any case, the required level of detail in the provided
                        reference to the tested behaviour can be defined as ``the level
                        of detail required for the description of subsystem behaviour as
                        defined by <xref id="adv_tds.2" show="link"/> (in particular work unit <xref id="adv_tds.2-4" show="link"/>)''. It states that a detailed description of
                        the behaviour typically discusses how the functionality is
                        provided, in terms of what key data and data structures re
                        present; what control relationships exist within a subsytem and
                        how these elements work together to provide the SFR-enforcing
                        behaviour.
                        The evaluator is reminded that not all tests in the test
                        documentation must map to a subsystem behaviour or
                        interaction description.
                    </m-workunit>
                    <m-workunit id="ate_dpt.1-2">
                        <ae-dc-element id="ate_dpt.1.1c"/>

                        The evaluator shall examine the test plan, test
                        prerequisites, test steps and expected result(s) to
                        determine that the testing approach for the behaviour
                        description demonstrates the behaviour of that subsystem
                        as described in the TOE design.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man1"/>
                            </item>
                            <item>
                                <xref show="title" id="ate_sc_man2"/>
                            </item>
                        </list>

                        When <xref id="ate_dpt.1" show="link"/> is combined with a component of <xref id="adv_tds" show="link"/>, which includes descriptions at the module level
                        (e.g. <xref id="adv_tds.3" show="link"/>), the level of detail needed to map
                        the test cases to the behaviour of the subsystems may require
                        information from the module description to be used. This is
                        because <xref id="adv_tds.3" show="link"/> allows the description of details
                        to be shifted from the subsystem level to the module level, or
                        even to omit the subsystems altogether.
                        In any case, the required level of detail in the provided
                        reference to the tested behaviour can be defined as ``the level
                        of detail required for the description of subsystem behaviour as
                        defined by <xref id="adv_tds.2" show="link"/> (in particular work unit <xref id="adv_tds.2-4" show="link"/>)''. It states that a detailed description of
                        the behaviour typically discusses how the functionality is
                        provided, in terms of what key data and data structures re
                        present; what control relationships exist within a subsytem and
                        how these elements work together to provide the SFR-enforcing
                        behaviour.
                        If TSF subsystem interfaces are described, the behaviour
                        of those subsystems may be tested directly from those
                        interfaces. Otherwise, the behaviour of those subsystems
                        is tested from the TSFI interfaces. Or a combination of
                        the two may be employed.  Whatever strategy is used the
                        evaluator will consider its appropriateness for
                        adequately testing the behaviour that is described in
                        the TOE design.
                    </m-workunit>
                    <m-workunit id="ate_dpt.1-3">
                        <ae-dc-element id="ate_dpt.1.1c"/>

                        The evaluator shall examine the test plan, test
                        prerequisites, test steps and expected result(s) to
                        determine that the testing approach for the behaviour
                        description demonstrates the interactions among
                        subsystems as described in the TOE design.

                        While the previous work unit addresses behaviour of subsystems,
                        this work unit addresses the interactions among
                        subsystems.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man1"/>
                            </item>
                            <item>
                                <xref show="title" id="ate_sc_man2"/>
                            </item>
                        </list>

                        If TSF subsystem interfaces are described, the
                        interactions with other subsystems may be tested
                        directly from those interfaces. Otherwise, the
                        interactions among subsystems must be inferred from the
                        TSFI interfaces. Whatever strategy is used the evaluator
                        will consider its appropriateness for adequately testing
                        the interactions among subsystems that are described in
                        the TOE design.
                    </m-workunit>
                    <m-workunit id="ate_dpt.1-4">
                        <ae-dc-element id="ate_dpt.1.2c"/>

                        The evaluator shall examine the test procedures to
                        determine that all descriptions of TSF subsystem
                        behaviour and interaction are tested.

                        This work unit verifies the completeness of work unit
                        <xref show="title" id="ate_dpt.1-1"/>.  All descriptions
                        of TSF subsystem behaviour and of interactions among TSF
                        subsystems that are provided in the TOE design have to
                        be tested.  Incomplete depth of testing would be evident
                        if a description of TSF subsystem behaviour or of
                        interactions among TSF subsystems was identified in the
                        TOE design and no tests could be attributed to
                        it.

                        When <xref id="ate_dpt.1" show="link"/> is combined with a component of <xref id="adv_tds" show="link"/>, which includes descriptions at the module level
                        (e.g. <xref id="adv_tds.3" show="link"/>), the level of detail needed to map
                        the test cases to the behaviour of the subsystems may require
                        information from the module description to be used. This is
                        because <xref id="adv_tds.3" show="link"/> allows the description of details
                        to be shifted from the subsystem level to the module level, or
                        even to omit the subsystems altogether.
                        In any case, the required level of detail in the provided
                        reference to the tested behaviour can be defined as ``the level
                        of detail required for the description of subsystem behaviour as
                        defined by <xref id="adv_tds.2" show="link"/> (in particular work unit <xref id="adv_tds.2-4" show="link"/>)''. It states that a detailed description of
                        the behaviour typically discusses how the functionality is
                        provided, in terms of what key data and data structures re
                        present; what control relationships exist within a subsytem and
                        how these elements work together to provide the SFR-enforcing
                        behaviour.
                        The evaluator is reminded that this does not imply that all
                        tests in the test documentation must map to the subsystem behaviour
                        or interaction description in the TOE design.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Testing: security enforcing modules" id="ate_dpt.2">
                <aco-hierarchical acomponent="ate_dpt.1"/>
                <aco-dependsoncomponent acomponent="adv_arc.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="ate_fun.1"/>
                <aco-objectives>

                    The subsystem and module descriptions of the TSF provide a
                    high-level description of the internal workings, and a
                    description of the interfaces of the SFR-enforcing
                    modules, of the TSF. Testing at this level of TOE
                    description provides assurance that the TSF subsystems and
                    SFR-enforcing modules behave and interact as described in
                    the TOE design and the security architecture
                    description.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether the
                    developer has tested all the TSF subsystems and SFR-enforcing
                    modules against the TOE design and the security architecture
                    description.
                </msa-objectives>
                <msa-input>

                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design;
                        </item>
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the test documentation;
                        </item>
                        <item>
                            the depth of testing analysis.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ate_dpt.2.1d">
                    The developer shall provide the analysis of the depth of
                    testing.
                </ae-developer>
                <ae-content id="ate_dpt.2.1c">
                    The analysis of the depth of testing shall demonstrate the
                    correspondence between the tests in the test documentation and
                    the TSF subsystems and SFR-enforcing modules in the TOE design.
                </ae-content>
                <ae-content id="ate_dpt.2.2c">
                    The analysis of the depth of testing shall demonstrate that
                    all TSF subsystems in the TOE design have been tested.
                </ae-content>
                <ae-content id="ate_dpt.2.3c">
                    The analysis of the depth of testing shall demonstrate that
                    the SFR-enforcing modules in the TOE design have been
                    tested.
                </ae-content>
                <ae-evaluator id="ate_dpt.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ate_dpt.2-1">
                        <ae-dc-element id="ate_dpt.2.1c"/>

                        The evaluator shall examine the depth of testing
                        analysis to determine that descriptions of the behaviour
                        of TSF subsystems and of their interactions are included
                        within the test documentation.

                        This work unit verifies the content of the
                        correspondence between the tests and the descriptions in
                        the TOE design. In cases where the description of the
                        TSF's architectural soundness (in <xref show="title" id="adv_arc"/>) cites specific mechanisms, this work
                        unit also verifies the correspondence between the tests
                        and the descriptions of the behaviour of such
                        mechanisms.

                        A simple cross-table may be sufficient to show test
                        correspondence. The identification of the tests and the
                        behaviour/interaction presented in the depth-of coverage
                        analysis has to be unambiguous.

                        The evaluator is reminded that not all tests in the test
                        documentation must map to a subsystem behaviour or
                        interaction description.
                    </m-workunit>
                    <m-workunit id="ate_dpt.2-2">
                        <ae-dc-element id="ate_dpt.2.1c"/>

                        The evaluator shall examine the test plan, test
                        prerequisites, test steps and expected result(s) to
                        determine that the testing approach for the behaviour
                        description demonstrates the behaviour of that subsystem
                        as described in the TOE design.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man1"/>
                            </item>
                            <item>
                                <xref show="title" id="ate_sc_man2"/>
                            </item>
                        </list>

                        If TSF subsystem interfaces are described, the behaviour
                        of those subsystems may be tested directly from those
                        interfaces. Otherwise, the behaviour of those subsystems
                        is tested from the TSFI interfaces. Or a combination of
                        the two may be employed.  Whatever strategy is used the
                        evaluator will consider its appropriateness for
                        adequately testing the behaviour that is described in
                        the TOE design.
                    </m-workunit>
                    <m-workunit id="ate_dpt.2-3">
                        <ae-dc-element id="ate_dpt.2.1c"/>

                        The evaluator shall examine the test plan, test
                        prerequisites, test steps and expected result(s) to
                        determine that the testing approach for the behaviour
                        description demonstrates the interactions among
                        subsystems as described in the TOE design.

                        While the previous work unit addresses behaviour of subsystems,
                        this work unit addresses the interactions among
                        subsystems.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man1"/>
                            </item>
                            <item>
                                <xref show="title" id="ate_sc_man2"/>
                            </item>
                        </list>

                        If TSF subsystem interfaces are described, the
                        interactions with other subsystems may be tested
                        directly from those interfaces. Otherwise, the
                        interactions among subsystems must be inferred from the
                        TSFI interfaces. Whatever strategy is used the evaluator
                        will consider its appropriateness for adequately testing
                        the interactions among subsystems that are described in
                        the TOE design.
                    </m-workunit>
                    <m-workunit id="ate_dpt.2-4">
                        <ae-dc-element id="ate_dpt.2.1c"/>

                        The evaluator shall examine the depth of testing
                        analysis to determine that the interfaces of
                        SFR-enforcing modules are included within the test
                        documentation.

                        This work unit verifies the content of the
                        correspondence between the tests and the descriptions in
                        the TOE design. In cases where the description of the
                        TSF's architectural soundness (in <xref show="title" id="adv_arc"/>) cites specific mechanisms at the modular
                        level, this work unit also verifies the correspondence
                        between the tests and the descriptions of the behaviour
                        of such mechanisms.

                        A simple cross-table may be sufficient to show test
                        correspondence. The identification of the tests and the
                        SFR-enforcing modules presented in the depth-of coverage
                        analysis has to be unambiguous.

                        The evaluator is reminded that not all tests in the test
                        documentation must map to the interfaces of SFR-enforcing modules.
                    </m-workunit>
                    <m-workunit id="ate_dpt.2-5">
                        <ae-dc-element id="ate_dpt.2.1c"/>

                        The evaluator shall examine the test plan, test prerequisites,
                        test steps and expected result(s) to determine that the testing
                        approach for each SFR-enforcing module interface demonstrates
                        the expected behaviour of that interface.

                        While work unit <xref show="id" id="ate_dpt.2-2"/> addresses
                        expected behaviour of subsystems, this work unit addresses
                        expected behaviour of the SFR-enforcing module interfaces that
                        are covered by <xref show="id" id="ate_dpt.2-4"/>.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man1"/>
                            </item>
                            <item>
                                <xref show="title" id="ate_sc_man2"/>
                            </item>
                        </list>
                        Testing of an interface may be performed directly
                        at that interface, or at the external interfaces, or a
                        combination of both. Whatever strategy is used the
                        evaluator will consider its appropriateness for
                        adequately testing the interfaces. Specifically the
                        evaluator determines whether testing at the internal
                        interfaces is necessary or whether these internal
                        interfaces can be adequately tested (albeit implicitly)
                        by exercising the external interfaces. This
                        determination is left to the evaluator, as is its
                        justification.
                    </m-workunit>
                    <m-workunit id="ate_dpt.2-6">
                        <ae-dc-element id="ate_dpt.2.2c"/>

                        The evaluator shall examine the test procedures to
                        determine that all descriptions of TSF subsystem
                        behaviour and interaction are tested.

                        This work unit verifies the completeness of work unit
                        <xref show="title" id="ate_dpt.2-1"/>.  All descriptions
                        of TSF subsystem behaviour and of interactions among TSF
                        subsystems that are provided in the TOE design have to
                        be tested.  Incomplete depth of testing would be evident
                        if a description of TSF subsystem behaviour or of
                        interactions among TSF subsystems was identified in the
                        TOE design and no tests could be attributed to
                        it.

                        The evaluator is reminded that this does not imply that all
                        tests in the test documentation must map to the subsystem behaviour
                        or interaction description in the TOE design.
                    </m-workunit>
                    <m-workunit id="ate_dpt.2-7">
                        <ae-dc-element id="ate_dpt.2.3c"/>

                        The evaluator shall examine the test procedures to
                        determine that all interfaces of SFR-enforcing modules
                        are tested.

                        This work unit verifies the completeness of work unit
                        <xref show="title" id="ate_dpt.2-4"/>.  All interfaces
                        of SFR-enforcing modules that are provided in the TOE
                        design have to be tested.  Incomplete depth of testing
                        would be evident if any interface of any SFR-enforcing
                        modules was identified in the TOE design and no tests
                        could be attributed to it.
                        The evaluator is reminded that this does not imply
                        that all tests in the test documentation must map to an
                        interface of an SFR-enforcing module in the TOE
                        design.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Testing: modular design" id="ate_dpt.3">
                <aco-hierarchical acomponent="ate_dpt.2"/>
                <aco-dependsoncomponent acomponent="adv_arc.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.4"/>
                <aco-dependsoncomponent acomponent="ate_fun.1"/>
                <aco-objectives>

                    The subsystem and module descriptions of the TSF provide a
                    high-level description of the internal workings, and a
                    description of the interfaces of the modules, of the
                    TSF. Testing at this level of TOE description provides
                    assurance that the TSF subsystems and modules behave and
                    interact as described in the TOE design and the security
                    architecture description.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether the
                    developer has tested the all the TSF subsystems and modules
                    against the TOE design and the security architecture
                    description.
                </msa-objectives>
                <msa-input>

                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design;
                        </item>
                        <item>
                            the security architecture description;
                        </item>
                        <item>
                            the test documentation;
                        </item>
                        <item>
                            the depth of testing analysis.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ate_dpt.3.1d">
                    The developer shall provide the analysis of the depth of
                    testing.
                </ae-developer>
                <ae-content id="ate_dpt.3.1c">
                    The analysis of the depth of testing shall demonstrate the
                    correspondence between the tests in the test documentation
                    and the TSF subsystems and modules in the TOE design.
                </ae-content>
                <ae-content id="ate_dpt.3.2c">
                    The analysis of the depth of testing shall demonstrate that
                    all TSF subsystems in the TOE design have been tested.
                </ae-content>
                <ae-content id="ate_dpt.3.3c">
                    The analysis of the depth of testing shall demonstrate that all
                    TSF modules in the TOE design have been tested.
                </ae-content>
                <ae-evaluator id="ate_dpt.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ate_dpt.3-1">
                        <ae-dc-element id="ate_dpt.3.1c"/>

                        The evaluator shall examine the depth of testing
                        analysis to determine that descriptions of the behaviour
                        of TSF subsystems and of their interactions are included
                        within the test documentation.

                        This work unit verifies the content of the
                        correspondence between the tests and the descriptions in
                        the TOE design. A simple cross-table may be sufficient
                        to show test correspondence. The identification of the
                        tests and the behaviour/interaction presented in the
                        depth-of coverage analysis has to be unambiguous.

                        The evaluator is reminded that not all tests in the test
                        documentation must map to a subsystem behaviour or
                        interaction description.
                    </m-workunit>
                    <m-workunit id="ate_dpt.3-2">
                        <ae-dc-element id="ate_dpt.3.1c"/>

                        The evaluator shall examine the test plan, test
                        prerequisites, test steps and expected result(s) to
                        determine that the testing approach for the behaviour
                        description demonstrates the behaviour of that subsystem
                        as described in the TOE design.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man1"/>
                            </item>
                            <item>
                                <xref show="title" id="ate_sc_man2"/>
                            </item>
                        </list>

                        If TSF subsystem interfaces are provided, the behaviour
                        of those subsystems may be performed directly from those
                        interfaces. Otherwise, the behaviour of those subsystems
                        is tested from the TSFI interfaces. Or a combination of
                        the two may be employed.  Whatever strategy is used the
                        evaluator will consider its appropriateness for
                        adequately testing the behaviour that is described in
                        the TOE design.
                    </m-workunit>
                    <m-workunit id="ate_dpt.3-3">
                        <ae-dc-element id="ate_dpt.3.1c"/>

                        The evaluator shall examine the test plan, test
                        prerequisites, test steps and expected result(s) to
                        determine that the testing approach for the behaviour
                        description demonstrates the interactions among
                        subsystems as described in the TOE design.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man1"/>
                            </item>
                            <item>
                                <xref show="title" id="ate_sc_man2"/>
                            </item>
                        </list>
                        While the previous work unit addresses behaviour of subsystems,
                        this work unit addresses the interactions among
                        subsystems.

                        If TSF subsystem interfaces are provided, the
                        interactions with other subsystems may be performed
                        directly from those interfaces. Otherwise, the
                        interactions among subsystems must be inferred from the
                        TSFI interfaces. Whatever strategy is used the evaluator
                        will consider its appropriateness for adequately testing
                        the interactions among subsystems that are described in
                        the TOE design.
                    </m-workunit>
                    <m-workunit id="ate_dpt.3-4">
                        <ae-dc-element id="ate_dpt.3.1c"/>

                        The evaluator shall examine the depth of testing
                        analysis to determine that the interfaces of TSF modules
                        are included within the test documentation.

                        This work unit verifies the content of the
                        correspondence between the tests and the descriptions in
                        the TOE design. A simple cross-table may be sufficient
                        to show test correspondence. The identification of the
                        tests and the behaviour/interaction presented in the
                        depth-of coverage analysis has to be unambiguous.

                        The evaluator is reminded that not all tests in the test
                        documentation must map to a subsystem behaviour or
                        interaction description.
                    </m-workunit>
                    <m-workunit id="ate_dpt.3-5">
                        <ae-dc-element id="ate_dpt.3.1c"/>

                        The evaluator shall examine the test plan, test
                        prerequisites, test steps and expected result(s) to
                        determine that the testing approach for each TSF module
                        interface demonstrates the expected behaviour of that
                        interface.

                        Guidance on this work unit can be found in:
                        <list type="enumerated">
                            <item>
                                <xref show="title" id="ate_sc_man1"/>
                            </item>
                            <item>
                                <xref show="title" id="ate_sc_man2"/>
                            </item>
                        </list>
                        Testing of an interface may be performed directly
                        at that interface, or at the external interfaces, or a
                        combination of both. Whatever strategy is used the
                        evaluator will consider its appropriateness for
                        adequately testing the interfaces. Specifically the
                        evaluator determines whether testing at the internal
                        interfaces is necessary or whether these internal
                        interfaces can be adequately tested (albeit implicitly)
                        by exercising the external interfaces. This
                        determination is left to the evaluator, as is its
                        justification.
                    </m-workunit>
                    <m-workunit id="ate_dpt.3-6">
                        <ae-dc-element id="ate_dpt.3.2c"/>

                        The evaluator shall examine the test procedures to
                        determine that all descriptions of TSF subsystem
                        behaviour and interaction are tested.

                        This work unit verifies the completeness of work unit
                        <xref show="title" id="ate_dpt.3-1"/>.  All descriptions
                        of TSF subsystem behaviour and of interactions among TSF
                        subsystems that are provided in the TOE design have to
                        be tested.  Incomplete depth of testing would be evident
                        if a description of TSF subsystem behaviour or of
                        interactions among TSF subsystems was identified in the
                        TOE design and no tests could be attributed to
                        it.

                        The evaluator is reminded that this does not imply that all
                        tests in the test documentation must map to the subsystem behaviour
                        or interaction description in the TOE design.
                    </m-workunit>
                    <m-workunit id="ate_dpt.3-7">
                        <ae-dc-element id="ate_dpt.3.3c"/>

                        The evaluator shall examine the test procedures to determine
                        that all interfaces of all TSF modules are tested.

                        This work unit verifies the completeness of work unit
                        <xref show="title" id="ate_dpt.3-4"/>.  All interfaces
                        of TSF modules that are provided in the TOE design have
                        to be tested.  Incomplete depth of testing would be
                        evident if any interface of any TSF module was
                        identified in the TOE design and no tests could be
                        attributed to it.
                        The evaluator is reminded that this does not imply
                        that all tests in the test documentation must map to an
                        interface of a TSF module in the TOE design.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Testing: implementation representation" id="ate_dpt.4">
                <aco-hierarchical acomponent="ate_dpt.3"/>
                <aco-dependsoncomponent acomponent="adv_arc.1"/>
                <aco-dependsoncomponent acomponent="adv_tds.4"/>
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <aco-dependsoncomponent acomponent="ate_fun.1"/>
                <aco-objectives>

                    The subsystem and module descriptions of the TSF provide a
                    high-level description of the internal workings, and a
                    description of the interfaces of the modules, of the
                    TSF. Testing at this level of TOE description provides
                    assurance that the TSF subsystems and modules behave and
                    interact as described in the TOE design and the security
                    architecture description, and in accordance with the
                    implementation representation.
                </aco-objectives>
                <ae-developer id="ate_dpt.4.1d">
                    The developer shall provide the analysis of the depth of
                    testing.
                </ae-developer>
                <ae-content id="ate_dpt.4.1c">
                    The analysis of the depth of testing shall demonstrate the
                    correspondence between the tests in the test documentation
                    and the TSF subsystems and modules in the TOE design.
                </ae-content>
                <ae-content id="ate_dpt.4.2c">
                    The analysis of the depth of testing shall demonstrate that
                    all TSF subsystems in the TOE design have been tested.
                </ae-content>
                <ae-content id="ate_dpt.4.3c">
                    The analysis of the depth of testing shall demonstrate that
                    all modules in the TOE design have been tested.
                </ae-content>
                <ae-content id="ate_dpt.4.4c">
                    The analysis of the depth of testing shall demonstrate that
                    the TSF operates in accordance with its implementation
                    representation.
                </ae-content>
                <ae-evaluator id="ate_dpt.4.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Functional tests" id="ate_fun">
            <af-objectives>

                Functional testing performed by the developer provides
                assurance that the tests in the test documentation are
                performed and documented correctly. The correspondence of
                these tests to the design descriptions of the TSF is
                achieved through the <xref id="ate_cov" show="link"/> and
                <xref id="ate_dpt" show="link"/> families.

                This family contributes to providing assurance that the
                likelihood of undiscovered flaws is relatively small.

                The families <xref id="ate_cov" show="link"/>, <xref id="ate_dpt" show="link"/> and <xref id="ate_fun" show="link"/> are used in combination to define the evidence
                of testing to be supplied by a developer. Independent
                functional testing by the evaluator is specified by <xref id="ate_ind" show="link"/>.
            </af-objectives>
            <af-overview>

                Functional testing establishes that the tests performed by
                the developer are performed and documented correctly.
            </af-overview>
            <af-levelling-criteria>

                This family contains two components, the higher requiring
                that ordering dependencies are analysed.
            </af-levelling-criteria>
            <af-application-notes>

                Procedures for performing tests are expected to provide
                instructions for using test programs and test suites,
                including the test environment, test conditions, test data
                parameters and values. The test procedures should also show
                how the test results are derived from the test
                inputs.

                Ordering dependencies are relevant when the successful
                execution of a particular test depends upon the existence of
                a particular state. For example, this might require that
                test A be executed immediately before test B, since the
                state resulting from the successful execution of test A is a
                prerequisite for the successful execution of test B. Thus,
                failure of test B could be related to a problem with the
                ordering dependencies. In the above example, test B could
                fail because test C (rather than test A) was executed
                immediately before it, or the failure of test B could be
                related to a failure of test A.
            </af-application-notes>
            <a-component name="Functional testing" id="ate_fun.1">
                <aco-dependsoncomponent acomponent="ate_cov.1"/>
                <aco-objectives>

                    The objective is for the developer to demonstrate that the
                    tests in the test documentation are performed and
                    documented correctly.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the developer correctly performed and documented the tests
                    in the test documentation.
                </msa-objectives>
                <msa-application-notes>

                    The extent to which the test documentation is required to
                    cover the TSF is dependent upon the coverage assurance
                    component.

                    For the developer tests provided, the evaluator determines
                    whether the tests are repeatable, and the extent to which
                    the developer's tests can be used for the evaluator's
                    independent testing effort. Any TSFI for which the
                    developer's test results indicate that it might not
                    perform as specified should be tested independently by the
                    evaluator to determine whether or not it does.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the test documentation.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ate_fun.1.1d">
                    The developer shall test the TSF and document the results.
                </ae-developer>
                <ae-developer id="ate_fun.1.2d">
                    The developer shall provide test documentation.
                </ae-developer>
                <ae-content id="ate_fun.1.1c">
                    The test documentation shall consist of test plans, expected
                    test results and actual test results.
                </ae-content>
                <ae-content id="ate_fun.1.2c">
                    The test plans shall identify the tests to be performed and
                    describe the scenarios for performing each test. These
                    scenarios shall include any ordering dependencies on the
                    results of other tests.
                </ae-content>
                <ae-content id="ate_fun.1.3c">
                    The expected test results shall show the anticipated outputs
                    from a successful execution of the tests.
                </ae-content>
                <ae-content id="ate_fun.1.4c">
                    The actual test results shall be consistent with the
                    expected test results.
                </ae-content>
                <ae-evaluator id="ate_fun.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ate_fun.1-1">
                        <ae-dc-element id="ate_fun.1.1c"/>

                        The evaluator shall check that the test documentation
                        includes test plans, expected test results and actual
                        test results.

                        The evaluator checks that test plans, expected tests
                        results and actual test results are included in the test
                        documentation.
                    </m-workunit>
                    <m-workunit id="ate_fun.1-2">
                        <ae-dc-element id="ate_fun.1.2c"/>

                        The evaluator shall examine the test plan to determine
                        that it describes the scenarios for performing each
                        test.

                        The evaluator determines that the test plan provides
                        information about the test configuration being used:
                        both on the configuration of the TOE and on any test
                        equipment being used. This information should be
                        detailed enough to ensure that the test configuration is
                        reproducible.

                        The evaluator also determines that the test plan
                        provides information about how to execute the test: any
                        necessary automated set-up procedures (and whether they
                        require privilege to run), inputs to be applied, how
                        these inputs are applied, how output is obtained, any
                        automated clean-up procedures (and whether they require
                        privilege to run), etc.  This information should be
                        detailed enough to ensure that the test is
                        reproducible.

                        The evaluator may wish to employ a sampling strategy
                        when performing this work unit.
                    </m-workunit>
                    <m-workunit id="ate_fun.1-3">
                        <ae-dc-element id="ate_fun.1.2c"/>

                        The evaluator shall examine the test plan to determine
                        that the TOE test configuration is consistent with the
                        ST.

                        The TOE referred to in the developer's test plan should
                        have the same unique reference as established by the
                        <xref id="alc_cmc" show="link"/> sub-activities and
                        identified in the ST introduction.

                        It is possible for the ST to specify more than one
                        configuration for evaluation. The evaluator verifies
                        that all test configurations identified in the developer
                        test documentation are consistent with the ST. For
                        example, the ST might define configuration options that
                        must be set, which could have an impact upon what
                        constitutes the TOE by including or excluding additional
                        portions. The evaluator verifies that all such
                        variations of the TOE are considered.

                        The evaluator should consider the security objectives
                        for the operational environment described in the ST that
                        may apply to the test environment. There may be some
                        objectives for the operational environment that do not
                        apply to the test environment. For example, an objective
                        about user clearances may not apply; however, an
                        objective about a single point of connection to a
                        network would apply.

                        The evaluator may wish to employ a sampling strategy
                        when performing this work unit.

                        If this work unit is applied to a component TOE that
                        might be used/integrated in a composed TOE (see <xref id="aco" show="link"/>), the following will apply.  In
                        the instances that the component TOE under evaluation
                        depends on other components in the operational
                        environment to support their operation, the developer
                        may wish to consider using the other component(s) that
                        will be used in the composed TOE to fulfil the
                        requirements of the operational environment as one of
                        the test configurations.  This will reduce the amount an
                        additional testing that will be required for the
                        composed TOE evaluation.
                    </m-workunit>
                    <m-workunit id="ate_fun.1-4">
                        <ae-dc-element id="ate_fun.1.2c"/>

                        The evaluator shall examine the test plans to determine
                        that sufficient instructions are provided for any
                        ordering dependencies.

                        Some steps may have to be performed to establish initial
                        conditions. For example, user accounts need to be added
                        before they can be deleted. An example of ordering
                        dependencies on the results of other tests is the need
                        to perform actions in a test that will result in the
                        generation of audit records, before performing a test to
                        consider the searching and sorting of those audit
                        records.  Another example of an ordering dependency
                        would be where one test case generates a file of data to
                        be used as input for another test case.

                        The evaluator may wish to employ a sampling strategy
                        when performing this work unit.
                    </m-workunit>
                    <m-workunit id="ate_fun.1-5">
                        <ae-dc-element id="ate_fun.1.3c"/>

                        The evaluator shall examine the test documentation to
                        determine that all expected tests results are
                        included.

                        The expected test results are needed to determine
                        whether or not a test has been successfully
                        performed. Expected test results are sufficient if they
                        are unambiguous and consistent with expected behaviour
                        given the testing approach.

                        The evaluator may wish to employ a sampling strategy
                        when performing this work unit.
                    </m-workunit>
                    <m-workunit id="ate_fun.1-6">
                        <ae-dc-element id="ate_fun.1.4c"/>

                        The evaluator shall check that the actual test results
                        in the test documentation are consistent with the
                        expected test results in the test documentation.

                        A comparison of the actual and expected test results
                        provided by the developer will reveal any
                        inconsistencies between the results. It may be that a
                        direct comparison of actual results cannot be made until
                        some data reduction or synthesis has been first
                        performed. In such cases, the developer's test
                        documentation should describe the process to reduce or
                        synthesise the actual data.

                        For example, the developer may need to test the contents
                        of a message buffer after a network connection has
                        occurred to determine the contents of the buffer. The
                        message buffer will contain a binary number. This binary
                        number would have to be converted to another form of
                        data representation in order to make the test more
                        meaningful. The conversion of this binary representation
                        of data into a higher-level representation will have to
                        be described by the developer in enough detail to allow
                        an evaluator to perform the conversion process
                        (i.e. synchronous or asynchronous transmission, number
                        of stop bits, parity, etc.).

                        It should be noted that the description of the process
                        used to reduce or synthesise the actual data is used by
                        the evaluator not to actually perform the necessary
                        modification but to assess whether this process is
                        correct. It is up to the developer to transform the
                        expected test results into a format that allows an easy
                        comparison with the actual test results.

                        The evaluator may wish to employ a sampling strategy
                        when performing this work unit.
                    </m-workunit>
                    <m-workunit id="ate_fun.1-7">
                        <ae-dc-element id="ate_fun.1.4c"/>

                        The evaluator shall report the developer testing effort,
                        outlining the testing approach, configuration, depth and
                        results.

                        The developer testing information recorded in the ETR allows the
                        evaluator to convey the overall testing approach and effort
                        expended on the testing of the TOE by the developer. The intent
                        of providing this information is to give a meaningful overview
                        of the developer testing effort. It is not intended that the
                        information regarding developer testing in the ETR be an exact
                        reproduction of specific test steps or results of individual
                        tests. The intention is to provide enough detail to allow other
                        evaluators and evaluation authorities to gain some insight about the
                        developer's testing approach, amount of testing performed, TOE
                        test configurations, and the overall results of the developer
                        testing.

                        Information that would typically be found in the ETR
                        subclause regarding the developer testing effort is:
                        <list type="enumerated">
                            <item>
                                TOE test configurations. The particular
                                configurations of the TOE that were tested,
                                including whether any privileged code was required
                                to set up the test or clean up afterwards;
                            </item>
                            <item>
                                testing approach. An account of the overall
                                developer testing strategy employed;
                            </item>
                            <item>
                                testing results. A description of the overall
                                developer testing results.
                            </item>
                        </list>

                        This list is by no means exhaustive and is only intended
                        to provide some context as to the type of information
                        that should be present in the ETR concerning the
                        developer testing effort.
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Ordered functional testing" id="ate_fun.2">
                <aco-hierarchical acomponent="ate_fun.1"/>
                <aco-dependsoncomponent acomponent="ate_cov.1"/>
                <aco-objectives>

                    The objectives are for the developer to demonstrate that
                    the tests in the test documentation are performed and
                    documented correctly, and to ensure that testing is
                    structured such as to avoid circular arguments about the
                    correctness of the interfaces being tested.
                </aco-objectives>
                <aco-application-notes>

                    Although the test procedures may state pre-requisite
                    initial test conditions in terms of ordering of tests,
                    they may not provide a rationale for the ordering. An
                    analysis of test ordering is an important factor in
                    determining the adequacy of testing, as there is a
                    possibility of faults being concealed by the ordering of
                    tests.
                </aco-application-notes>
                <ae-developer id="ate_fun.2.1d">
                    The developer shall test the TSF and document the results.
                </ae-developer>
                <ae-developer id="ate_fun.2.2d">
                    The developer shall provide test documentation.
                </ae-developer>
                <ae-content id="ate_fun.2.1c">
                    The test documentation shall consist of test plans, expected
                    test results and actual test results.
                </ae-content>
                <ae-content id="ate_fun.2.2c">
                    The test plans shall identify the tests to be performed and
                    describe the scenarios for performing each test. These
                    scenarios shall include any ordering dependencies on the
                    results of other tests.
                </ae-content>
                <ae-content id="ate_fun.2.3c">
                    The expected test results shall show the anticipated outputs
                    from a successful execution of the tests.
                </ae-content>
                <ae-content id="ate_fun.2.4c">
                    The actual test results shall be consistent with the
                    expected test results.
                </ae-content>
                <ae-content id="ate_fun.2.5c">
                    The test documentation shall include an analysis of the test
                    procedure ordering dependencies.
                </ae-content>
                <ae-evaluator id="ate_fun.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                </ae-evaluator>
            </a-component>
        </a-family>
        <a-family name="Independent testing" id="ate_ind">
            <af-objectives>

                The objectives of this family are built upon the assurances
                achieved in the <xref id="ate_fun" show="id"/>, <xref id="ate_cov" show="id"/>, and <xref id="ate_dpt" show="id"/>
                families by verifying the developer testing and performing
                additional tests by the evaluator.
            </af-objectives>
            <af-overview>

                Independent testing specifies the degree to which the
                testing of the TSF must be performed by a party other than
                the developer (e.g. a third party). This family adds value
                by the introduction of tests that are not part of the
                developer's tests.
            </af-overview>
            <af-levelling-criteria>

                Levelling is based upon the amount of developer test
                documentation and test support and the amount of evaluator
                testing.
            </af-levelling-criteria>
            <af-application-notes>

                This family deals with the degree to which there is
                independent functional testing of the TSF. Independent
                functional testing may take the form of repeating the
                developer's functional tests (in whole or in part) or of
                extending the scope or the depth of the developer's
                tests. These activities are complementary, and an
                appropriate mix must be planned for each TOE, which takes
                into account the availability and coverage of test results,
                and the functional complexity of the TSF.

                Sampling of developer tests is intended to provide
                confirmation that the developer has carried out his planned
                test programme on the TSF, and has correctly recorded the
                results. The size of sample selected will be influenced by
                the detail and quality of the developer's functional test
                results. The evaluator will also need to consider the scope
                for devising additional tests, and the relative benefit that
                may be gained from effort in these two areas. It is
                recognised that repetition of all developer tests may be
                feasible and desirable in some cases, but may be very
                arduous and less productive in others. The highest component
                in this family should therefore be used with
                caution. Sampling will address the whole range of test
                results available, including those supplied to meet the
                requirements of both <xref id="ate_cov" show="link"/> and
                <xref id="ate_dpt" show="link"/>.

                There is also a need to consider the different
                configurations of the TOE that are included within the
                evaluation. The evaluator will need to assess the
                applicability of the results provided, and to plan his own
                testing accordingly.

                The suitability of the TOE for testing is based on the
                access to the TOE, and the supporting documentation and
                information required (including any test software or tools)
                to run tests. The need for such support is addressed by the
                dependencies to other assurance families.

                Additionally, suitability of the TOE for testing may be
                based on other considerations. For example, the version of
                the TOE submitted by the developer may not be the final
                version.

                The term <italic>interfaces</italic> refers to interfaces
                described in the functional specification and TOE design,
                and parameters passed through invocations identified in the
                implementation representation. The exact set of interfaces
                to be used is selected through <xref id="ate_cov" show="link"/> and the <xref id="ate_dpt" show="link"/>
                components.

                References to a subset of the interfaces are intended to
                allow the evaluator to design an appropriate set of tests
                which is consistent with the objectives of the evaluation
                being conducted.
            </af-application-notes>
            <a-component name="Independent testing - conformance" id="ate_ind.1">
                <aco-dependsoncomponent acomponent="adv_fsp.1"/>
                <aco-dependsoncomponent acomponent="agd_ope.1"/>
                <aco-dependsoncomponent acomponent="agd_pre.1"/>
                <aco-objectives>

                    In this component, the objective is to demonstrate that
                    the TOE operates in accordance with its design
                    representations and guidance documents.
                </aco-objectives>
                <aco-application-notes>

                    This component does not address the use of developer test
                    results. It is applicable where such results are not
                    available, and also in cases where the developer's testing
                    is accepted without validation. The evaluator is required
                    to devise and conduct tests with the objective of
                    confirming that the TOE operates in accordance with its
                    design representations, including but not limited to the
                    functional specification. The approach is to gain
                    confidence in correct operation through representative
                    testing, rather than to conduct every possible test. The
                    extent of testing to be planned for this purpose is a
                    methodology issue, and needs to be considered in the
                    context of a particular TOE and the balance of other
                    evaluation activities.
                </aco-application-notes>
                <msa-objectives>

                    The goal of this activity is to determine, by
                    independently testing a subset of the TSFI, whether the
                    TOE behaves as specified in the functional specification
                    and guidance documentation.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                        <item>
                            the preparative user guidance;
                        </item>
                        <item>
                            the TOE suitable for testing.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ate_ind.1.1d">
                    The developer shall provide the TOE for testing.
                </ae-developer>
                <ae-content id="ate_ind.1.1c">
                    The TOE shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="ate_ind.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ate_ind.1-1">
                        <ae-dc-element id="ate_ind.1.1c"/>

                        The evaluator shall examine the TOE to determine that
                        the test configuration is consistent with the
                        configuration under evaluation as specified in the
                        ST.

                        The TOE provided by the developer should have the same
                        unique reference as established by the <xref id="alc_cmc" show="link"/> sub-activities and identified
                        in the ST introduction.

                        It is possible for the ST to specify more than one
                        configuration for evaluation. The TOE may comprise a
                        number of distinct hardware and software entities that
                        need to be tested in accordance with the ST. The
                        evaluator verifies that all test configurations are
                        consistent with the ST.

                        The evaluator should consider the security objectives
                        for the operational environment described in the ST that
                        may apply to the test environment and ensure they are
                        met in the testing environment. There may be some
                        objectives for the operational environment that do not
                        apply to the test environment. For example, an objective
                        about user clearances may not apply; however, an
                        objective about a single point of connection to a
                        network would apply.

                        If any test resources are used (e.g. meters, analysers)
                        it will be the evaluator's responsibility to ensure that
                        these resources are calibrated correctly.
                    </m-workunit>
                    <m-workunit id="ate_ind.1-2">
                        <ae-dc-element id="ate_ind.1.1c"/>

                        The evaluator shall examine the TOE to determine that it
                        has been installed properly and is in a known
                        state.

                        It is possible for the evaluator to determine the state
                        of the TOE in a number of ways. For example, previous
                        successful completion of the <xref id="agd_pre.1" show="link"/> sub-activity will satisfy this work unit
                        if the evaluator still has confidence that the TOE being
                        used for testing was installed properly and is in a
                        known state. If this is not the case, then the evaluator
                        should follow the developer's procedures to install and
                        start up the TOE, using the supplied guidance
                        only.

                        If the evaluator has to perform the installation
                        procedures because the TOE is in an unknown state, this
                        work unit when successfully completed could satisfy work
                        unit <xref id="agd_pre.1-3" show="link"/>.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ate_ind.1.2e">
                    The evaluator shall test a subset of the TSF to confirm that
                    the TSF operates as specified.
                    <m-workunit id="ate_ind.1-3">

                        The evaluator shall devise a test subset.

                        The evaluator selects a test subset and testing strategy
                        that is appropriate for the TOE. One extreme testing
                        strategy would be to have the test subset contain as
                        many interfaces as possible tested with little
                        rigour. Another testing strategy would be to have the
                        test subset contain a few interfaces based on their
                        perceived relevance and rigorously test these
                        interfaces.

                        Typically the testing approach taken by the evaluator
                        should fall somewhere between these two extremes. The
                        evaluator should exercise most of the interfaces using
                        at least one test, but testing need not demonstrate
                        exhaustive specification testing.

                        The evaluator, when selecting the subset of the
                        interfaces to be tested, should consider the following
                        factors:
                        <list type="enumerated">
                            <item>
                                The number of interfaces from which to draw upon for
                                the test subset. Where the TSF includes only a small
                                number of relatively simple interfaces, it may be
                                practical to rigorously test all of the
                                interfaces. In other cases this may not be
                                cost-effective, and sampling is required.
                            </item>
                            <item>
                                Maintaining a balance of evaluation activities. The
                                evaluator effort expended on the test activity
                                should be commensurate with that expended on any
                                other evaluation activity.
                            </item>
                        </list>

                        The evaluator selects the interfaces to compose the
                        subset. This selection will depend on a number of
                        factors, and consideration of these factors may also
                        influence the choice of test subset size:
                        <list type="enumerated">
                            <item>
                                Significance of interfaces. Those interfaces more
                                significant than others should be included in the
                                test subset. One major factor of ``significance'' is
                                the security-relevance (SFR-enforcing interfaces
                                would be more significant than SFR-supporting
                                interfaces, which are more significant than
                                SFR-non-interfering interfaces; see CC Part 3
                                Subclause <xref show="link" id="adv_fsp"/>). The other
                                major factor of ``significance'' is the number of
                                SFRs mapping to this interface (as determined when
                                identifying the correspondence between levels of
                                abstraction in <xref id="adv" show="id"/>).
                            </item>
                            <item>
                                Complexity of the interface. Complex interfaces may
                                require complex tests that impose onerous
                                requirements on the developer or evaluator, which
                                may not be conducive to cost-effective
                                evaluations. Conversely, they are a likely area to
                                find errors and are good candidates for the
                                subset. The evaluator will need to strike a balance
                                between these considerations.
                            </item>
                            <item>
                                Implicit testing. Testing some interfaces may often
                                implicitly test other interfaces, and their
                                inclusion in the subset may maximise the number of
                                interfaces tested (albeit implicitly). Certain
                                interfaces will typically be used to provide a
                                variety of security functionality, and will tend to
                                be the target of an effective testing approach.
                            </item>
                            <item>
                                Types of interfaces (e.g. programmatic,
                                command-line, protocol). The evaluator should
                                consider including tests for all different types of
                                interfaces that the TOE supports.
                            </item>
                            <item>
                                Interfaces that give rise to features that are
                                innovative or unusual. Where the TOE contains
                                innovative or unusual features, which may feature
                                strongly in marketing literature and guidance
                                documents, the corresponding interfaces should be
                                strong candidates for testing.
                            </item>
                        </list>

                        This guidance articulates factors to consider during the
                        selection process of an appropriate test subset, but
                        these are by no means exhaustive.
                    </m-workunit><m-workunit id="ate_ind.1-4">

                    The evaluator shall produce test documentation for the
                    test subset that is sufficiently detailed to enable the
                    tests to be reproducible.

                    With an understanding of the expected behaviour of the
                    TSF, from the ST and the functional specification, the
                    evaluator has to determine the most feasible way to test
                    the interface. Specifically the evaluator considers:
                    <list type="enumerated">
                        <item>
                            the approach that will be used, for instance,
                            whether an external interface will be tested, or an
                            internal interface using a test harness, or will an
                            alternate test approach be employed (e.g. in
                            exceptional circumstances, a code inspection, if the
                            implementation representation is available);
                        </item>
                        <item>
                            the interface(s) that will be used to test and
                            observe responses;
                        </item>
                        <item>
                            the initial conditions that will need to exist for
                            the test (i.e. any particular objects or subjects
                            that will need to exist and security attributes they
                            will need to have);
                        </item>
                        <item>
                            special test equipment that will be required to
                            either stimulate an interface (e.g. packet
                            generators) or make observations of an interface
                            (e.g. network analysers).
                        </item>
                    </list>

                    The evaluator may find it practical to test each
                    interface using a series of test cases, where each test
                    case will test a very specific aspect of expected
                    behaviour.

                    The evaluator's test documentation should specify the
                    derivation of each test, tracing it back to the relevant
                    interface(s).
                </m-workunit><m-workunit id="ate_ind.1-5">

                    The evaluator shall conduct testing.

                    The evaluator uses the test documentation developed as a
                    basis for executing tests on the TOE. The test
                    documentation is used as a basis for testing but this
                    does not preclude the evaluator from performing
                    additional ad hoc tests. The evaluator may devise new
                    tests based on behaviour of the TOE discovered during
                    testing. These new tests are recorded in the test
                    documentation.
                </m-workunit><m-workunit id="ate_ind.1-6">

                    The evaluator shall record the following information
                    about the tests that compose the test subset:
                    <list type="enumerated">
                        <item>
                            identification of the interface behaviour to be
                            tested;
                        </item>
                        <item>
                            instructions to connect and setup all required test
                            equipment as required to conduct the test;
                        </item>
                        <item>
                            instructions to establish all prerequisite test
                            conditions;
                        </item>
                        <item>
                            instructions to stimulate the interface;
                        </item>
                        <item>
                            instructions for observing the behaviour of the
                            interface;
                        </item>
                        <item>
                            descriptions of all expected results and the
                            necessary analysis to be performed on the observed
                            behaviour for comparison against expected results;
                        </item>
                        <item>
                            instructions to conclude the test and establish the
                            necessary post-test state for the TOE;
                        </item>
                        <item>
                            actual test results.
                        </item>
                    </list>

                    The level of detail should be such that another
                    evaluator could repeat the tests and obtain an
                    equivalent result. While some specific details of the
                    test results may be different (e.g. time and date fields
                    in an audit record) the overall result should be
                    identical.

                    There may be instances when it is unnecessary to provide
                    all the information presented in this work unit
                    (e.g. the actual test results of a test may not require
                    any analysis before a comparison between the expected
                    results can be made). The determination to omit this
                    information is left to the evaluator, as is the
                    justification.
                </m-workunit><m-workunit id="ate_ind.1-7">

                    The evaluator shall check that all actual test results
                    are consistent with the expected test results.

                    Any differences in the actual and expected test results
                    may indicate that the TOE does not perform as specified
                    or that the evaluator test documentation may be
                    incorrect. Unexpected actual results may require
                    corrective maintenance to the TOE or test documentation
                    and perhaps require re-running of impacted tests and
                    modifying the test sample size and composition. This
                    determination is left to the evaluator, as is its
                    justification.
                </m-workunit><m-workunit id="ate_ind.1-8">

                    The evaluator shall report in the ETR the evaluator
                    testing effort, outlining the testing approach,
                    configuration, depth and results.

                    The evaluator testing information reported in the ETR allows the
                    evaluator to convey the overall testing approach and effort
                    expended on the testing activity during the evaluation. The
                    intent of providing this information is to give a meaningful
                    overview of the testing effort. It is not intended that the
                    information regarding testing in the ETR be an exact
                    reproduction of specific test instructions or results of
                    individual tests. The intention is to provide enough detail to
                    allow other evaluators and evaluation authorities to gain some insight about
                    the testing approach chosen, amount of testing performed, TOE
                    test configurations, and the overall results of the testing
                    activity.

                    Information that would typically be found in the ETR
                    subclause regarding the evaluator testing effort is:
                    <list type="enumerated">
                        <item>
                            TOE test configurations. The particular
                            configurations of the TOE that were tested;
                        </item>
                        <item>
                            subset size chosen. The amount of interfaces that
                            were tested during the evaluation and a
                            justification for the size;
                        </item>
                        <item>
                            selection criteria for the interfaces that compose
                            the subset. Brief statements about the factors
                            considered when selecting interfaces for inclusion
                            in the subset;
                        </item>
                        <item>
                            interfaces tested. A brief listing of the interfaces
                            that merited inclusion in the subset;
                        </item>
                        <item>
                            verdict for the activity. The overall judgement on
                            the results of testing during the evaluation.
                        </item>
                    </list>

                    This list is by no means exhaustive and is only intended
                    to provide some context as to the type of information
                    that should be present in the ETR concerning the testing
                    the evaluator performed during the evaluation.
                </m-workunit></ae-evaluator>
            </a-component>
            <a-component name="Independent testing - sample" id="ate_ind.2">
                <aco-hierarchical acomponent="ate_ind.1"/>
                <aco-dependsoncomponent acomponent="adv_fsp.2"/>
                <aco-dependsoncomponent acomponent="agd_ope.1"/>
                <aco-dependsoncomponent acomponent="agd_pre.1"/>
                <aco-dependsoncomponent acomponent="ate_cov.1"/>
                <aco-dependsoncomponent acomponent="ate_fun.1"/>
                <aco-objectives>

                    In this component, the objective is to demonstrate that
                    the TOE operates in accordance with its design
                    representations and guidance documents. Evaluator testing
                    confirms that the developer performed some tests of some
                    interfaces in the functional specification.
                </aco-objectives>
                <aco-application-notes>

                    The intent is that the developer should provide the
                    evaluator with materials necessary for the efficient
                    reproduction of developer tests. This may include such
                    things as machine-readable test documentation, test
                    programs, etc.

                    This component contains a requirement that the evaluator
                    has available test results from the developer to
                    supplement the programme of testing. The evaluator will
                    repeat a sample of the developer's tests to gain
                    confidence in the results obtained. Having established
                    such confidence the evaluator will build upon the
                    developer's testing by conducting additional tests that
                    exercise the TOE in a different manner. By using a
                    platform of validated developer test results the evaluator
                    is able to gain confidence that the TOE operates correctly
                    in a wider range of conditions than would be possible
                    purely using the developer's own efforts, given a fixed
                    level of resource. Having gained confidence that the
                    developer has tested the TOE, the evaluator will also have
                    more freedom, where appropriate, to concentrate testing in
                    areas where examination of documentation or specialist
                    knowledge has raised particular concerns.
                </aco-application-notes>
                <msa-objectives>

                    The goal of this activity is to determine, by
                    independently testing a subset of the TSF, whether the TOE
                    behaves as specified in the design documentation, and to
                    gain confidence in the developer's test results by
                    performing a sample of the developer's tests.
                </msa-objectives>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the functional specification;
                        </item>
                        <item>
                            the TOE design description;
                        </item>
                        <item>
                            the operational user guidance;
                        </item>
                        <item>
                            the preparative user guidance;
                        </item>
                        <item>
                            the configuration management documentation;
                        </item>
                        <item>
                            the test documentation;
                        </item>
                        <item>
                            the TOE suitable for testing.
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ate_ind.2.1d">
                    The developer shall provide the TOE for testing.
                </ae-developer>
                <ae-content id="ate_ind.2.1c">
                    The TOE shall be suitable for testing.
                </ae-content>
                <ae-content id="ate_ind.2.2c">
                    The developer shall provide an equivalent set of resources
                    to those that were used in the developer's functional
                    testing of the TSF.
                </ae-content>
                <ae-evaluator id="ate_ind.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ate_ind.2-1">
                        <ae-dc-element id="ate_ind.2.1c"/>

                        The evaluator shall examine the TOE to determine that
                        the test configuration is consistent with the
                        configuration under evaluation as specified in the
                        ST.

                        The TOE provided by the developer and identified in the
                        test plan should have the same unique reference as
                        established by the <xref id="alc_cmc" show="link"/>
                        sub-activities and identified in the ST
                        introduction.

                        It is possible for the ST to specify more than one
                        configuration for evaluation. The TOE may comprise a
                        number of distinct hardware and software entities that
                        need to be tested in accordance with the ST. The
                        evaluator verifies that all test configurations are
                        consistent with the ST.

                        The evaluator should consider the security objectives
                        for the operational environment described in the ST that
                        may apply to the test environment and ensure they are
                        met in the testing environment. There may be some
                        objectives for the operational environment that do not
                        apply to the test environment. For example, an objective
                        about user clearances may not apply; however, an
                        objective about a single point of connection to a
                        network would apply.

                        If any test resources are used (e.g. meters, analysers)
                        it will be the evaluator's responsibility to ensure that
                        these resources are calibrated correctly.
                    </m-workunit>
                    <m-workunit id="ate_ind.2-2">
                        <ae-dc-element id="ate_ind.2.1c"/>

                        The evaluator shall examine the TOE to determine that it has been installed properly and is in a known state.

                        It is possible for the evaluator to determine the state
                        of the TOE in a number of ways. For example, previous
                        successful completion of the <xref id="agd_pre.1" show="link"/> sub-activity will satisfy this work unit
                        if the evaluator still has confidence that the TOE being
                        used for testing was installed properly and is in a
                        known state. If this is not the case, then the evaluator
                        should follow the developer's procedures to install and
                        start up the TOE, using the supplied guidance
                        only.

                        If the evaluator has to perform the installation
                        procedures because the TOE is in an unknown state, this
                        work unit when successfully completed could satisfy work
                        unit <xref id="agd_pre.1-3" show="link"/>.
                    </m-workunit>
                    <m-workunit id="ate_ind.2-3">
                        <ae-dc-element id="ate_ind.2.2c"/>

                        The evaluator shall examine the set of resources provided by the developer
                        to determine that they are equivalent to the set of resources used by the
                        developer to functionally test the TSF.

                        The set of resource used by the developer is documented
                        in the developer test plan, as considered in the <xref id="ate_fun" show="link"/> family. The resource set may
                        include laboratory access and special test equipment,
                        among others. Resources that are not identical to those
                        used by the developer need to be equivalent in terms of
                        any impact they may have on test results.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ate_ind.2.2e">
                    The evaluator shall execute a sample of tests in the test
                    documentation to verify the developer test results.
                    <m-workunit id="ate_ind.2-4">

                        The evaluator shall conduct testing using a sample of
                        tests found in the developer test plan and
                        procedures.

                        The overall aim of this work unit is to perform a
                        sufficient number of the developer tests to confirm the
                        validity of the developer's test results. The evaluator
                        has to decide on the size of the sample, and the
                        developer tests that will compose the sample (see <xref id="eval-guidance-sampling" show="link"/>).

                        All the developer tests can be traced back to specific
                        interfaces. Therefore, the factors to consider in the
                        selection of the tests to compose the sample are similar
                        to those listed for subset selection in work-unit <xref id="ate_ind.2-6" show="link"/>. Additionally, the
                        evaluator may wish to employ a random sampling method to
                        select developer tests to include in the sample.
                    </m-workunit>
                    <m-workunit id="ate_ind.2-5">

                        The evaluator shall check that all the actual test
                        results are consistent with the expected test
                        results.

                        Inconsistencies between the developer's expected test
                        results and actual test results will compel the
                        evaluator to resolve the discrepancies. Inconsistencies
                        encountered by the evaluator could be resolved by a
                        valid explanation and resolution of the inconsistencies
                        by the developer.

                        If a satisfactory explanation or resolution can not be reached,
                        the evaluator's confidence in the developer's test results may be
                        lessened and it may be necessary for the evaluator to increase
                        the sample size to the extent that the subset identified in work unit
                        <xref id="ate_ind.2-4" show="link"/> is adequately tested:
                        deficiencies with the developer's tests need to result in either
                        corrective action to the TOE by the developer (e.g., if the inconsistency
                        is caused by incorrect behaviour) or to the developer's tests (e.g., if the
                        inconsistency is caused by an incorrect test), or in the production of new
                        tests by the evaluator.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ate_ind.2.3e">
                    The evaluator shall test a subset of the TSF to confirm that the
                    TSF operates as specified.
                    <m-workunit id="ate_ind.2-6">

                        The evaluator shall devise a test subset.

                        The evaluator selects a test subset and testing strategy
                        that is appropriate for the TOE. One extreme testing
                        strategy would be to have the test subset contain as
                        many interfaces as possible tested with little
                        rigour. Another testing strategy would be to have the
                        test subset contain a few interfaces based on their
                        perceived relevance and rigorously test these
                        interfaces.

                        Typically the testing approach taken by the evaluator
                        should fall somewhere between these two extremes. The
                        evaluator should exercise most of the interfaces using
                        at least one test, but testing need not demonstrate
                        exhaustive specification testing.

                        The evaluator, when selecting the subset of the
                        interfaces to be tested, should consider the following
                        factors:
                        <list type="enumerated">
                            <item>
                                The developer test evidence. The developer test
                                evidence consists of: the test documentation, the
                                available test coverage analysis, and the available
                                depth of testing analysis. The developer test
                                evidence will provide insight as to how the TSF has
                                been exercised by the developer during testing. The
                                evaluator applies this information when developing
                                new tests to independently test the
                                TOE. Specifically the evaluator should consider:
                                <list type="enumerated">
                                    <item>
                                        augmentation of developer testing for
                                        interfaces. The evaluator may wish to perform
                                        more of the same type of tests by varying
                                        parameters to more rigorously test the
                                        interface.
                                    </item>
                                    <item>
                                        supplementation of developer testing strategy
                                        for interfaces. The evaluator may wish to vary
                                        the testing approach of a specific interface by
                                        testing it using another test strategy.
                                    </item>
                                </list>
                            </item>
                            <item>
                                The number of interfaces from which to draw upon for
                                the test subset. Where the TSF includes only a small
                                number of relatively simple interfaces, it may be
                                practical to rigorously test all of them. In other
                                cases this may not be cost-effective, and sampling
                                is required.
                            </item>
                            <item>
                                Maintaining a balance of evaluation activities. The
                                evaluator effort expended on the test activity
                                should be commensurate with that expended on any
                                other evaluation activity.
                            </item>
                        </list>

                        The evaluator selects the interfaces to compose the
                        subset. This selection will depend on a number of
                        factors, and consideration of these factors may also
                        influence the choice of test subset size:
                        <list type="enumerated">
                            <item>
                                Rigour of developer testing of the interfaces. Those
                                interfaces that the evaluator determines require
                                additional testing should be included in the test
                                subset.
                            </item>
                            <item>
                                Developer test results. If the results of developer
                                tests cause the evaluator to doubt that an interface
                                is not properly implemented, then the evaluator
                                should include such interfaces in the test subset.
                            </item>
                            <item>
                                Significance of interfaces. Those interfaces more
                                significant than others should be included in the
                                test subset. One major factor of ``significance'' is
                                the security-relevance (SFR-enforcing interfaces
                                would be more significant than SFR-supporting
                                interfaces, which are more significant than
                                SFR-non-interfering interfaces; see CC Part 3
                                Subclause <xref id="adv_fsp" show="id"/>). The other
                                major factor of ``significance'' is the number of
                                SFRs mapping to this interface (as determined when
                                identifying the correspondence between levels of
                                abstraction in <xref id="adv" show="id"/>).
                            </item>
                            <item>
                                Complexity of interfaces. Interfaces that require
                                complex implementation may require complex tests
                                that impose onerous requirements on the developer or
                                evaluator, which may not be conducive to
                                cost-effective evaluations. Conversely, they are a
                                likely area to find errors and are good candidates
                                for the subset. The evaluator will need to strike a
                                balance between these considerations.
                            </item>
                            <item>
                                Implicit testing. Testing some interfaces may often
                                implicitly test other interfaces, and their
                                inclusion in the subset may maximise the number of
                                interfaces tested (albeit implicitly). Certain
                                interfaces will typically be used to provide a
                                variety of security functionality, and will tend to
                                be the target of an effective testing approach.
                            </item>
                            <item>
                                Types of interfaces (e.g. programmatic,
                                command-line, protocol). The evaluator should
                                consider including tests for all different types of
                                interfaces that the TOE supports.
                            </item>
                            <item>
                                Interfaces that give rise to features that are
                                innovative or unusual. Where the TOE contains
                                innovative or unusual features, which may feature
                                strongly in marketing literature and guidance
                                documents, the corresponding interfaces should be
                                strong candidates for testing.
                            </item>
                        </list>

                        This guidance articulates factors to consider during the
                        selection process of an appropriate test subset, but
                        these are by no means exhaustive.
                    </m-workunit><m-workunit id="ate_ind.2-7">

                    The evaluator shall produce test documentation for the
                    test subset that is sufficiently detailed to enable the
                    tests to be reproducible.

                    With an understanding of the expected behaviour of the
                    TSF, from the ST, the functional specification, and the
                    TOE design description, the evaluator has to determine
                    the most feasible way to test the
                    interface. Specifically the evaluator considers:
                    <list type="enumerated">
                        <item>
                            the approach that will be used, for instance,
                            whether an external interface will be tested, or an
                            internal interface using a test harness, or will an
                            alternate test approach be employed (e.g. in
                            exceptional circumstances, a code inspection);
                        </item>
                        <item>
                            the interface(s) that will be used to test and
                            observe responses;
                        </item>
                        <item>
                            the initial conditions that will need to exist for
                            the test (i.e. any particular objects or subjects
                            that will need to exist and security attributes they
                            will need to have);
                        </item>
                        <item>
                            special test equipment that will be required to
                            either stimulate an interface (e.g. packet
                            generators) or make observations of an interface
                            (e.g. network analysers).
                        </item>
                    </list>

                    The evaluator may find it practical to test each
                    interface using a series of test cases, where each test
                    case will test a very specific aspect of expected
                    behaviour of that interface.

                    The evaluator's test documentation should specify the
                    derivation of each test, tracing it back to the relevant
                    interface(s).
                </m-workunit><m-workunit id="ate_ind.2-8">

                    The evaluator shall conduct testing.

                    The evaluator uses the test documentation developed as a
                    basis for executing tests on the TOE. The test
                    documentation is used as a basis for testing but this
                    does not preclude the evaluator from performing
                    additional ad hoc tests. The evaluator may devise new
                    tests based on behaviour of the TOE discovered during
                    testing. These new tests are recorded in the test
                    documentation.
                </m-workunit><m-workunit id="ate_ind.2-9">

                    The evaluator shall record the following information
                    about the tests that compose the test subset:
                    <list type="enumerated">
                        <item>
                            identification of the interface behaviour to be
                            tested;
                        </item>
                        <item>
                            instructions to connect and setup all required test
                            equipment as required to conduct the test;
                        </item>
                        <item>
                            instructions to establish all prerequisite test
                            conditions;
                        </item>
                        <item>
                            instructions to stimulate the interface;
                        </item>
                        <item>
                            instructions for observing the interface;
                        </item>
                        <item>
                            descriptions of all expected results and the
                            necessary analysis to be performed on the observed
                            behaviour for comparison against expected results;
                        </item>
                        <item>
                            instructions to conclude the test and establish the
                            necessary post-test state for the TOE;
                        </item>
                        <item>
                            actual test results.
                        </item>
                    </list>

                    The level of detail should be such that another
                    evaluator could repeat the tests and obtain an
                    equivalent result. While some specific details of the
                    test results may be different (e.g. time and date fields
                    in an audit record) the overall result should be
                    identical.

                    There may be instances when it is unnecessary to provide
                    all the information presented in this work unit
                    (e.g. the actual test results of a test may not require
                    any analysis before a comparison between the expected
                    results can be made). The determination to omit this
                    information is left to the evaluator, as is the
                    justification.
                </m-workunit><m-workunit id="ate_ind.2-10">

                    The evaluator shall check that all actual test results
                    are consistent with the expected test results.

                    Any differences in the actual and expected test results
                    may indicate that the TOE does not perform as specified
                    or that the evaluator test documentation may be
                    incorrect. Unexpected actual results may require
                    corrective maintenance to the TOE or test documentation
                    and perhaps require re-running of impacted tests and
                    modifying the test sample size and composition. This
                    determination is left to the evaluator, as is its
                    justification.
                </m-workunit><m-workunit id="ate_ind.2-11">

                    The evaluator shall report in the ETR the evaluator
                    testing effort, outlining the testing approach,
                    configuration, depth and results.

                    The evaluator testing information reported in the ETR allows the
                    evaluator to convey the overall testing approach and effort
                    expended on the testing activity during the evaluation. The
                    intent of providing this information is to give a meaningful
                    overview of the testing effort. It is not intended that the
                    information regarding testing in the ETR be an exact
                    reproduction of specific test instructions or results of
                    individual tests. The intention is to provide enough detail to
                    allow other evaluators and evaluation authorities to gain some insight about
                    the testing approach chosen, amount of evaluator testing
                    performed, amount of developer tests performed, TOE test
                    configurations, and the overall results of the testing
                    activity.

                    Information that would typically be found in the ETR
                    subclause regarding the evaluator testing effort is:
                    <list type="enumerated">
                        <item>
                            TOE test configurations. The particular
                            configurations of the TOE that were tested.
                        </item>
                        <item>
                            subset size chosen. The amount of interfaces that
                            were tested during the evaluation and a
                            justification for the size.
                        </item>
                        <item>
                            selection criteria for the interfaces that compose
                            the subset. Brief statements about the factors
                            considered when selecting interfaces for inclusion
                            in the subset.
                        </item>
                        <item>
                            Interfaces tested. A brief listing of the interfaces
                            that merited inclusion in the subset.
                        </item>
                        <item>
                            developer tests performed. The amount of developer
                            tests performed and a brief description of the
                            criteria used to select the tests.
                        </item>
                        <item>
                            verdict for the activity. The overall judgement on
                            the results of testing during the evaluation.
                        </item>
                    </list>

                    This list is by no means exhaustive and is only intended
                    to provide some context as to the type of information
                    that should be present in the ETR concerning the testing
                    the evaluator performed during the evaluation.
                </m-workunit></ae-evaluator>
            </a-component>
            <a-component name="Independent testing - complete" id="ate_ind.3">
                <aco-hierarchical acomponent="ate_ind.2"/>
                <aco-dependsoncomponent acomponent="adv_fsp.4"/>
                <aco-dependsoncomponent acomponent="agd_ope.1"/>
                <aco-dependsoncomponent acomponent="agd_pre.1"/>
                <aco-dependsoncomponent acomponent="ate_cov.1"/>
                <aco-dependsoncomponent acomponent="ate_fun.1"/>
                <aco-objectives>
                    In this component, the objective is to demonstrate
                    that the TOE operates in accordance with its design
                    representations and guidance documents. Evaluator testing
                    includes repeating all of the developer tests.
                </aco-objectives>
                <aco-application-notes>

                    The intent is that the developer should provide the
                    evaluator with materials necessary for the efficient
                    reproduction of developer tests. This may include such
                    things as machine-readable test documentation, test
                    programs, etc.

                    In this component the evaluator must repeat all of the
                    developer's tests as part of the programme of testing. As
                    in the previous component the evaluator will also conduct
                    tests that aim to exercise the TSF in a different manner
                    from that achieved by the developer. In cases where
                    developer testing has been exhaustive, there may remain
                    little scope for this.
                </aco-application-notes>
                <ae-developer id="ate_ind.3.1d">
                    The developer shall provide the TOE for testing.
                </ae-developer>
                <ae-content id="ate_ind.3.1c">
                    The TOE shall be suitable for testing.
                </ae-content>
                <ae-content id="ate_ind.3.2c">
                    The developer shall provide an equivalent set of resources
                    to those that were used in the developer's functional
                    testing of the TSF.
                </ae-content>
                <ae-evaluator id="ate_ind.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                </ae-evaluator>
                <ae-evaluator id="ate_ind.3.2e">
                    The evaluator shall execute all tests in the test
                    documentation to verify the developer test results.
                </ae-evaluator>
                <ae-evaluator id="ate_ind.3.3e">
                    The evaluator shall test the TSF to confirm that the entire
                    TSF operates as specified.
                </ae-evaluator>
            </a-component>
        </a-family>
    </a-class>
    <a-class name="Vulnerability assessment" id="ava">
        <ac-introduction>

            The <xref id="ava" show="link"/> class addresses the
            possibility of exploitable vulnerabilities introduced in the
            development or the operation of the TOE.
        </ac-introduction>
        <ac-overview>

            Assurance class <xref id="ava" show="link"/> defines
            requirements directed at the identification of exploitable
            vulnerabilities. Specifically, it addresses those
            vulnerabilities introduced in the development, operation,
            misuse, or incorrect configuration of the TOE.
        </ac-overview>
        <ac-application-notes>

            Generally, the vulnerability assessment activity covers various
            vulnerabilities in the development and operation of the
            TOE. Development vulnerabilities take advantage of some property
            of the TOE which was introduced during its development,
            e.g. defeating the TSF self protection through tampering, direct
            attack or monitoring of the TSF, defeating the TSF domain
            separation through monitoring or direct attack the TSF, or
            defeating non-bypassability through circumventing (bypassing)
            the TSF.  Operational vulnerabilities take advantage of
            weaknesses in non-technical countermeasures to violate the TOE
            SFRs, e.g. misuse or incorrect configuration. Misuse
            investigates whether the TOE can be configured or used in a
            manner that is insecure, but that an administrator or user of
            the TOE would reasonably believe to be secure.

            Assessment of development vulnerabilities is covered by the
            assurance family <xref id="ava_van" show="id"/>. Basically,
            all development vulnerabilities can be considered in the
            context of <xref id="ava_van" show="id"/> due to the fact,
            that this family allows application of a wide range of
            assessment methodologies being unspecific to the kind of an
            attack scenario. These unspecific assessment methodologies
            comprise, among other, also the specific methodologies for
            those TSF where covert channels are to be considered (a
            channel capacity estimation can be done using informal
            engineering measurements, as well as actual test measurements)
            or can be overcome by the use of sufficient resources in the
            form of a direct attack (underlying technical concept of those
            TSF is based on probabilistic or permutational mechanisms; a
            qualification of their security behaviour and the effort
            required to overcome them can be made using a quantitative or
            statistical analysis).

            If there are security objectives specified in the ST to either
            to prevent one user of the TOE from observing activity
            associated with another user of the TOE, or to ensure that
            information flows cannot be used to achieve enforced illicit
            data signals, covert channel analysis should be considered
            during the conduct of the vulnerability analysis.  This is often
            reflected by the inclusion of <xref id="fpr_uno" show="link"/>
            and multilevel access control policies specified through <xref id="fdp_acc" show="link"/> and/or <xref id="fdp_ifc" show="link"/> requirements in the ST.
        </ac-application-notes>
        <ma-introduction>

            The purpose of the vulnerability assessment activity is to
            determine the exploitability of flaws or weaknesses in the TOE
            in the operational environment. This determination is based
            upon analysis of the evaluation evidence and a search of
            publicly available material by the evaluator and is supported
            by evaluator penetration testing.
        </ma-introduction>
        <a-family name="Vulnerability analysis" id="ava_van">
            <af-objectives>

                Vulnerability analysis is an assessment to determine whether
                potential vulnerabilities identified, during the evaluation
                of the development and anticipated operation of the TOE or
                by other methods (e.g. by flaw hypotheses or quantitative or
                statistical analysis of the security behaviour of the
                underlying security mechanisms), could allow attackers to
                violate the SFRs.

                Vulnerability analysis deals with the threats that an
                attacker will be able to discover flaws that will allow
                unauthorised access to data and functionality, allow the
                ability to interfere with or alter the TSF, or interfere
                with the authorised capabilities of other users.
            </af-objectives>
            <af-overview>

                Vulnerability analysis consists of the identification of
                flaws potentially introduced in the different refinement
                steps of the development (development vulnerabilities) or
                through the application of the guidance in operation of the
                TOE (operational vulnerabilities). It results in the
                definition of penetration tests through the collection of
                the necessary information concerning: (1) the completeness
                of the TSF (does the TSF counter all the postulated
                threats?), (2) the dependencies between all SFRs and (3)
                whether any of the SFRs can be undermined through unexpected
                behaviour of the TOE. These potential vulnerabilities are
                assessed through penetration testing to determine whether
                they could, in practise, be exploitable to compromise the
                security of the TOE.

                The characteristics of different levels of attack potential
                are discussed in CEM <xref show="none" id="when_to_use_ap"/>.
            </af-overview>
            <af-levelling-criteria>

                Levelling is based on an increasing rigour of vulnerability
                analysis by the evaluator and increased levels of attack
                potential required by an attacker to identify and exploit
                the potential vulnerabilities.
            </af-levelling-criteria>
            <a-component name="Vulnerability survey" id="ava_van.1">
                <aco-dependsoncomponent acomponent="adv_fsp.1"/>
                <aco-dependsoncomponent acomponent="agd_ope.1"/>
                <aco-dependsoncomponent acomponent="agd_pre.1"/>
                <aco-objectives>

                    A vulnerability survey of information available in the
                    public domain is performed by the evaluator to ascertain
                    potential vulnerabilities that may be easily found by an
                    attacker.

                    The evaluator performs penetration testing, to confirm
                    that the potential vulnerabilities cannot be exploited in
                    the operational environment for the TOE. Penetration
                    testing is performed by the evaluator assuming an attack
                    potential of Basic.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE, in its operational environment, has easily
                    identifiable exploitable vulnerabilities.
                </msa-objectives>
                <msa-application-notes>

                    The evaluator should consider performing additional tests
                    as a result of potential vulnerabilities encountered
                    during the conduct of other parts of the
                    evaluation.

                    The use of the term guidance in this sub-activity refers
                    to the operational guidance and the preparative
                    guidance.

                    Potential vulnerabilities may be in information that is
                    publicly available, or not, and may require skill to
                    exploit, or not. These two aspects are related, but are
                    distinct. It should not be assumed that, simply because a
                    potential vulnerability is identifiable from information
                    that is publicly available, it can be easily
                    exploited.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;
                        </item>
                        <item>
                            the guidance documentation;
                        </item>
                        <item>
                            the TOE suitable for testing;
                        </item>
                        <item>
                            information publicly available to support the
                            identification of potential vulnerabilities.
                        </item>
                    </list>

                    Other input for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            current information regarding potential
                            vulnerabilities (e.g. from an evaluation authority).
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ava_van.1.1d">
                    The developer shall provide the TOE for testing.
                </ae-developer>
                <ae-content id="ava_van.1.1c">
                    The TOE shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="ava_van.1.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ava_van.1-1">
                        <ae-dc-element id="ava_van.1.1c"/>

                        The evaluator shall examine the TOE to determine that
                        the test configuration is consistent with the
                        configuration under evaluation as specified in the
                        ST.

                        The TOE provided by the developer and identified in the
                        test plan should have the same unique reference as
                        established by the <xref id="alc_cmc" show="link"/>
                        sub-activities and identified in the ST
                        introduction.

                        It is possible for the ST to specify more than one
                        configuration for evaluation. The TOE may comprise a
                        number of distinct hardware and software entities that
                        need to be tested in accordance with the ST. The
                        evaluator verifies that all test configurations are
                        consistent with the ST.

                        The evaluator should consider the security objectives
                        for the operational environment described in the ST that
                        may apply to the test environment and ensure they are
                        met in the testing environment. There may be some
                        objectives for the operational environment that do not
                        apply to the test environment. For example, an objective
                        about user clearances may not apply; however, an
                        objective about a single point of connection to a
                        network would apply.

                        If any test resources are used (e.g. meters, analysers)
                        it will be the evaluator's responsibility to ensure that
                        these resources are calibrated correctly.
                    </m-workunit>
                    <m-workunit id="ava_van.1-2">
                        <ae-dc-element id="ava_van.1.1c"/>

                        The evaluator shall examine the TOE to determine that it
                        has been installed properly and is in a known
                        state

                        It is possible for the evaluator to determine the state
                        of the TOE in a number of ways. For example, previous
                        successful completion of the <xref id="agd_pre.1" show="link"/> sub-activity will satisfy this work unit
                        if the evaluator still has confidence that the TOE being
                        used for testing was installed properly and is in a
                        known state. If this is not the case, then the evaluator
                        should follow the developer's procedures to install and
                        start up the TOE, using the supplied guidance
                        only.

                        If the evaluator has to perform the installation
                        procedures because the TOE is in an unknown state, this
                        work unit when successfully completed could satisfy work
                        unit <xref id="agd_pre.1-3" show="link"/>.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.1.2e">
                    The evaluator shall perform a search of public domain
                    sources to identify potential vulnerabilities in the TOE.
                    <m-workunit id="ava_van.1-3">

                        The evaluator shall examine sources of information
                        publicly available to identify potential vulnerabilities
                        in the TOE.

                        The evaluator examines the sources of information
                        publicly available to support the identification of
                        possible potential vulnerabilities in the TOE. There are
                        many sources of publicly available information, which
                        should be considered, e.g. mailing lists and security
                        forums on the world wide web that report known
                        vulnerabilities in specified technologies.

                        The evaluator should not constrain their consideration
                        of publicly available information to the above, but
                        should consider any other relevant information
                        available.

                        While examining the evidence provided the evaluator will
                        use the information in the public domain to further
                        search for potential vulnerabilities. Where the
                        evaluators have identified areas of concern, the
                        evaluator should consider information publicly available
                        that relate to those areas of concern.

                        The availability of information that may be readily
                        available to an attacker that helps to identify and
                        facilitate attacks effectively operates to substantially
                        enhance the attack potential of a given attacker. The
                        accessibility of vulnerability information and
                        sophisticated attack tools on the Internet makes it more
                        likely that this information will be used in attempts to
                        identify potential vulnerabilities in the TOE and
                        exploit them. Modern search tools make such information
                        easily available to the evaluator, and the determination
                        of resistance to published potential vulnerabilities and
                        well known generic attacks can be achieved in a
                        cost-effective manner.

                        The search of the information publicly available should
                        be focused on those sources that refer specifically to
                        the product from which the TOE is derived. The
                        extensiveness of this search should consider the
                        following factors: TOE type, evaluator experience in
                        this TOE type, expected attack potential and the level
                        of <xref id="adv" show="id"/> evidence available.

                        The identification process is iterative, where the
                        identification of one potential vulnerability may lead
                        to identifying another area of concern that requires
                        further investigation.

                        The evaluator will report what actions were taken to
                        identify potential vulnerabilities in the information
                        publicly available. However, in this type of search, the
                        evaluator may not be able to describe the steps in
                        identifying potential vulnerabilities before the outset
                        of the examination, as the approach may evolve as a
                        result of findings during the search.

                        The evaluator will report the evidence examined in
                        completing the search for potential
                        vulnerabilities.
                    </m-workunit>
                    <m-workunit id="ava_van.1-4">

                        The evaluator shall record in the ETR the identified
                        potential vulnerabilities that are candidates for
                        testing and applicable to the TOE in its operational
                        environment.

                        It may be identified that no further consideration of
                        the potential vulnerability is required if for example
                        the evaluator identifies that measures in the
                        operational environment, either IT or non-IT, prevent
                        exploitation of the potential vulnerability in that
                        operational environment. For instance, restricting
                        physical access to the TOE to authorised users only may
                        effectively render a potential vulnerability to
                        tampering unexploitable.

                        The evaluator records any reasons for exclusion of
                        potential vulnerabilities from further consideration if
                        the evaluator determines that the potential
                        vulnerability is not applicable in the operational
                        environment. Otherwise the evaluator records the
                        potential vulnerability for further
                        consideration.

                        A list of potential vulnerabilities applicable to the
                        TOE in its operational environment, which can be used as
                        an input into penetration testing activities, shall be
                        reported in the ETR by the evaluators.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.1.3e">
                    The evaluator shall conduct penetration testing, based on
                    the identified potential vulnerabilities, to determine that
                    the TOE is resistant to attacks performed by an attacker
                    possessing Basic attack potential.
                    <m-workunit id="ava_van.1-5">

                        The evaluator shall devise penetration tests, based on
                        the independent search for potential
                        vulnerabilities.

                        The evaluator prepares for penetration testing as necessary to
                        determine the susceptibility of the TOE, in its operational
                        environment, to the potential vulnerabilities identified during
                        the search of the sources of information publicly available.
                        Any current information provided to the evaluator by a third
                        party (e.g. evaluation authority) regarding known potential
                        vulnerabilities will be considered by the evaluator, together
                        with any encountered potential vulnerabilities resulting from
                        the performance of other evaluation activities.

                        The evaluator will probably find it practical to carry
                        out penetration test using a series of test cases, where
                        each test case will test for a specific potential
                        vulnerability.

                        The evaluator is not expected to test for potential
                        vulnerabilities (including those in the public domain)
                        beyond those which required a Basic attack potential. In
                        some cases, however, it will be necessary to carry out a
                        test before the exploitability can be determined. Where,
                        as a result of evaluation expertise, the evaluator
                        discovers a potential vulnerability that is beyond Basic
                        attack potential, this is reported in the ETR as a
                        residual vulnerability.
                    </m-workunit>
                    <m-workunit id="ava_van.1-6">

                        The evaluator shall produce penetration test
                        documentation for the tests based on the list of
                        potential vulnerabilities in sufficient detail to enable
                        the tests to be repeatable. The test documentation shall
                        include:
                        <list type="enumerated">
                            <item>
                                identification of the potential vulnerability the
                                TOE is being tested for;
                            </item>
                            <item>
                                instructions to connect and setup all required test
                                equipment as required to conduct the penetration
                                test;
                            </item>
                            <item>
                                instructions to establish all penetration test
                                prerequisite initial conditions;
                            </item>
                            <item>
                                instructions to stimulate the TSF;
                            </item>
                            <item>
                                instructions for observing the behaviour of the TSF;
                            </item>
                            <item>
                                descriptions of all expected results and the
                                necessary analysis to be performed on the observed
                                behaviour for comparison against expected results;
                            </item>
                            <item>
                                instructions to conclude the test and establish the
                                necessary post-test state for the TOE.
                            </item>
                        </list>

                        The evaluator prepares for penetration testing based on
                        the list of potential vulnerabilities identified during
                        the search of the public domain.

                        The evaluator is not expected to determine the
                        exploitability for potential vulnerabilities beyond
                        those for which a Basic attack potential is required to
                        effect an attack. However, as a result of evaluation
                        expertise, the evaluator may discover a potential
                        vulnerability that is exploitable only by an attacker
                        with greater than Basic attack potential. Such
                        vulnerabilities are to be reported in the ETR as
                        residual vulnerabilities.

                        With an understanding of the potential vulnerability,
                        the evaluator determines the most feasible way to test
                        for the TOE's susceptibility. Specifically the evaluator
                        considers:
                        <list type="enumerated">
                            <item>
                                the TSFI or other TOE interface that will be used to
                                stimulate the TSF and observe responses;
                            </item>
                            <item>
                                initial conditions that will need to exist for the
                                test (i.e. any particular objects or subjects that
                                will need to exist and security attributes they will
                                need to have);
                            </item>
                            <item>
                                special test equipment that will be required to
                                either stimulate a TSFI or make observations of a
                                TSFI (although it is unlikely that specialist
                                equipment would be required to exploit a potential
                                vulnerability assuming a Basic attack potential);
                            </item>
                            <item>
                                whether theoretical analysis should replace physical
                                testing, particularly relevant where the results of
                                an initial test can be extrapolated to demonstrate
                                that repeated attempts of an attack are likely to
                                succeed after a given number of attempts.
                            </item>
                        </list>

                        The evaluator will probably find it practical to carry
                        out penetration testing using a series of test cases,
                        where each test case will test for a specific potential
                        vulnerability.

                        The intent of specifying this level of detail in the
                        test documentation is to allow another evaluator to
                        repeat the tests and obtain an equivalent result.
                    </m-workunit>
                    <m-workunit id="ava_van.1-7">

                        The evaluator shall conduct penetration testing.

                        The evaluator uses the penetration test documentation
                        resulting from work unit <xref id="ava_van.1-5" show="link"/> as a basis for executing penetration tests
                        on the TOE, but this does not preclude the evaluator
                        from performing additional ad hoc penetration tests. If
                        required, the evaluator may devise ad hoc tests as a
                        result of information learnt during penetration testing
                        that, if performed by the evaluator, are to be recorded
                        in the penetration test documentation. Such tests may be
                        required to follow up unexpected results or
                        observations, or to investigate potential
                        vulnerabilities suggested to the evaluator during the
                        pre-planned testing.

                        The evaluator is not expected to test for potential
                        vulnerabilities (including those in the public domain)
                        beyond those which required a Basic attack potential. In
                        some cases, however, it will be necessary to carry out a
                        test before the exploitability can be determined. Where,
                        as a result of evaluation expertise, the evaluator
                        discovers a potential vulnerability that is beyond Basic
                        attack potential, this is reported in the ETR as a
                        residual vulnerability.
                    </m-workunit>
                    <m-workunit id="ava_van.1-8">

                        The evaluator shall record the actual results of the
                        penetration tests.

                        While some specific details of the actual test results
                        may be different from those expected (e.g. time and date
                        fields in an audit record) the overall result should be
                        identical. Any unexpected test results should be
                        investigated. The impact on the evaluation should be
                        stated and justified.
                    </m-workunit>
                    <m-workunit id="ava_van.1-9">

                        The evaluator shall report in the ETR the evaluator
                        penetration testing effort, outlining the testing
                        approach, configuration, depth and results.

                        The penetration testing information reported in the ETR
                        allows the evaluator to convey the overall penetration
                        testing approach and effort expended on this
                        sub-activity. The intent of providing this information
                        is to give a meaningful overview of the evaluator's
                        penetration testing effort. It is not intended that the
                        information regarding penetration testing in the ETR be
                        an exact reproduction of specific test steps or results
                        of individual penetration tests. The intention is to
                        provide enough detail to allow other evaluators and
                        evaluation authorities to gain some insight about the
                        penetration testing approach chosen, amount of
                        penetration testing performed, TOE test configurations,
                        and the overall results of the penetration testing
                        activity.

                        Information that would typically be found in the ETR
                        subclause regarding evaluator penetration testing efforts
                        is:
                        <list type="enumerated">
                            <item>
                                TOE test configurations. The particular
                                configurations of the TOE that were penetration
                                tested;
                            </item>
                            <item>
                                TSFI penetration tested. A brief listing of the TSFI
                                and other TOE interfaces that were the focus of the
                                penetration testing;
                            </item>
                            <item>
                                verdict for the sub-activity. The overall judgement
                                on the results of penetration testing.
                            </item>
                        </list>

                        This list is by no means exhaustive and is only intended
                        to provide some context as to the type of information
                        that should be present in the ETR concerning the
                        penetration testing the evaluator performed during the
                        evaluation.
                    </m-workunit>
                    <m-workunit id="ava_van.1-10">

                        The evaluator shall examine the results of all
                        penetration testing to determine that the TOE, in its
                        operational environment, is resistant to an attacker
                        possessing a Basic attack potential.

                        If the results reveal that the TOE, in its operational
                        environment, has vulnerabilities exploitable by an
                        attacker possessing less than Enhanced-Basic attack
                        potential, then this evaluator action fails.

                        The guidance in <xref id="weighted_parameters" show="link"/> should be used to determine the attack
                        potential required to exploit a particular vulnerability
                        and whether it can therefore be exploited in the
                        intended environment. It may not be necessary for the
                        attack potential to be calculated in every instance,
                        only if there is some doubt as to whether or not the
                        vulnerability can be exploited by an attacker possessing
                        an attack potential less than Enhanced-Basic.
                    </m-workunit>
                    <m-workunit id="ava_van.1-11">

                        The evaluator shall report in the ETR all exploitable
                        vulnerabilities and residual vulnerabilities, detailing
                        for each:
                        <list type="enumerated">
                            <item>
                                its source (e.g. CEM activity being undertaken when
                                it was conceived, known to the evaluator, read in a
                                publication);
                            </item>
                            <item>
                                the SFR(s) not met;
                            </item>
                            <item>
                                a description;
                            </item>
                            <item>
                                whether it is exploitable in its operational
                                environment or not (i.e. exploitable or residual).
                            </item>
                            <item>
                                the amount of time, level of expertise, level of
                                knowledge of the TOE, level of opportunity and the
                                equipment required to perform the identified
                                vulnerabilities, and the corresponding values using
                                the tables <xref id="ap_factors" show="link"/> and
                                <xref id="ap_rating" show="link"/> of Annex <xref id="weighted_parameters" show="link"/>.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Vulnerability analysis" id="ava_van.2">
                <aco-hierarchical acomponent="ava_van.1"/>
                <aco-dependsoncomponent acomponent="adv_arc.1"/>
                <aco-dependsoncomponent acomponent="adv_fsp.2"/>
                <aco-dependsoncomponent acomponent="adv_tds.1"/>
                <aco-dependsoncomponent acomponent="agd_ope.1"/>
                <aco-dependsoncomponent acomponent="agd_pre.1"/>
                <aco-objectives>

                    A vulnerability analysis is performed by the evaluator to
                    ascertain the presence of potential
                    vulnerabilities.

                    The evaluator performs penetration testing, to confirm
                    that the potential vulnerabilities cannot be exploited in
                    the operational environment for the TOE. Penetration
                    testing is performed by the evaluator assuming an attack
                    potential of Basic.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE, in its operational environment, has
                    vulnerabilities exploitable by attackers possessing Basic
                    attack potential.
                </msa-objectives>
                <msa-application-notes>

                    The evaluator should consider performing additional tests
                    as a result of potential vulnerabilities encountered
                    during other parts of the evaluation.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;</item>
                        <item>
                            the functional specification;</item>
                        <item>
                            the TOE design;</item>
                        <item>
                            the security architecture description;</item>
                        <item>
                            the guidance documentation;</item>
                        <item>
                            the TOE suitable for testing;</item>
                        <item>
                            information publicly available to support the
                            identification of possible potential
                            vulnerabilities.</item></list>

                    The remaining implicit evaluation evidence for this
                    sub-activity depends on the components that have been
                    included in the assurance package. The evidence provided
                    for each component is to be used as input in this
                    sub-activity.

                    Other input for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            current information regarding public domain potential
                            vulnerabilities and attacks (e.g. from an evaluation
                            authority).
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ava_van.2.1d">
                    The developer shall provide the TOE for testing.
                </ae-developer>
                <ae-content id="ava_van.2.1c">
                    The TOE shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="ava_van.2.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ava_van.2-1">
                        <ae-dc-element id="ava_van.2.1c"/>

                        The evaluator shall examine the TOE to determine that
                        the test configuration is consistent with the
                        configuration under evaluation as specified in the
                        ST.

                        The TOE provided by the developer and identified in the
                        test plan should have the same unique reference as
                        established by the <xref id="alc_cmc" show="link"/>
                        sub-activities and identified in the ST
                        introduction.

                        It is possible for the ST to specify more than one
                        configuration for evaluation. The TOE may comprise a
                        number of distinct hardware and software entities that
                        need to be tested in accordance with the ST. The
                        evaluator verifies that all test configurations are
                        consistent with the ST.

                        The evaluator should consider the security objectives
                        for the operational environment described in the ST that
                        may apply to the test environment and ensure they are
                        met in the testing environment. There may be some
                        objectives for the operational environment that do not
                        apply to the test environment. For example, an objective
                        about user clearances may not apply; however, an
                        objective about a single point of connection to a
                        network would apply.

                        If any test resources are used (e.g. meters, analysers)
                        it will be the evaluator's responsibility to ensure that
                        these resources are calibrated correctly.
                    </m-workunit>
                    <m-workunit id="ava_van.2-2">
                        <ae-dc-element id="ava_van.2.1c"/>

                        The evaluator shall examine the TOE to determine that it
                        has been installed properly and is in a known
                        state

                        It is possible for the evaluator to determine the state
                        of the TOE in a number of ways. For example, previous
                        successful completion of the <xref id="agd_pre.1" show="link"/> sub-activity will satisfy this work unit
                        if the evaluator still has confidence that the TOE being
                        used for testing was installed properly and is in a
                        known state. If this is not the case, then the evaluator
                        should follow the developer's procedures to install and
                        start up the TOE, using the supplied guidance
                        only.

                        If the evaluator has to perform the installation
                        procedures because the TOE is in an unknown state, this
                        work unit when successfully completed could satisfy work
                        unit <xref id="agd_pre.1-3" show="link"/>.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.2.2e">
                    The evaluator shall perform a search of public domain
                    sources to identify potential vulnerabilities in the TOE.
                    <m-workunit id="ava_van.2-3">

                        The evaluator shall examine sources of information
                        publicly available to identify potential vulnerabilities
                        in the TOE.

                        The evaluator examines the sources of information
                        publicly available to support the identification of
                        possible potential vulnerabilities in the TOE. There are
                        many sources of publicly available information which the
                        evaluator should consider using items such as those
                        available on the world wide web, including:
                        <list type="enumerated">
                            <item>
                                specialist publications (magazines, books);
                            </item>
                            <item>
                                research papers.
                            </item>
                        </list>

                        The evaluator should not constrain their consideration
                        of publicly available information to the above, but
                        should consider any other relevant information
                        available.

                        While examining the evidence provided the evaluator will
                        use the information in the public domain to further
                        search for potential vulnerabilities. Where the
                        evaluators have identified areas of concern, the
                        evaluator should consider information publicly available
                        that relate to those areas of concern.

                        The availability of information that may be readily
                        available to an attacker that helps to identify and
                        facilitate attacks may substantially enhance the attack
                        potential of a given attacker. The accessibility of
                        vulnerability information and sophisticated attack tools
                        on the Internet makes it more likely that this
                        information will be used in attempts to identify
                        potential vulnerabilities in the TOE and exploit
                        them. Modern search tools make such information easily
                        available to the evaluator, and the determination of
                        resistance to published potential vulnerabilities and
                        well known generic attacks can be achieved in a
                        cost-effective manner.

                        The search of the information publicly available should
                        be focused on those sources that refer specifically to
                        the product from which the TOE is derived. The
                        extensiveness of this search should consider the
                        following factors: TOE type, evaluator experience in
                        this TOE type, expected attack potential and the level
                        of <xref id="adv" show="id"/> evidence available.

                        The identification process is iterative, where the
                        identification of one potential vulnerability may lead
                        to identifying another area of concern that requires
                        further investigation.

                        The evaluator will report what actions were taken to
                        identify potential vulnerabilities in the
                        evidence. However, in this type of search, the evaluator
                        may not be able to describe the steps in identifying
                        potential vulnerabilities before the outset of the
                        examination, as the approach may evolve as a result of
                        findings during the search.

                        The evaluator will report the evidence examined in
                        completing the search for potential
                        vulnerabilities. This selection of evidence may be
                        derived from those areas of concern identified by the
                        evaluator, linked to the evidence the attacker is
                        assumed to be able to obtain, or according to another
                        rationale provided by the evaluator.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.2.3e">
                    The evaluator shall perform an independent vulnerability
                    analysis of the TOE using the guidance documentation,
                    functional specification, TOE design and security
                    architecture description to identify potential
                    vulnerabilities in the TOE.
                    <m-workunit id="ava_van.2-4">

                        The evaluator shall conduct a search of ST, guidance
                        documentation, functional specification, TOE design and
                        security architecture description evidence to identify
                        possible potential vulnerabilities in the TOE.

                        A search of the evidence should be completed whereby
                        specifications and documentation for the TOE are
                        analysed and then potential vulnerabilities in the TOE
                        are hypothesised, or speculated. The list of
                        hypothesised potential vulnerabilities is then
                        prioritised on the basis of the estimated probability
                        that a potential vulnerability exists and, assuming an
                        exploitable vulnerability does exist the attack
                        potential required to exploit it, and on the extent of
                        control or compromise it would provide. The prioritised
                        list of potential vulnerabilities is used to direct
                        penetration testing against the TOE.

                        The security architecture description provides the
                        developer vulnerability analysis, as it documents how
                        the TSF protects itself from interference from untrusted
                        subjects and prevents the bypass of security enforcement
                        functionality. Therefore, the evaluator should use this
                        description of the protection of the TSF as a basis for
                        the search for possible ways to undermine the
                        TSF.

                        Subject to the SFRs the TOE is to meet in the
                        operational environment, the evaluator's independent
                        vulnerability analysis should consider generic potential
                        vulnerabilities under each of the following headings:
                        <list type="enumerated">
                            <item>
                                generic potential vulnerabilities relevant for the
                                type of TOE being evaluated, as may be supplied by
                                the evaluation authority;</item>
                            <item>
                                bypassing;</item>
                            <item>
                                tampering;</item>
                            <item>
                                direct attacks;</item>
                            <item>
                                monitoring;</item>
                            <item>
                                misuse.</item></list>

                        Items b) - f) are explained in greater detail in <xref id="ava-van-annex" show="link"/>.

                        The security architecture description should be
                        considered in light of each of the above generic
                        potential vulnerabilities. Each potential vulnerability
                        should be considered to search for possible ways in
                        which to defeat the TSF protection and undermine the
                        TSF.
                    </m-workunit>
                    <m-workunit id="ava_van.2-5">

                        The evaluator shall record in the ETR the identified
                        potential vulnerabilities that are candidates for
                        testing and applicable to the TOE in its operational
                        environment.

                        It may be identified that no further consideration of
                        the potential vulnerability is required if for example
                        the evaluator identifies that measures in the
                        operational environment, either IT or non-IT, prevent
                        exploitation of the potential vulnerability in that
                        operational environment. For instance, restricting
                        physical access to the TOE to authorised users only may
                        effectively render a potential vulnerability to
                        tampering unexploitable.

                        The evaluator records any reasons for exclusion of
                        potential vulnerabilities from further consideration if
                        the evaluator determines that the potential
                        vulnerability is not applicable in the operational
                        environment. Otherwise the evaluator records the
                        potential vulnerability for further
                        consideration.

                        A list of potential vulnerabilities applicable to the
                        TOE in its operational environment, which can be used as
                        an input into penetration testing activities, shall be
                        reported in the ETR by the evaluators.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.2.4e">
                    The evaluator shall conduct penetration testing, based on
                    the identified potential vulnerabilities, to determine that
                    the TOE is resistant to attacks performed by an attacker
                    possessing Basic attack potential.
                    <m-workunit id="ava_van.2-6">

                        The evaluator shall devise penetration tests, based on
                        the independent search for potential
                        vulnerabilities.

                        The evaluator prepares for penetration testing as necessary to
                        determine the susceptibility of the TOE, in its operational
                        environment, to the potential vulnerabilities identified during
                        the search of the sources of information publicly available.
                        Any current information provided to the evaluator by a third
                        party (e.g. evaluation authority) regarding known potential
                        vulnerabilities will be considered by the evaluator, together
                        with any encountered potential vulnerabilities resulting from
                        the performance of other evaluation activities.

                        The evaluator is reminded that, as for considering the security
                        architecture description in the search for vulnerabilities (as
                        detailed in <xref id="ava_van.2-4" show="id"/>), testing should
                        be performed to confirm the architectural properties. This is
                        likely to require negative tests attempting to disprove the
                        properties of the security architecture. In developing the
                        strategy for penetration testing, the evaluator will ensure that
                        each of the major characteristics of the security architecture
                        description are tested, either in functional testing (as
                        considered in <xref id="ate" show="link"/>) or evaluator
                        penetration testing.

                        The evaluator will probably find it practical to carry
                        out penetration test using a series of test cases, where
                        each test case will test for a specific potential
                        vulnerability.

                        The evaluator is not expected to test for potential
                        vulnerabilities (including those in the public domain)
                        beyond those which required a Basic attack potential. In
                        some cases, however, it will be necessary to carry out a
                        test before the exploitability can be determined. Where,
                        as a result of evaluation expertise, the evaluator
                        discovers an exploitable vulnerability that is beyond
                        Basic attack potential, this is reported in the ETR as a
                        residual vulnerability.

                        Guidance on determining the necessary attack potential
                        to exploit a potential vulnerability can be found in
                        Annex <xref id="weighted_parameters" show="link"/>.

                        Potential vulnerabilities hypothesised as exploitable
                        only by attackers possessing Enhanced-Basic, Moderate or
                        High attack potential do not result in a failure of this
                        evaluator action. Where analysis supports the
                        hypothesis, these need not be considered further as an
                        input to penetration testing. However, such
                        vulnerabilities are reported in the ETR as residual
                        vulnerabilities.

                        Potential vulnerabilities hypothesised as exploitable by
                        an attacker possessing a Basic attack potential and
                        resulting in a violation of the security objectives
                        should be the highest priority potential vulnerabilities
                        comprising the list used to direct penetration testing
                        against the TOE.
                    </m-workunit>
                    <m-workunit id="ava_van.2-7">

                        The evaluator shall produce penetration test
                        documentation for the tests based on the list of
                        potential vulnerabilities in sufficient detail to enable
                        the tests to be repeatable. The test documentation shall
                        include:
                        <list type="enumerated">
                            <item>
                                identification of the potential vulnerability the
                                TOE is being tested for;
                            </item>
                            <item>
                                instructions to connect and setup all required test
                                equipment as required to conduct the penetration
                                test;
                            </item>
                            <item>
                                instructions to establish all penetration test
                                prerequisite initial conditions;
                            </item>
                            <item>
                                instructions to stimulate the TSF;
                            </item>
                            <item>
                                instructions for observing the behaviour of the TSF;
                            </item>
                            <item>
                                descriptions of all expected results and the
                                necessary analysis to be performed on the observed
                                behaviour for comparison against expected results;
                            </item>
                            <item>
                                instructions to conclude the test and establish the
                                necessary post-test state for the TOE.
                            </item>
                        </list>

                        The evaluator prepares for penetration testing based on
                        the list of potential vulnerabilities identified during
                        the search of the public domain and the analysis of the
                        evaluation evidence.

                        The evaluator is not expected to determine the
                        exploitability for potential vulnerabilities beyond
                        those for which a Basic attack potential is required to
                        effect an attack. However, as a result of evaluation
                        expertise, the evaluator may discover a potential
                        vulnerability that is exploitable only by an attacker
                        with greater than Basic attack potential. Such
                        vulnerabilities are to be reported in the ETR as
                        residual vulnerabilities.

                        With an understanding of the potential vulnerability,
                        the evaluator determines the most feasible way to test
                        for the TOE's susceptibility. Specifically the evaluator
                        considers:
                        <list type="enumerated">
                            <item>
                                the TSFI or other TOE interface that will be used to
                                stimulate the TSF and observe responses (It is
                                possible that the evaluator will need to use an
                                interface to the TOE other than the TSFI to
                                demonstrate properties of the TSF such as those
                                described in the security architecture description
                                (as required by <xref id="adv_arc" show="id"/>).  It
                                should the noted, that although these TOE interfaces
                                provide a means of testing the TSF properties, they
                                are not the subject of the test.);
                            </item>
                            <item>
                                initial conditions that will need to exist for the
                                test (i.e. any particular objects or subjects that
                                will need to exist and security attributes they will
                                need to have);
                            </item>
                            <item>
                                special test equipment that will be required to
                                either stimulate a TSFI or make observations of a
                                TSFI (although it is unlikely that specialist
                                equipment would be required to exploit a potential
                                vulnerability assuming a Basic attack potential);
                            </item>
                            <item>
                                whether theoretical analysis should replace physical
                                testing, particularly relevant where the results of
                                an initial test can be extrapolated to demonstrate
                                that repeated attempts of an attack are likely to
                                succeed after a given number of attempts.
                            </item>
                        </list>

                        The evaluator will probably find it practical to carry
                        out penetration testing using a series of test cases,
                        where each test case will test for a specific potential
                        vulnerability.

                        The intent of specifying this level of detail in the
                        test documentation is to allow another evaluator to
                        repeat the tests and obtain an equivalent result.
                    </m-workunit>
                    <m-workunit id="ava_van.2-8">

                        The evaluator shall conduct penetration testing.

                        The evaluator uses the penetration test documentation
                        resulting from work unit <xref id="ava_van.2-6" show="link"/> as a basis for executing penetration tests
                        on the TOE, but this does not preclude the evaluator
                        from performing additional ad hoc penetration tests. If
                        required, the evaluator may devise ad hoc tests as a
                        result of information learnt during penetration testing
                        that, if performed by the evaluator, are to be recorded
                        in the penetration test documentation. Such tests may be
                        required to follow up unexpected results or
                        observations, or to investigate potential
                        vulnerabilities suggested to the evaluator during the
                        pre-planned testing.

                        Should penetration testing show that a hypothesised
                        potential vulnerability does not exist, then the
                        evaluator should determine whether or not the
                        evaluator's own analysis was incorrect, or if evaluation
                        deliverables are incorrect or incomplete.

                        The evaluator is not expected to test for potential
                        vulnerabilities (including those in the public domain)
                        beyond those which required a Basic attack potential. In
                        some cases, however, it will be necessary to carry out a
                        test before the exploitability can be determined. Where,
                        as a result of evaluation expertise, the evaluator
                        discovers an exploitable vulnerability that is beyond
                        basic attack potential, this is reported in the ETR as a
                        residual vulnerability.
                    </m-workunit>
                    <m-workunit id="ava_van.2-9">

                        The evaluator shall record the actual results of the
                        penetration tests.

                        While some specific details of the actual test results
                        may be different from those expected (e.g. time and date
                        fields in an audit record) the overall result should be
                        identical. Any unexpected test results should be
                        investigated. The impact on the evaluation should be
                        stated and justified.
                    </m-workunit>
                    <m-workunit id="ava_van.2-10">

                        The evaluator shall report in the ETR the evaluator
                        penetration testing effort, outlining the testing
                        approach, configuration, depth and results.

                        The penetration testing information reported in the ETR
                        allows the evaluator to convey the overall penetration
                        testing approach and effort expended on this
                        sub-activity. The intent of providing this information
                        is to give a meaningful overview of the evaluator's
                        penetration testing effort. It is not intended that the
                        information regarding penetration testing in the ETR be
                        an exact reproduction of specific test steps or results
                        of individual penetration tests. The intention is to
                        provide enough detail to allow other evaluators and
                        evaluation authorities to gain some insight about the
                        penetration testing approach chosen, amount of
                        penetration testing performed, TOE test configurations,
                        and the overall results of the penetration testing
                        activity.

                        Information that would typically be found in the ETR
                        subclause regarding evaluator penetration testing efforts
                        is:
                        <list type="enumerated">
                            <item>
                                TOE test configurations. The particular
                                configurations of the TOE that were penetration
                                tested;
                            </item>
                            <item>
                                TSFI penetration tested. A brief listing of the TSFI
                                and other TOE interfaces that were the focus of the
                                penetration testing;
                            </item>
                            <item>
                                Verdict for the sub-activity. The overall judgement
                                on the results of penetration testing.
                            </item>
                        </list>

                        This list is by no means exhaustive and is only intended
                        to provide some context as to the type of information
                        that should be present in the ETR concerning the
                        penetration testing the evaluator performed during the
                        evaluation.
                    </m-workunit>
                    <m-workunit id="ava_van.2-11">

                        The evaluator shall examine the results of all
                        penetration testing to determine that the TOE, in its
                        operational environment, is resistant to an attacker
                        possessing a Basic attack potential.

                        If the results reveal that the TOE, in its operational
                        environment, has vulnerabilities exploitable by an
                        attacker possessing less than an Enhanced-Basic attack
                        potential, then this evaluator action fails.

                        The guidance in <xref id="weighted_parameters" show="link"/> should be used to determine the attack
                        potential required to exploit a particular vulnerability
                        and whether it can therefore be exploited in the
                        intended environment. It may not be necessary for the
                        attack potential to be calculated in every instance,
                        only if there is some doubt as to whether or not the
                        vulnerability can be exploited by an attacker possessing
                        an attack potential less than Enhanced-Basic.
                    </m-workunit>
                    <m-workunit id="ava_van.2-12">

                        The evaluator shall report in the ETR all exploitable
                        vulnerabilities and residual vulnerabilities, detailing
                        for each:
                        <list type="enumerated">
                            <item>
                                its source (e.g. CEM activity being undertaken when
                                it was conceived, known to the evaluator, read in a
                                publication);
                            </item>
                            <item>
                                the SFR(s) not met;
                            </item>
                            <item>
                                a description;
                            </item>
                            <item>
                                whether it is exploitable in its operational
                                environment or not (i.e. exploitable or residual).
                            </item>
                            <item>
                                the amount of time, level of expertise, level of
                                knowledge of the TOE, level of opportunity and the
                                equipment required to perform the identified
                                vulnerabilities, and the corresponding values using
                                the tables <xref id="ap_factors" show="link"/> and
                                <xref id="ap_rating" show="link"/> of Annex <xref id="weighted_parameters" show="link"/>.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Focused vulnerability analysis" id="ava_van.3">
                <aco-hierarchical acomponent="ava_van.2"/>
                <aco-dependsoncomponent acomponent="adv_arc.1"/>
                <aco-dependsoncomponent acomponent="adv_fsp.4"/>
                <aco-dependsoncomponent acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <aco-dependsoncomponent acomponent="agd_ope.1"/>
                <aco-dependsoncomponent acomponent="agd_pre.1"/><aco-dependsoncomponent acomponent="ate_dpt.1"/>
                <aco-objectives>

                    A vulnerability analysis is performed by the evaluator to
                    ascertain the presence of potential
                    vulnerabilities.

                    The evaluator performs penetration testing, to confirm
                    that the potential vulnerabilities cannot be exploited in
                    the operational environment for the TOE. Penetration
                    testing is performed by the evaluator assuming an attack
                    potential of Enhanced-Basic.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE, in its operational environment, has
                    vulnerabilities exploitable by attackers possessing
                    Enhanced-Basic attack potential.
                </msa-objectives>
                <msa-application-notes>

                    During the conduct of evaluation activities the evaluator
                    may also identify areas of concern. These are specific
                    portions of the TOE evidence that the evaluator has some
                    reservation about, although the evidence meets the
                    requirements for the activity with which the evidence is
                    associated. For example, a particular interface
                    specification looks particularly complex, and therefore
                    may be prone to error either in the development of the TOE
                    or in the operation of the TOE. There is no potential
                    vulnerability apparent at this stage, further
                    investigation is required. This is beyond the bounds of
                    encountered, as further investigation is required.

                    The focused approach to the identification of potential
                    vulnerabilities is an analysis of the evidence with the
                    aim of identifying any potential vulnerabilities evident
                    through the contained information. It is an unstructured
                    analysis, as the approach is not predetermined. Further
                    guidance on focused vulnerability analysis can be found in
                    Annex <xref id="focused" show="link"/>.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;</item>
                        <item>
                            the functional specification;</item>
                        <item>
                            the TOE design;</item>
                        <item>
                            the security architecture description;</item>
                        <item>
                            the implementation subset selected;</item>
                        <item>
                            the guidance documentation;</item>
                        <item>
                            the TOE suitable for testing;</item>
                        <item>
                            information publicly available to support the identification of possible potential vulnerabilities;
                        </item><item>
                        the results of the testing of the basic design.
                    </item></list>

                    The remaining implicit evaluation evidence for this
                    sub-activity depends on the components that have been
                    included in the assurance package. The evidence provided
                    for each component is to be used as input in this
                    sub-activity.

                    Other input for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            current information regarding public domain potential
                            vulnerabilities and attacks (e.g. from an evaluation
                            authority).
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ava_van.3.1d">
                    The developer shall provide the TOE for testing.
                </ae-developer>
                <ae-content id="ava_van.3.1c">
                    The TOE shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="ava_van.3.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ava_van.3-1">
                        <ae-dc-element id="ava_van.3.1c"/>

                        The evaluator shall examine the TOE to determine that
                        the test configuration is consistent with the
                        configuration under evaluation as specified in the
                        ST.

                        The TOE provided by the developer and identified in the
                        test plan should have the same unique reference as
                        established by the <xref id="alc_cmc" show="link"/>
                        sub-activities and identified in the ST
                        introduction.

                        It is possible for the ST to specify more than one
                        configuration for evaluation. The TOE may comprise a
                        number of distinct hardware and software entities that
                        need to be tested in accordance with the ST. The
                        evaluator verifies that all test configurations are
                        consistent with the ST.

                        The evaluator should consider the security objectives
                        for the operational environment described in the ST that
                        may apply to the test environment and ensure they are
                        met in the testing environment. There may be some
                        objectives for the operational environment that do not
                        apply to the test environment. For example, an objective
                        about user clearances may not apply; however, an
                        objective about a single point of connection to a
                        network would apply.

                        If any test resources are used (e.g. meters, analysers)
                        it will be the evaluator's responsibility to ensure that
                        these resources are calibrated correctly.
                    </m-workunit>
                    <m-workunit id="ava_van.3-2">
                        <ae-dc-element id="ava_van.3.1c"/>

                        The evaluator shall examine the TOE to determine that it
                        has been installed properly and is in a known
                        state

                        It is possible for the evaluator to determine the state
                        of the TOE in a number of ways. For example, previous
                        successful completion of the <xref id="agd_pre.1" show="link"/> sub-activity will satisfy this work unit
                        if the evaluator still has confidence that the TOE being
                        used for testing was installed properly and is in a
                        known state. If this is not the case, then the evaluator
                        should follow the developer's procedures to install and
                        start up the TOE, using the supplied guidance
                        only.

                        If the evaluator has to perform the installation
                        procedures because the TOE is in an unknown state, this
                        work unit when successfully completed could satisfy work
                        unit <xref id="agd_pre.1-3" show="link"/>.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.3.2e">
                    The evaluator shall perform a search of public domain
                    sources to identify potential vulnerabilities in the TOE.
                    <m-workunit id="ava_van.3-3">

                        The evaluator shall examine sources of information
                        publicly available to identify potential vulnerabilities
                        in the TOE.

                        The evaluator examines the sources of information
                        publicly available to support the identification of
                        possible potential vulnerabilities in the TOE. There are
                        many sources of publicly available information which the
                        evaluator should consider using items such as those
                        available on the world wide web, including:
                        <list type="enumerated">
                            <item>
                                specialist publications (magazines, books);
                            </item>
                            <item>
                                research papers;
                            </item>
                            <item>
                                conference proceedings.
                            </item>
                        </list>

                        The evaluator should not constrain their consideration
                        of publicly available information to the above, but
                        should consider any other relevant information
                        available.

                        While examining the evidence provided the evaluator will
                        use the information in the public domain to further
                        search for potential vulnerabilities. Where the
                        evaluators have identified areas of concern, the
                        evaluator should consider information publicly available
                        that relate to those areas of concern.

                        The availability of information that may be readily
                        available to an attacker that helps to identify and
                        facilitate attacks may substantially enhance the attack
                        potential of a given attacker. The accessibility of
                        vulnerability information and sophisticated attack tools
                        on the Internet makes it more likely that this
                        information will be used in attempts to identify
                        potential vulnerabilities in the TOE and exploit
                        them. Modern search tools make such information easily
                        available to the evaluator, and the determination of
                        resistance to published potential vulnerabilities and
                        well known generic attacks can be achieved in a
                        cost-effective manner.

                        The search of the information publicly available should
                        be focused on those sources that refer to the
                        technologies used in the development of the product from
                        which the TOE is derived. The extensiveness of this
                        search should consider the following factors: TOE type,
                        evaluator experience in this TOE type, expected attack
                        potential and the level of <xref id="adv" show="id"/>
                        evidence available.

                        The identification process is iterative, where the
                        identification of one potential vulnerability may lead
                        to identifying another area of concern that requires
                        further investigation.

                        The evaluator will report what actions were taken to
                        identify potential vulnerabilities in the
                        evidence. However, in this type of search, the evaluator
                        may not be able to describe the steps in identifying
                        potential vulnerabilities before the outset of the
                        examination, as the approach may evolve as a result of
                        findings during the search.

                        The evaluator will report the evidence examined in
                        completing the search for potential
                        vulnerabilities. This selection of evidence may be
                        derived from those areas of concern identified by the
                        evaluator, linked to the evidence the attacker is
                        assumed to be able to obtain, or according to another
                        rationale provided by the evaluator.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.3.3e">
                    The evaluator shall perform an independent, focused vulnerability analysis of the
                    TOE using the guidance documentation, functional specification, TOE design, security
                    architecture description and implementation representation to identify potential
                    vulnerabilities in the TOE.
                    <m-workunit id="ava_van.3-4">

                        The evaluator shall conduct a focused search of ST,
                        guidance documentation, functional specification, TOE
                        design, security architecture description and
                        implementation representation to identify possible
                        potential vulnerabilities in the TOE.

                        A flaw hypothesis methodology needs to be used whereby
                        specifications and development and guidance evidence are
                        analysed and then potential vulnerabilities in the TOE are
                        hypothesised, or speculated.

                        The evaluator uses the knowledge of the TOE design and operation
                        gained from the TOE deliverables to conduct a flaw hypothesis to
                        identify potential flaws in the development of the TOE and
                        potential errors in the specified method of operation of the
                        TOE.

                        The security architecture description provides the developer
                        vulnerability analysis, as it documents how the TSF protects
                        itself from interference from untrusted subjects and prevents
                        the bypass of security enforcement functionality. Therefore, the
                        evaluator should build upon the understanding of the TSF
                        protection gained from the analysis of this evidence and then
                        develop this in the knowledge gained from other development
                        <xref id="adv" show="id"/> evidence.


                        The approach taken is directed by areas of concern
                        identified during examination of the evidence during the
                        conduct of evaluation activities and ensuring a
                        representative sample of the development and guidance
                        evidence provided for the evaluation is searched.

                        For guidance on sampling see Annex <xref id="eval-guidance-sampling" show="link"/>. This guidance
                        should be considered when selecting the subset, giving
                        reasons for:
                        <list type="enumerated">
                            <item>
                                the approach used in selection;
                            </item>
                            <item>
                                qualification that the evidence to be examined
                                supports that approach.
                            </item>
                        </list>

                        The areas of concern may relate to the sufficiency of
                        specific protection features detailed in the security
                        architecture description.

                        The evidence to be considered during the vulnerability analysis
                        may be linked to the evidence the attacker is assumed to be able
                        to obtain. For example, the developer may protect the TOE design
                        and implementation representations, so the only information
                        assumed to be available to an attacker is the functional
                        specification and guidance (publicly available). So, although
                        the objectives for assurance in the TOE ensure the TOE design
                        and implementation representation requirements are met, these
                        design representations may only be searched to further
                        investigate areas of concerns.

                        On the other hand, if the source is publicly available it would
                        be reasonable to assume that the attacker has access to the
                        source and can use this in attempts to attack the
                        TOE. Therefore, the source should be considered in the focused
                        examination approach.

                        The following indicates examples for the selection of
                        the subset of evidence to be considered:
                        <list type="enumerated">
                            <item>
                                For an evaluation where all levels of design
                                abstraction from functional specification to
                                implementation representation are provided,
                                examination of information in the functional
                                specification and the implementation representation
                                may be selected, as the functional specification
                                provides detail of interfaces available to an
                                attacker, and the implementation representation
                                incorporates the design decisions made at all other
                                design abstractions. Therefore, the TOE design
                                information will be considered as part of the
                                implementation representation.
                            </item>
                            <item>
                                Examination of a particular subset of information in
                                each of the design representations provided for the
                                evaluation.
                            </item>
                            <item>
                                Coverage of particular SFRs through each of the
                                design representations provided for the evaluation.
                            </item>
                            <item>
                                Examination of each of the design representations
                                provided for the evaluation, considering different
                                SFRs within each design representations.
                            </item>
                            <item>
                                Examination of aspects of the evidence provided for
                                the evaluation relating to current potential
                                vulnerability information the evaluator has received
                                (e.g. from a scheme).
                            </item>
                        </list>

                        This approach to identification of potential
                        vulnerabilities is to take an ordered and planned
                        approach; applying a system to the examination. The
                        evaluator is to describe the method to be used in terms
                        of what evidence will be considered, the information
                        within the evidence that is to be examined, the manner
                        in which this information is to be considered and the
                        hypothesis that is to be created.

                        The following provide some examples that a hypothesis
                        may take:
                        <list type="enumerated">
                            <item>
                                consideration of malformed input for interfaces
                                available to an attacker at the external interfaces;
                            </item>
                            <item>
                                examination of a key security mechanism cited in the
                                security architecture description, such as process
                                separation, hypothesising internal buffer overflows
                                that may lead to degradation of separation;
                            </item>
                            <item>
                                search to identify any objects created in the TOE
                                implementation representation that are then not
                                fully controlled by the TSF, and could be used by an
                                attacker to undermine SFRs.
                            </item>
                        </list>

                        For example, the evaluator may identify that interfaces
                        are a potential area of weakness in the TOE and specify
                        an approach to the search that ``all interface
                        specifications provided in the functional specification
                        and TOE design will be searched to hypothesise potential
                        vulnerabilities'' and go on to explain the methods used
                        in the hypothesis.

                        The identification process is iterative, where the
                        identification of one potential vulnerability may lead
                        to identifying another area of concern that requires
                        further investigation.

                        The evaluator will report what actions were taken to
                        identify potential vulnerabilities in the
                        evidence. However, in this type of search, the evaluator
                        may not be able to describe the steps in identifying
                        potential vulnerabilities before the outset of the
                        examination, as the approach may evolve as a result of
                        findings during the search.

                        The evaluator will report the evidence examine in
                        completing the search for potential
                        vulnerabilities. This selection of evidence may be
                        derived from those areas of concern identified by the
                        evaluator, linked to the evidence the attacker is
                        assumed to be able to obtain, or according to another
                        rationale provided by the evaluator.

                        Subject to the SFRs the TOE is to meet in the
                        operational environment, the evaluator's independent
                        vulnerability analysis should consider generic potential
                        vulnerabilities under each of the following headings:
                        <list type="enumerated">
                            <item>
                                generic potential vulnerabilities relevant for the
                                type of TOE being evaluated, as may be supplied by
                                the evaluation authority;</item>
                            <item>
                                bypassing;</item>
                            <item>
                                tampering;</item>
                            <item>
                                direct attacks;</item>
                            <item>
                                monitoring;</item>
                            <item>
                                misuse.</item></list>

                        Items b) - f) are explained in greater detail in <xref id="ava-van-annex" show="link"/>.

                        The security architecture description should be
                        considered in light of each of the above generic
                        potential vulnerabilities. Each potential vulnerability
                        should be considered to search for possible ways in
                        which to defeat the TSF protection and undermine the
                        TSF.
                    </m-workunit><m-workunit id="ava_van.3-5">

                    The evaluator shall record in the ETR the identified
                    potential vulnerabilities that are candidates for
                    testing and applicable to the TOE in its operational
                    environment.

                    It may be identified that no further consideration of
                    the potential vulnerability is required if for example
                    the evaluator identifies that measures in the
                    operational environment, either IT or non-IT, prevent
                    exploitation of the potential vulnerability in that
                    operational environment. For instance, restricting
                    physical access to the TOE to authorised users only may
                    effectively render a potential vulnerability to
                    tampering unexploitable.

                    The evaluator records any reasons for exclusion of
                    potential vulnerabilities from further consideration if
                    the evaluator determines that the potential
                    vulnerability is not applicable in the operational
                    environment. Otherwise the evaluator records the
                    potential vulnerability for further
                    consideration.

                    A list of potential vulnerabilities applicable to the
                    TOE in its operational environment, which can be used as
                    an input into penetration testing activities, shall be
                    reported in the ETR by the evaluators.
                </m-workunit></ae-evaluator>
                <ae-evaluator id="ava_van.3.4e">
                    The evaluator shall conduct penetration testing, based on
                    the identified potential vulnerabilities, to determine that
                    the TOE is resistant to attacks performed by an attacker
                    possessing Enhanced-Basic attack potential.
                    <m-workunit id="ava_van.3-6">

                        The evaluator shall devise penetration tests, based on
                        the independent search for potential
                        vulnerabilities.

                        The evaluator prepares for penetration testing as necessary to
                        determine the susceptibility of the TOE, in its operational
                        environment, to the potential vulnerabilities identified during
                        the search of the sources of information publicly available.
                        Any current information provided to the evaluator by a third
                        party (e.g. evaluation authority) regarding known potential
                        vulnerabilities will be considered by the evaluator, together
                        with any encountered potential vulnerabilities resulting from
                        the performance of other evaluation activities.

                        The evaluator is reminded that, as for considering the security
                        architecture description in the search for vulnerabilities (as
                        detailed in <xref id="ava_van.3-4" show="id"/>), testing should
                        be performed to confirm the architectural properties. If
                        requirements from <xref id="ate_dpt" show="id"/> are included in
                        the SARs, the developer testing evidence will include testing
                        performed to confirm the correct implementation of any specific
                        mechanisms detailed in the security architecture
                        description. However, the developer testing will not necessarily
                        include testing of all aspects of the architectural properties
                        that protect the TSF, as much of this testing will be negative
                        testing in nature, attempting to disprove the properties. In
                        developing the strategy for penetration testing, the evaluator
                        will ensure that all aspects of the security architecture
                        description are tested, either in functional testing (as
                        considered in <xref id="ate" show="link"/>) or evaluator
                        penetration testing.

                        It will probably be practical to carry out penetration
                        test using a series of test cases, where each test case
                        will test for a specific potential vulnerability.

                        The evaluator is not expected to test for potential
                        vulnerabilities (including those in the public domain)
                        beyond those which required an Enhanced-Basic attack
                        potential. In some cases, however, it will be necessary
                        to carry out a test before the exploitability can be
                        determined. Where, as a result of evaluation expertise,
                        the evaluator discovers an exploitable vulnerability
                        that is beyond Enhanced-Basic attack potential, this is
                        reported in the ETR as a residual vulnerability.

                        Guidance on determining the necessary attack potential
                        to exploit a potential vulnerability can be found in
                        Annex <xref id="weighted_parameters" show="link"/>.

                        Potential vulnerabilities hypothesised as exploitable
                        only by attackers possessing Moderate or High attack
                        potential do not result in a failure of this evaluator
                        action. Where analysis supports the hypothesis, these
                        need not be considered further as an input to
                        penetration testing. However, such vulnerabilities are
                        reported in the ETR as residual vulnerabilities.

                        Potential vulnerabilities hypothesised as exploitable by
                        an attacker possessing a Basic or Enhanced-Basic attack
                        potential and resulting in a violation of the security
                        objectives should be the highest priority potential
                        vulnerabilities comprising the list used to direct
                        penetration testing against the TOE.
                    </m-workunit>
                    <m-workunit id="ava_van.3-7">

                        The evaluator shall produce penetration test
                        documentation for the tests based on the list of
                        potential vulnerabilities in sufficient detail to enable
                        the tests to be repeatable. The test documentation shall
                        include:
                        <list type="enumerated">
                            <item>
                                identification of the potential vulnerability the
                                TOE is being tested for;
                            </item>
                            <item>
                                instructions to connect and setup all required test
                                equipment as required to conduct the penetration
                                test;
                            </item>
                            <item>
                                instructions to establish all penetration test
                                prerequisite initial conditions;
                            </item>
                            <item>
                                instructions to stimulate the TSF;
                            </item>
                            <item>
                                instructions for observing the behaviour of the TSF;
                            </item>
                            <item>
                                descriptions of all expected results and the
                                necessary analysis to be performed on the observed
                                behaviour for comparison against expected results;
                            </item>
                            <item>
                                instructions to conclude the test and establish the
                                necessary post-test state for the TOE.
                            </item>
                        </list>

                        The evaluator prepares for penetration testing based on
                        the list of potential vulnerabilities identified during
                        the search of the public domain and the analysis of the
                        evaluation evidence.

                        The evaluator is not expected to determine the
                        exploitability for potential vulnerabilities beyond
                        those for which an Enhanced-Basic attack potential is
                        required to effect an attack. However, as a result of
                        evaluation expertise, the evaluator may discover a
                        potential vulnerability that is exploitable only by an
                        attacker with greater than Enhanced-Basic attack
                        potential. Such vulnerabilities are to be reported in
                        the ETR as residual vulnerabilities.

                        With an understanding of the potential vulnerability,
                        the evaluator determines the most feasible way to test
                        for the TOE's susceptibility. Specifically the evaluator
                        considers:
                        <list type="enumerated">
                            <item>
                                the TSFI or other TOE interface that will be used to
                                stimulate the TSF and observe responses (It is
                                possible that the evaluator will need to use an
                                interface to the TOE other than the TSFI to
                                demonstrate properties of the TSF such as those
                                described in the security architecture description
                                (as required by <xref id="adv_arc" show="id"/>).  It
                                should the noted, that although these TOE interfaces
                                provide a means of testing the TSF properties, they
                                are not the subject of the test.);
                            </item>
                            <item>
                                initial conditions that will need to exist for the
                                test (i.e. any particular objects or subjects that
                                will need to exist and security attributes they will
                                need to have);
                            </item>
                            <item>
                                special test equipment that will be required to
                                either stimulate a TSFI or make observations of a
                                TSFI (although it is unlikely that specialist
                                equipment would be required to exploit a potential
                                vulnerability assuming an Enhanced-Basic attack
                                potential);
                            </item>
                            <item>
                                whether theoretical analysis should replace physical
                                testing, particularly relevant where the results of
                                an initial test can be extrapolated to demonstrate
                                that repeated attempts of an attack are likely to
                                succeed after a given number of attempts.
                            </item>
                        </list>

                        The evaluator will probably find it practical to carry
                        out penetration testing using a series of test cases,
                        where each test case will test for a specific potential
                        vulnerability.

                        The intent of specifying this level of detail in the
                        test documentation is to allow another evaluator to
                        repeat the tests and obtain an equivalent result.
                    </m-workunit>
                    <m-workunit id="ava_van.3-8">

                        The evaluator shall conduct penetration testing.

                        The evaluator uses the penetration test documentation
                        resulting from work unit <xref id="ava_van.3-6" show="link"/> as a basis for executing penetration tests
                        on the TOE, but this does not preclude the evaluator
                        from performing additional ad hoc penetration tests. If
                        required, the evaluator may devise ad hoc tests as a
                        result of information learnt during penetration testing
                        that, if performed by the evaluator, are to be recorded
                        in the penetration test documentation. Such tests may be
                        required to follow up unexpected results or
                        observations, or to investigate potential
                        vulnerabilities suggested to the evaluator during the
                        pre-planned testing.

                        Should penetration testing show that a hypothesised
                        potential vulnerability does not exist, then the
                        evaluator should determine whether or not the
                        evaluator's own analysis was incorrect, or if evaluation
                        deliverables are incorrect or incomplete.

                        The evaluator is not expected to test for potential
                        vulnerabilities (including those in the public domain)
                        beyond those which required an Enhanced-Basic attack
                        potential. In some cases, however, it will be necessary
                        to carry out a test before the exploitability can be
                        determined. Where, as a result of evaluation expertise,
                        the evaluator discovers an exploitable vulnerability
                        that is beyond Enhanced-Basic attack potential, this is
                        reported in the ETR as a residual vulnerability.
                    </m-workunit>
                    <m-workunit id="ava_van.3-9">

                        The evaluator shall record the actual results of the
                        penetration tests.

                        While some specific details of the actual test results
                        may be different from those expected (e.g. time and date
                        fields in an audit record) the overall result should be
                        identical. Any unexpected test results should be
                        investigated. The impact on the evaluation should be
                        stated and justified.
                    </m-workunit>
                    <m-workunit id="ava_van.3-10">

                        The evaluator shall report in the ETR the evaluator
                        penetration testing effort, outlining the testing
                        approach, configuration, depth and results.

                        The penetration testing information reported in the ETR
                        allows the evaluator to convey the overall penetration
                        testing approach and effort expended on this
                        sub-activity. The intent of providing this information
                        is to give a meaningful overview of the evaluator's
                        penetration testing effort. It is not intended that the
                        information regarding penetration testing in the ETR be
                        an exact reproduction of specific test steps or results
                        of individual penetration tests. The intention is to
                        provide enough detail to allow other evaluators and
                        evaluation authorities to gain some insight about the
                        penetration testing approach chosen, amount of
                        penetration testing performed, TOE test configurations,
                        and the overall results of the penetration testing
                        activity.

                        Information that would typically be found in the ETR
                        subclause regarding evaluator penetration testing efforts
                        is:
                        <list type="enumerated">
                            <item>
                                TOE test configurations. The particular
                                configurations of the TOE that were penetration
                                tested;
                            </item>
                            <item>
                                TSFI penetration tested. A brief listing of the TSFI
                                and other TOE interfaces that were the focus of the
                                penetration testing;
                            </item>
                            <item>
                                Verdict for the sub-activity. The overall judgement
                                on the results of penetration testing.
                            </item>
                        </list>

                        This list is by no means exhaustive and is only intended
                        to provide some context as to the type of information
                        that should be present in the ETR concerning the
                        penetration testing the evaluator performed during the
                        evaluation.
                    </m-workunit>
                    <m-workunit id="ava_van.3-11">

                        The evaluator shall examine the results of all
                        penetration testing to determine that the TOE, in its
                        operational environment, is resistant to an attacker
                        possessing an Enhanced-Basic attack potential.

                        If the results reveal that the TOE, in its operational
                        environment, has vulnerabilities exploitable by an
                        attacker possessing less than Moderate attack potential,
                        then this evaluator action fails.

                        The guidance in <xref id="weighted_parameters" show="link"/> should be used to determine the attack
                        potential required to exploit a particular vulnerability
                        and whether it can therefore be exploited in the
                        intended environment. It may not be necessary for the
                        attack potential to be calculated in every instance,
                        only if there is some doubt as to whether or not the
                        vulnerability can be exploited by an attacker possessing
                        an attack potential less than Moderate.
                    </m-workunit>
                    <m-workunit id="ava_van.3-12">

                        The evaluator shall report in the ETR all exploitable
                        vulnerabilities and residual vulnerabilities, detailing
                        for each:
                        <list type="enumerated">
                            <item>
                                its source (e.g. CEM activity being undertaken when
                                it was conceived, known to the evaluator, read in a
                                publication);
                            </item>
                            <item>
                                the SFR(s) not met;
                            </item>
                            <item>
                                a description;
                            </item>
                            <item>
                                whether it is exploitable in its operational
                                environment or not (i.e. exploitable or residual).
                            </item>
                            <item>
                                the amount of time, level of expertise, level of
                                knowledge of the TOE, level of opportunity and the
                                equipment required to perform the identified
                                vulnerabilities, and the corresponding values using
                                the tables <xref id="ap_factors" show="link"/> and
                                <xref id="ap_rating" show="link"/> of Annex <xref id="weighted_parameters" show="link"/>.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Methodical vulnerability analysis" id="ava_van.4">
                <aco-hierarchical acomponent="ava_van.3"/>
                <aco-dependsoncomponent acomponent="adv_arc.1"/>
                <aco-dependsoncomponent acomponent="adv_fsp.4"/>
                <aco-dependsoncomponent acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <aco-dependsoncomponent acomponent="agd_ope.1"/>
                <aco-dependsoncomponent acomponent="agd_pre.1"/><aco-dependsoncomponent acomponent="ate_dpt.1"/>
                <aco-objectives>

                    A methodical vulnerability analysis is performed by the
                    evaluator to ascertain the presence of potential
                    vulnerabilities.

                    The evaluator performs penetration testing, to confirm
                    that the potential vulnerabilities cannot be exploited in
                    the operational environment for the TOE. Penetration
                    testing is performed by the evaluator assuming an attack
                    potential of Moderate.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE, in its operational environment, has
                    vulnerabilities exploitable by attackers possessing
                    Moderate attack potential.
                </msa-objectives>
                <msa-application-notes>

                    The methodical analysis approach takes the form of a
                    structured examination of the evidence. This method
                    requires the evaluator to specify the structure and form
                    the analysis will take (i.e. the manner in which the
                    analysis is performed is predetermined, unlike the focused
                    analysis).  The method is specified in terms of the
                    information that will be considered and how/why it will be
                    considered. Further guidance on methodical vulnerability
                    analysis can be found in Annex <xref id="methodical" show="link"/>.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;</item>
                        <item>
                            the functional specification;</item>
                        <item>
                            the TOE design;</item>
                        <item>
                            the security architecture description;</item>
                        <item>
                            the implementation representation;</item>
                        <item>
                            the guidance documentation;</item>
                        <item>
                            the TOE suitable for testing;</item>
                        <item>
                            information publicly available to support the identification of possible potential vulnerabilities;
                        </item><item>
                        the results of the testing of the basic design.
                    </item></list>

                    The remaining implicit evaluation evidence for this
                    sub-activity depends on the components that have been
                    included in the assurance package. The evidence provided
                    for each component is to be used as input in this
                    sub-activity.

                    Other input for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            current information regarding public domain potential
                            vulnerabilities and attacks (e.g. from an evaluation
                            authority).
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ava_van.4.1d">
                    The developer shall provide the TOE for testing.
                </ae-developer>
                <ae-content id="ava_van.4.1c">
                    The TOE shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="ava_van.4.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                    <m-workunit id="ava_van.4-1">
                        <ae-dc-element id="ava_van.4.1c"/>

                        The evaluator shall examine the TOE to determine that
                        the test configuration is consistent with the
                        configuration under evaluation as specified in the
                        ST.

                        The TOE provided by the developer and identified in the
                        test plan should have the same unique reference as
                        established by the <xref id="alc_cmc" show="link"/>
                        sub-activities and identified in the ST
                        introduction.

                        It is possible for the ST to specify more than one
                        configuration for evaluation. The TOE may comprise a
                        number of distinct hardware and software entities that
                        need to be tested in accordance with the ST. The
                        evaluator verifies that all test configurations are
                        consistent with the ST.

                        The evaluator should consider the security objectives
                        for the operational environment described in the ST that
                        may apply to the test environment and ensure they are
                        met in the testing environment. There may be some
                        objectives for the operational environment that do not
                        apply to the test environment. For example, an objective
                        about user clearances may not apply; however, an
                        objective about a single point of connection to a
                        network would apply.

                        If any test resources are used (e.g. meters, analysers)
                        it will be the evaluator's responsibility to ensure that
                        these resources are calibrated correctly.
                    </m-workunit>
                    <m-workunit id="ava_van.4-2">
                        <ae-dc-element id="ava_van.4.1c"/>

                        The evaluator shall examine the TOE to determine that it
                        has been installed properly and is in a known
                        state

                        It is possible for the evaluator to determine the state
                        of the TOE in a number of ways. For example, previous
                        successful completion of the <xref id="agd_pre.1" show="link"/> sub-activity will satisfy this work unit
                        if the evaluator still has confidence that the TOE being
                        used for testing was installed properly and is in a
                        known state. If this is not the case, then the evaluator
                        should follow the developer's procedures to install and
                        start up the TOE, using the supplied guidance
                        only.

                        If the evaluator has to perform the installation
                        procedures because the TOE is in an unknown state, this
                        work unit when successfully completed could satisfy work
                        unit <xref id="agd_pre.1-3" show="link"/>.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.4.2e">
                    The evaluator shall perform a search of public domain
                    sources to identify potential vulnerabilities in the TOE.
                    <m-workunit id="ava_van.4-3">

                        The evaluator shall examine sources of information
                        publicly available to identify potential vulnerabilities
                        in the TOE.

                        The evaluator examines the sources of information
                        publicly available to support the identification of
                        possible potential vulnerabilities in the TOE. There are
                        many sources of publicly available information which the
                        evaluator should consider using items such as those
                        available on the world wide web, including:
                        <list type="enumerated">
                            <item>
                                specialist publications (magazines, books);
                            </item>
                            <item>
                                research papers;
                            </item>
                            <item>
                                conference proceedings.
                            </item>
                        </list>

                        The evaluator should not constrain their consideration
                        of publicly available information to the above, but
                        should consider any other relevant information
                        available.

                        While examining the evidence provided the evaluator will
                        use the information in the public domain to further
                        search for potential vulnerabilities. Where the
                        evaluators have identified areas of concern, the
                        evaluator should consider information publicly available
                        that relate to those areas of concern.

                        The availability of information that may be readily
                        available to an attacker that helps to identify and
                        facilitate attacks may substantially enhance the attack
                        potential of a given attacker. The accessibility of
                        vulnerability information and sophisticated attack tools
                        on the Internet makes it more likely that this
                        information will be used in attempts to identify
                        potential vulnerabilities in the TOE and exploit
                        them. Modern search tools make such information easily
                        available to the evaluator, and the determination of
                        resistance to published potential vulnerabilities and
                        well known generic attacks can be achieved in a
                        cost-effective manner.

                        The search of the information publicly available should
                        be focused on those sources that refer to the
                        technologies used in the development of the product from
                        which the TOE is derived. The extensiveness of this
                        search should consider the following factors: TOE type,
                        evaluator experience in this TOE type, expected attack
                        potential and the level of <xref id="adv" show="id"/>
                        evidence available.

                        The identification process is iterative, where the
                        identification of one potential vulnerability may lead
                        to identifying another area of concern that requires
                        further investigation.

                        The evaluator will describe the approach to be taken to
                        identify potential vulnerabilities in the publicly
                        available material, detailing the search to be
                        performed. This may be driven by factors such as areas
                        of concern identified by the evaluator, linked to the
                        evidence the attacker is assumed to be able to obtain.
                        However, it is recognised that in this type of search
                        the approach may further evolve as a result of findings
                        during the search.  Therefore, the evaluator will also
                        report any actions taken in addition to those described
                        in the approach to further investigate issues thought to
                        lead to potential vulnerabilities, and will report the
                        evidence examined in completing the search for potential
                        vulnerabilities.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.4.3e">
                    The evaluator shall perform an independent, methodical
                    vulnerability analysis of the TOE using the guidance
                    documentation, functional specification, TOE design,
                    security architecture description and implementation
                    representation to identify potential vulnerabilities in the
                    TOE.
                    <m-workunit id="ava_van.4-4">

                        The evaluator shall conduct a methodical analysis of ST,
                        guidance documentation, functional specification, TOE
                        design, security architecture description and
                        implementation representation to identify possible
                        potential vulnerabilities in the TOE.

                        Guidance on methodical vulnerability analysis is
                        provided in Annex <xref id="methodical" show="link"/>.

                        This approach to identification of potential
                        vulnerabilities is to take an ordered and planned
                        approach. A system is to be applied in the
                        examination. The evaluator is to describe the method to
                        be used in terms of the manner in which this information
                        is to be considered and the hypothesis that is to be
                        created.

                        A flaw hypothesis methodology needs to be used whereby the ST,
                        development (functional specification, TOE design and
                        implementation representation) and guidance evidence are
                        analysed and then vulnerabilities in the TOE are hypothesised,
                        or speculated.

                        The evaluator uses the knowledge of the TOE design and operation
                        gained from the TOE deliverables to conduct a flaw hypothesis to
                        identify potential flaws in the development of the TOE and
                        potential errors in the specified method of operation of the
                        TOE.

                        The security architecture description provides the developer
                        vulnerability analysis, as it documents how the TSF protects
                        itself from interference from untrusted subjects and prevents
                        the bypass of security enforcement functionality. Therefore, the
                        evaluator should build upon the understanding of the TSF
                        protection gained from the analysis of this evidence and then
                        develop this in the knowledge gained from other development
                        <xref id="adv" show="id"/> evidence.

                        The approach taken to the methodical search for vulnerabilities
                        is to consider any areas of concern identified in the results of
                        the evaluator's assessment of the development and guidance
                        evidence. However, the evaluator should also consider each
                        aspect of the security architecture analysis to search for any
                        ways in which the protection of the TSF can be undermined. It
                        may be helpful to structure the methodical analysis on the basis
                        of the material presented in the security architecture
                        description, introducing concerns from other <xref id="adv" show="id"/> evidence as appropriate. The analysis can then be
                        further developed to ensure all other material from the <xref id="adv" show="id"/> evidence is considered.

                        The following provide some examples of hypotheses that
                        may be created when examining the evidence:
                        <list type="enumerated">
                            <item>
                                consideration of malformed input for interfaces
                                available to an attacker at the external interfaces;
                            </item>
                            <item>
                                examination of a key security mechanism cited in the
                                security architecture description, such as process
                                separation, hypothesising internal buffer overflows
                                that may lead to degradation of separation;
                            </item>
                            <item>
                                search to identify any objects created in the TOE
                                implementation representation that are then not
                                fully controlled by the TSF, and could be used by an
                                attacker to undermine SFRs.
                            </item>
                        </list>

                        For example, the evaluator may identify that interfaces
                        are a potential area of weakness in the TOE and specify
                        an approach to the search that 'all interface
                        specifications in the evidence provided will be searched
                        to hypothesise potential vulnerabilities' and go on to
                        explain the methods used in the hypothesis.

                        In addition, areas of concern the evaluator has identified
                        during examination of the evidence during the conduct of
                        evaluation activities. Areas of concern may also be identified
                        during the conduct of other work units associated with this
                        component, in particular <xref id="ava_van.4-7" show="link"/>,
                        <xref id="ava_van.4-5" show="link"/> and <xref id="ava_van.4-6" show="link"/> where the development and conduct of penetration
                        tests may identify further areas of concerns for investigation,
                        or potential vulnerabilities.

                        However, examination of only a subset of the development
                        and guidance evidence or their contents is not permitted
                        in this level of rigour. The approach description should
                        provide a demonstration that the methodical approach
                        used is complete, providing confidence that the approach
                        used to search the deliverables has considered all of
                        the information provided in those deliverables.

                        This approach to identification of potential vulnerabilities is
                        to take an ordered and planned approach; applying a system to
                        the examination. The evaluator is to describe the method to be
                        used in terms of how the evidence will be considered; the manner
                        in which this information is to be considered and the hypothesis
                        that is to be created. This approach should be agreed with the
                        evaluation authority, and the evaluation authority may
                        provide detail of any additional approaches the evaluator should
                        take to the vulnerability analysis and identify any additional
                        information that should be considered by the evaluator.

                        Although a system to identifying potential
                        vulnerabilities is predefined, the identification
                        process may still be iterative, where the identification
                        of one potential vulnerability may lead to identifying
                        another area of concern that requires further
                        investigation.

                        Subject to the SFRs the TOE is to meet in the
                        operational environment, the evaluator's independent
                        vulnerability analysis should consider generic potential
                        vulnerabilities under each of the following headings:
                        <list type="enumerated">
                            <item>
                                generic potential vulnerabilities relevant for the
                                type of TOE being evaluated, as may be supplied by
                                the evaluation authority;</item>
                            <item>
                                bypassing;</item>
                            <item>
                                tampering;</item>
                            <item>
                                direct attacks;</item>
                            <item>
                                monitoring;</item>
                            <item>
                                misuse.</item></list>

                        Items b) - f) are explained in greater detail in <xref id="ava-van-annex" show="link"/>.

                        The security architecture description should be
                        considered in light of each of the above generic
                        potential vulnerabilities. Each potential vulnerability
                        should be considered to search for possible ways in
                        which to defeat the TSF protection and undermine the
                        TSF.
                    </m-workunit>
                    <m-workunit id="ava_van.4-5">

                        The evaluator shall record in the ETR the identified
                        potential vulnerabilities that are candidates for
                        testing and applicable to the TOE in its operational
                        environment.

                        It may be identified that no further consideration of
                        the potential vulnerability is required if for example
                        the evaluator identifies that measures in the
                        operational environment, either IT or non-IT, prevent
                        exploitation of the potential vulnerability in that
                        operational environment. For instance, restricting
                        physical access to the TOE to authorised users only may
                        effectively render a potential vulnerability to
                        tampering unexploitable.

                        The evaluator records any reasons for exclusion of
                        potential vulnerabilities from further consideration if
                        the evaluator determines that the potential
                        vulnerability is not applicable in the operational
                        environment. Otherwise the evaluator records the
                        potential vulnerability for further
                        consideration.

                        A list of potential vulnerabilities applicable to the
                        TOE in its operational environment, which can be used as
                        an input into penetration testing activities, shall be
                        reported in the ETR by the evaluators.
                    </m-workunit>
                </ae-evaluator>
                <ae-evaluator id="ava_van.4.4e">
                    The evaluator shall conduct penetration testing based on the
                    identified potential vulnerabilities to determine that the
                    TOE is resistant to attacks performed by an attacker
                    possessing Moderate attack potential.
                    <m-workunit id="ava_van.4-6">

                        The evaluator shall devise penetration tests, based on
                        the independent search for potential
                        vulnerabilities.

                        The evaluator prepares for penetration testing as necessary to
                        determine the susceptibility of the TOE, in its operational
                        environment, to the potential vulnerabilities identified during
                        the search of the sources of information publicly available.
                        Any current information provided to the evaluator by a third
                        party (e.g. evaluation authority) regarding known potential
                        vulnerabilities will be considered by the evaluator, together
                        with any encountered potential vulnerabilities resulting from
                        the performance of other evaluation activities.

                        The evaluator is reminded that, as for considering the
                        security architecture description in the search for
                        vulnerabilities (as detailed in <xref id="ava_van.4-3" show="id"/>), testing should be performed to confirm the
                        architectural properties. If requirements from <xref id="ate_dpt" show="id"/> are included in the SARs, the
                        developer testing evidence will include testing
                        performed to confirm the correct implementation of any
                        specific mechanisms detailed in the security
                        architecture description. However, the developer testing
                        will not necessarily include testing of all aspects of
                        the architectural properties that protect the TSF, as
                        much of this testing will be negative testing in nature,
                        attempting to disprove the properties. In developing the
                        strategy for penetration testing, the evaluator will
                        ensure that all aspects of the security architecture
                        description are tested, either in functional testing (as
                        considered in <xref id="ate" show="link"/>) or evaluator
                        penetration testing.

                        The evaluator will probably find it practical to carry
                        out penetration test using a series of test cases, where
                        each test case will test for a specific potential
                        vulnerability.

                        The evaluator is not expected to test for potential
                        vulnerabilities (including those in the public domain)
                        beyond those which required a Moderate attack
                        potential. In some cases, however, it will be necessary
                        to carry out a test before the exploitability can be
                        determined. Where, as a result of evaluation expertise,
                        the evaluator discovers an exploitable vulnerability
                        that is beyond Moderate attack potential, this is
                        reported in the ETR as a residual vulnerability.

                        Guidance on determining the necessary attack potential
                        to exploit a potential vulnerability can be found in
                        Annex <xref id="weighted_parameters" show="link"/>.

                        Potential vulnerabilities hypothesised as exploitable by
                        an attacker possessing a Moderate (or less) attack
                        potential and resulting in a violation of the security
                        objectives should be the highest priority potential
                        vulnerabilities comprising the list used to direct
                        penetration testing against the TOE.
                    </m-workunit>
                    <m-workunit id="ava_van.4-7">

                        The evaluator shall produce penetration test
                        documentation for the tests based on the list of
                        potential vulnerabilities in sufficient detail to enable
                        the tests to be repeatable. The test documentation shall
                        include:
                        <list type="enumerated">
                            <item>
                                identification of the potential vulnerability the
                                TOE is being tested for;
                            </item>
                            <item>
                                instructions to connect and setup all required test
                                equipment as required to conduct the penetration
                                test;
                            </item>
                            <item>
                                instructions to establish all penetration test
                                prerequisite initial conditions;
                            </item>
                            <item>
                                instructions to stimulate the TSF;
                            </item>
                            <item>
                                instructions for observing the behaviour of the TSF;
                            </item>
                            <item>
                                descriptions of all expected results and the
                                necessary analysis to be performed on the observed
                                behaviour for comparison against expected results;
                            </item>
                            <item>
                                instructions to conclude the test and establish the
                                necessary post-test state for the TOE.
                            </item>
                        </list>

                        The evaluator prepares for penetration testing based on
                        the list of potential vulnerabilities identified during
                        the search of the public domain and the analysis of the
                        evaluation evidence.

                        The evaluator is not expected to determine the
                        exploitability for potential vulnerabilities beyond
                        those for which a Moderate attack potential is required
                        to effect an attack. However, as a result of evaluation
                        expertise, the evaluator may discover a potential
                        vulnerability that is exploitable only by an attacker
                        with greater than Moderate attack potential. Such
                        vulnerabilities are to be reported in the ETR as
                        residual vulnerabilities.

                        With an understanding of the potential vulnerability,
                        the evaluator determines the most feasible way to test
                        for the TOE's susceptibility. Specifically the evaluator
                        considers:
                        <list type="enumerated">
                            <item>
                                the TSFI or other TOE interface that will be used to
                                stimulate the TSF and observe responses (It is
                                possible that the evaluator will need to use an
                                interface to the TOE other than the TSFI to
                                demonstrate properties of the TSF such as those
                                described in the security architecture description
                                (as required by <xref id="adv_arc" show="id"/>).  It
                                should the noted, that although these TOE interfaces
                                provide a means of testing the TSF properties, they
                                are not the subject of the test.);
                            </item>
                            <item>
                                initial conditions that will need to exist for the
                                test (i.e. any particular objects or subjects that
                                will need to exist and security attributes they will
                                need to have);
                            </item>
                            <item>
                                special test equipment that will be required to
                                either stimulate a TSFI or make observations of a
                                TSFI;
                            </item>
                            <item>
                                whether theoretical analysis should replace physical
                                testing, particularly relevant where the results of
                                an initial test can be extrapolated to demonstrate
                                that repeated attempts of an attack are likely to
                                succeed after a given number of attempts.
                            </item>
                        </list>

                        The evaluator will probably find it practical to carry
                        out penetration testing using a series of test cases,
                        where each test case will test for a specific potential
                        vulnerability.

                        The intent of specifying this level of detail in the
                        test documentation is to allow another evaluator to
                        repeat the tests and obtain an equivalent result.
                    </m-workunit>
                    <m-workunit id="ava_van.4-8">

                        The evaluator shall conduct penetration testing.

                        The evaluator uses the penetration test documentation
                        resulting from work unit <xref id="ava_van.4-6" show="link"/> as a basis for executing penetration tests
                        on the TOE, but this does not preclude the evaluator
                        from performing additional ad hoc penetration tests. If
                        required, the evaluator may devise ad hoc tests as a
                        result of information learnt during penetration testing
                        that, if performed by the evaluator, are to be recorded
                        in the penetration test documentation. Such tests may be
                        required to follow up unexpected results or
                        observations, or to investigate potential
                        vulnerabilities suggested to the evaluator during the
                        pre-planned testing.

                        Should penetration testing show that a hypothesised
                        potential vulnerability does not exist, then the
                        evaluator should determine whether or not the
                        evaluator's own analysis was incorrect, or if evaluation
                        deliverables are incorrect or incomplete.

                        The evaluator is not expected to test for potential
                        vulnerabilities (including those in the public domain)
                        beyond those which required a Moderate attack
                        potential. In some cases, however, it will be necessary
                        to carry out a test before the exploitability can be
                        determined. Where, as a result of evaluation expertise,
                        the evaluator discovers an exploitable vulnerability
                        that is beyond Moderate attack potential, this is
                        reported in the ETR as a residual vulnerability.
                    </m-workunit>
                    <m-workunit id="ava_van.4-9">

                        The evaluator shall record the actual results of the
                        penetration tests.

                        While some specific details of the actual test results
                        may be different from those expected (e.g. time and date
                        fields in an audit record) the overall result should be
                        identical. Any unexpected test results should be
                        investigated. The impact on the evaluation should be
                        stated and justified.
                    </m-workunit>
                    <m-workunit id="ava_van.4-10">

                        The evaluator shall report in the ETR the evaluator
                        penetration testing effort, outlining the testing
                        approach, configuration, depth and results.

                        The penetration testing information reported in the ETR
                        allows the evaluator to convey the overall penetration
                        testing approach and effort expended on this
                        sub-activity. The intent of providing this information
                        is to give a meaningful overview of the evaluator's
                        penetration testing effort. It is not intended that the
                        information regarding penetration testing in the ETR be
                        an exact reproduction of specific test steps or results
                        of individual penetration tests. The intention is to
                        provide enough detail to allow other evaluators and
                        evaluation authorities to gain some insight about the
                        penetration testing approach chosen, amount of
                        penetration testing performed, TOE test configurations,
                        and the overall results of the penetration testing
                        activity.

                        Information that would typically be found in the ETR
                        subclause regarding evaluator penetration testing efforts
                        is:
                        <list type="enumerated">
                            <item>
                                TOE test configurations. The particular
                                configurations of the TOE that were penetration
                                tested;
                            </item>
                            <item>
                                TSFI penetration tested. A brief listing of the TSFI
                                and other TOE interfaces that were the focus of the
                                penetration testing;
                            </item>
                            <item>
                                Verdict for the sub-activity. The overall judgement
                                on the results of penetration testing.
                            </item>
                        </list>

                        This list is by no means exhaustive and is only intended
                        to provide some context as to the type of information
                        that should be present in the ETR concerning the
                        penetration testing the evaluator performed during the
                        evaluation.
                    </m-workunit>
                    <m-workunit id="ava_van.4-11">

                        The evaluator shall examine the results of all
                        penetration testing to determine that the TOE, in its
                        operational environment, is resistant to an attacker
                        possessing a Moderate attack potential.

                        If the results reveal that the TOE, in its operational
                        environment, has vulnerabilities exploitable by an
                        attacker possessing less than a High attack potential,
                        then this evaluator action fails.

                        The guidance in <xref id="weighted_parameters" show="link"/> should be used to determine the attack
                        potential required to exploit a particular vulnerability
                        and whether it can therefore be exploited in the
                        intended environment. It may not be necessary for the
                        attack potential to be calculated in every instance,
                        only if there is some doubt as to whether or not the
                        vulnerability can be exploited by an attacker possessing
                        an attack potential less than High.
                    </m-workunit>
                    <m-workunit id="ava_van.4-12">

                        The evaluator shall report in the ETR all exploitable
                        vulnerabilities and residual vulnerabilities, detailing
                        for each:
                        <list type="enumerated">
                            <item>
                                its source (e.g. CEM activity being undertaken when
                                it was conceived, known to the evaluator, read in a
                                publication);
                            </item>
                            <item>
                                the SFR(s) not met;
                            </item>
                            <item>
                                a description;
                            </item>
                            <item>
                                whether it is exploitable in its operational
                                environment or not (i.e. exploitable or residual).
                            </item>
                            <item>
                                the amount of time, level of expertise, level of
                                knowledge of the TOE, level of opportunity and the
                                equipment required to perform the identified
                                vulnerabilities, and the corresponding values using
                                the tables <xref id="ap_factors" show="link"/> and
                                <xref id="ap_rating" show="link"/> of Annex <xref id="weighted_parameters" show="link"/>.
                            </item>
                        </list>
                    </m-workunit>
                </ae-evaluator>
            </a-component>
            <a-component name="Advanced methodical vulnerability analysis" id="ava_van.5">
                <aco-hierarchical acomponent="ava_van.4"/>
                <aco-dependsoncomponent acomponent="adv_arc.1"/>
                <aco-dependsoncomponent acomponent="adv_fsp.4"/>
                <aco-dependsoncomponent acomponent="adv_tds.3"/>
                <aco-dependsoncomponent acomponent="adv_imp.1"/>
                <aco-dependsoncomponent acomponent="agd_ope.1"/>
                <aco-dependsoncomponent acomponent="agd_pre.1"/><aco-dependsoncomponent acomponent="ate_dpt.1"/>
                <aco-objectives>

                    A methodical vulnerability analysis is performed by the
                    evaluator to ascertain the presence of potential
                    vulnerabilities.

                    The evaluator performs penetration testing, to confirm
                    that the potential vulnerabilities cannot be exploited in
                    the operational environment for the TOE. Penetration
                    testing is performed by the evaluator assuming an attack
                    potential of High.
                </aco-objectives>
                <msa-objectives>

                    The objective of this sub-activity is to determine whether
                    the TOE, in its operational environment, has
                    vulnerabilities exploitable by attackers possessing High
                    attack potential.
                </msa-objectives>
                <msa-application-notes>

                    The methodical analysis approach takes the form of a
                    structured examination of the evidence. This method
                    requires the evaluator to specify the structure and form
                    the analysis will take (i.e. the manner in which the
                    analysis is performed is predetermined, unlike the focused
                    analysis).  The method is specified in terms of the
                    information that will be considered and how/why it will be
                    considered. Further guidance on methodical vulnerability
                    analysis can be found in Annex <xref id="methodical" show="link"/>.

                    If the TOE SFRs include <xref id="fpr_uno" show="id"/> and
                    <xref id="fdp_acc" show="id"/> requirements such that
                    actions and data of one subject cannot be observed and
                    linked with another subject, the evaluator should consider
                    performing a covert channel analysis.  This will build
                    upon the design evidence provided by the developer in
                    satisfaction of <xref id="adv_tds" show="id"/> and <xref id="adv_arc" show="id"/> requirements. The design evidence
                    will include details of how the TOE architecture prevents
                    observation by subjects of actions performed by other
                    subjects. the evaluator should seek guidance from the
                    evaluation authority on the conduct of such a covert
                    channel analysis.

                    The analysis of the guidance documentation is to include
                    consideration of whether it is possible to unknowingly
                    configure the TOE insecurely. Therefore, the analysis will
                    consider warning prompts provided by the TOE when
                    configuration options are selected by the user that may
                    render the TOE in an insecure state, not just in the
                    guidance but also in the use of the TOE. An example may be
                    when access control rules are amended from a remote
                    administration console, which will not take effect until
                    the TOE has been restarted.  The evaluator will determine
                    whether the TOE issues a suitable warning when the changes
                    are made to ensure the user is aware that a restart must
                    be completed before the changes take effect.
                </msa-application-notes>
                <msa-input>

                    The evaluation evidence for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            the ST;</item>
                        <item>
                            the functional specification;</item>
                        <item>
                            the TOE design;</item>
                        <item>
                            the security architecture description;</item>
                        <item>
                            the implementation representation;</item>
                        <item>
                            the guidance documentation;</item>
                        <item>
                            the TOE suitable for testing;</item>
                        <item>
                            information publicly available to support the
                            identification of possible potential
                            vulnerabilities.</item></list>

                    The remaining implicit evaluation evidence for this
                    sub-activity depends on the components that have been
                    included in the assurance package. The evidence provided
                    for each component is to be used as input in this
                    sub-activity.

                    Other input for this sub-activity is:
                    <list type="enumerated">
                        <item>
                            current information regarding public domain potential
                            vulnerabilities and attacks (e.g. from an evaluation
                            authority).
                        </item>
                    </list>
                </msa-input>
                <ae-developer id="ava_van.5.1d">
                    The developer shall provide the TOE for testing.
                </ae-developer>
                <ae-content id="ava_van.5.1c">
                    The TOE shall be suitable for testing.
                </ae-content>
                <ae-evaluator id="ava_van.5.1e">
                    The evaluator shall confirm that the information provided
                    meets all requirements for content and presentation of
                    evidence.
                </ae-evaluator>
                <ae-evaluator id="ava_van.5.2e">
                    The evaluator shall perform a search of public domain
                    sources to identify potential vulnerabilities in the TOE.
                </ae-evaluator>
                <ae-evaluator id="ava_van.5.3e">
                    The evaluator shall perform an independent, methodical
                    vulnerability analysis of the TOE using the guidance
                    documentation, functional specification, TOE design,
                    security architecture description and implementation
                    representation to identify potential vulnerabilities in the
                    TOE.
                </ae-evaluator>
                <ae-evaluator id="ava_van.5.4e">
                    The evaluator shall conduct penetration testing based on the
                    identified potential vulnerabilities to determine that the
                    TOE is resistant to attacks performed by an attacker
                    possessing High attack potential.
                </ae-evaluator>
            </a-component>
        </a-family>
    </a-class>
</cc>